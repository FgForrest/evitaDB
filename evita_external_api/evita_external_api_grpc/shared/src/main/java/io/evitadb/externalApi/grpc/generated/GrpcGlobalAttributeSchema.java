/*
 *
 *                         _ _        ____  ____
 *               _____   _(_) |_ __ _|  _ \| __ )
 *              / _ \ \ / / | __/ _` | | | |  _ \
 *             |  __/\ V /| | || (_| | |_| | |_) |
 *              \___| \_/ |_|\__\__,_|____/|____/
 *
 *   Copyright (c) 2023-2024
 *
 *   Licensed under the Business Source License, Version 1.1 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *   https://github.com/FgForrest/evitaDB/blob/master/LICENSE
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GrpcCatalogSchema.proto

package io.evitadb.externalApi.grpc.generated;

/**
 * <pre>
 * This is the definition object for attributes that are stored along with
 * catalog. Definition objects allow to describe the structure of the catalog so that
 * in any time everyone can consult complete structure of the catalog. Definition object is similar to Java reflection
 * process where you can also at any moment see which fields and methods are available for the class.
 * Catalog attributes allows defining set of data that are fetched in bulk along with the catalog body.
 * Attributes may be indexed for fast filtering or can be used to sort along. Attributes are not automatically indexed
 * in order not to waste precious memory space for data that will never be used in search queries.
 * Filtering in attributes is executed by using constraints like `and`, `or`, `not`. Sorting can be achieved with
 * `attributeNatural` or others.
 * Attributes are not recommended for bigger data as they are all loaded at once when requested.
 * </pre>
 *
 * Protobuf type {@code io.evitadb.externalApi.grpc.generated.GrpcGlobalAttributeSchema}
 */
public final class GrpcGlobalAttributeSchema extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:io.evitadb.externalApi.grpc.generated.GrpcGlobalAttributeSchema)
    GrpcGlobalAttributeSchemaOrBuilder {
private static final long serialVersionUID = 0L;
  // Use GrpcGlobalAttributeSchema.newBuilder() to construct.
  private GrpcGlobalAttributeSchema(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private GrpcGlobalAttributeSchema() {
    name_ = "";
    unique_ = 0;
    type_ = 0;
    uniqueGlobally_ = 0;
    nameVariant_ = java.util.Collections.emptyList();
    uniqueInScopes_ = java.util.Collections.emptyList();
    filterableInScopes_ = java.util.Collections.emptyList();
    sortableInScopes_ = java.util.Collections.emptyList();
    uniqueGloballyInScopes_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new GrpcGlobalAttributeSchema();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private GrpcGlobalAttributeSchema(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            name_ = s;
            break;
          }
          case 18: {
            com.google.protobuf.StringValue.Builder subBuilder = null;
            if (description_ != null) {
              subBuilder = description_.toBuilder();
            }
            description_ = input.readMessage(com.google.protobuf.StringValue.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(description_);
              description_ = subBuilder.buildPartial();
            }

            break;
          }
          case 26: {
            com.google.protobuf.StringValue.Builder subBuilder = null;
            if (deprecationNotice_ != null) {
              subBuilder = deprecationNotice_.toBuilder();
            }
            deprecationNotice_ = input.readMessage(com.google.protobuf.StringValue.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(deprecationNotice_);
              deprecationNotice_ = subBuilder.buildPartial();
            }

            break;
          }
          case 32: {
            int rawValue = input.readEnum();

            unique_ = rawValue;
            break;
          }
          case 40: {

            filterable_ = input.readBool();
            break;
          }
          case 48: {

            sortable_ = input.readBool();
            break;
          }
          case 56: {

            localized_ = input.readBool();
            break;
          }
          case 64: {

            nullable_ = input.readBool();
            break;
          }
          case 72: {

            representative_ = input.readBool();
            break;
          }
          case 80: {
            int rawValue = input.readEnum();

            type_ = rawValue;
            break;
          }
          case 90: {
            io.evitadb.externalApi.grpc.generated.GrpcEvitaValue.Builder subBuilder = null;
            if (defaultValue_ != null) {
              subBuilder = defaultValue_.toBuilder();
            }
            defaultValue_ = input.readMessage(io.evitadb.externalApi.grpc.generated.GrpcEvitaValue.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(defaultValue_);
              defaultValue_ = subBuilder.buildPartial();
            }

            break;
          }
          case 96: {

            indexedDecimalPlaces_ = input.readInt32();
            break;
          }
          case 104: {
            int rawValue = input.readEnum();

            uniqueGlobally_ = rawValue;
            break;
          }
          case 114: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              nameVariant_ = new java.util.ArrayList<io.evitadb.externalApi.grpc.generated.GrpcNameVariant>();
              mutable_bitField0_ |= 0x00000001;
            }
            nameVariant_.add(
                input.readMessage(io.evitadb.externalApi.grpc.generated.GrpcNameVariant.parser(), extensionRegistry));
            break;
          }
          case 122: {
            if (!((mutable_bitField0_ & 0x00000002) != 0)) {
              uniqueInScopes_ = new java.util.ArrayList<io.evitadb.externalApi.grpc.generated.GrpcScopedAttributeUniquenessType>();
              mutable_bitField0_ |= 0x00000002;
            }
            uniqueInScopes_.add(
                input.readMessage(io.evitadb.externalApi.grpc.generated.GrpcScopedAttributeUniquenessType.parser(), extensionRegistry));
            break;
          }
          case 128: {
            int rawValue = input.readEnum();
            if (!((mutable_bitField0_ & 0x00000004) != 0)) {
              filterableInScopes_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField0_ |= 0x00000004;
            }
            filterableInScopes_.add(rawValue);
            break;
          }
          case 130: {
            int length = input.readRawVarint32();
            int oldLimit = input.pushLimit(length);
            while(input.getBytesUntilLimit() > 0) {
              int rawValue = input.readEnum();
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                filterableInScopes_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              filterableInScopes_.add(rawValue);
            }
            input.popLimit(oldLimit);
            break;
          }
          case 136: {
            int rawValue = input.readEnum();
            if (!((mutable_bitField0_ & 0x00000008) != 0)) {
              sortableInScopes_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField0_ |= 0x00000008;
            }
            sortableInScopes_.add(rawValue);
            break;
          }
          case 138: {
            int length = input.readRawVarint32();
            int oldLimit = input.pushLimit(length);
            while(input.getBytesUntilLimit() > 0) {
              int rawValue = input.readEnum();
              if (!((mutable_bitField0_ & 0x00000008) != 0)) {
                sortableInScopes_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              sortableInScopes_.add(rawValue);
            }
            input.popLimit(oldLimit);
            break;
          }
          case 146: {
            if (!((mutable_bitField0_ & 0x00000010) != 0)) {
              uniqueGloballyInScopes_ = new java.util.ArrayList<io.evitadb.externalApi.grpc.generated.GrpcScopedGlobalAttributeUniquenessType>();
              mutable_bitField0_ |= 0x00000010;
            }
            uniqueGloballyInScopes_.add(
                input.readMessage(io.evitadb.externalApi.grpc.generated.GrpcScopedGlobalAttributeUniquenessType.parser(), extensionRegistry));
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        nameVariant_ = java.util.Collections.unmodifiableList(nameVariant_);
      }
      if (((mutable_bitField0_ & 0x00000002) != 0)) {
        uniqueInScopes_ = java.util.Collections.unmodifiableList(uniqueInScopes_);
      }
      if (((mutable_bitField0_ & 0x00000004) != 0)) {
        filterableInScopes_ = java.util.Collections.unmodifiableList(filterableInScopes_);
      }
      if (((mutable_bitField0_ & 0x00000008) != 0)) {
        sortableInScopes_ = java.util.Collections.unmodifiableList(sortableInScopes_);
      }
      if (((mutable_bitField0_ & 0x00000010) != 0)) {
        uniqueGloballyInScopes_ = java.util.Collections.unmodifiableList(uniqueGloballyInScopes_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.evitadb.externalApi.grpc.generated.GrpcCatalogSchemaOuterClass.internal_static_io_evitadb_externalApi_grpc_generated_GrpcGlobalAttributeSchema_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.evitadb.externalApi.grpc.generated.GrpcCatalogSchemaOuterClass.internal_static_io_evitadb_externalApi_grpc_generated_GrpcGlobalAttributeSchema_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.evitadb.externalApi.grpc.generated.GrpcGlobalAttributeSchema.class, io.evitadb.externalApi.grpc.generated.GrpcGlobalAttributeSchema.Builder.class);
  }

  public static final int NAME_FIELD_NUMBER = 1;
  private volatile java.lang.Object name_;
  /**
   * <code>string name = 1;</code>
   * @return The name.
   */
  @java.lang.Override
  public java.lang.String getName() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs =
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      name_ = s;
      return s;
    }
  }
  /**
   * <code>string name = 1;</code>
   * @return The bytes for name.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getNameBytes() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      name_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int DESCRIPTION_FIELD_NUMBER = 2;
  private com.google.protobuf.StringValue description_;
  /**
   * <pre>
   * optional description of the attribute
   * </pre>
   *
   * <code>.google.protobuf.StringValue description = 2;</code>
   * @return Whether the description field is set.
   */
  @java.lang.Override
  public boolean hasDescription() {
    return description_ != null;
  }
  /**
   * <pre>
   * optional description of the attribute
   * </pre>
   *
   * <code>.google.protobuf.StringValue description = 2;</code>
   * @return The description.
   */
  @java.lang.Override
  public com.google.protobuf.StringValue getDescription() {
    return description_ == null ? com.google.protobuf.StringValue.getDefaultInstance() : description_;
  }
  /**
   * <pre>
   * optional description of the attribute
   * </pre>
   *
   * <code>.google.protobuf.StringValue description = 2;</code>
   */
  @java.lang.Override
  public com.google.protobuf.StringValueOrBuilder getDescriptionOrBuilder() {
    return getDescription();
  }

  public static final int DEPRECATIONNOTICE_FIELD_NUMBER = 3;
  private com.google.protobuf.StringValue deprecationNotice_;
  /**
   * <pre>
   * optional deprecation notice
   * </pre>
   *
   * <code>.google.protobuf.StringValue deprecationNotice = 3;</code>
   * @return Whether the deprecationNotice field is set.
   */
  @java.lang.Override
  public boolean hasDeprecationNotice() {
    return deprecationNotice_ != null;
  }
  /**
   * <pre>
   * optional deprecation notice
   * </pre>
   *
   * <code>.google.protobuf.StringValue deprecationNotice = 3;</code>
   * @return The deprecationNotice.
   */
  @java.lang.Override
  public com.google.protobuf.StringValue getDeprecationNotice() {
    return deprecationNotice_ == null ? com.google.protobuf.StringValue.getDefaultInstance() : deprecationNotice_;
  }
  /**
   * <pre>
   * optional deprecation notice
   * </pre>
   *
   * <code>.google.protobuf.StringValue deprecationNotice = 3;</code>
   */
  @java.lang.Override
  public com.google.protobuf.StringValueOrBuilder getDeprecationNoticeOrBuilder() {
    return getDeprecationNotice();
  }

  public static final int UNIQUE_FIELD_NUMBER = 4;
  private int unique_;
  /**
   * <pre>
   * When attribute is unique it is automatically filterable, and it is ensured there is exactly one single entity
   * having certain value of this attribute among other entities in the same collection.
   * As an example of unique attribute can be EAN - there is no sense in having two entities with same EAN, and it's
   * better to have this ensured by the database engine.
   * deprecated in favor of `uniqueInScopes`
   * </pre>
   *
   * <code>.io.evitadb.externalApi.grpc.generated.GrpcAttributeUniquenessType unique = 4 [deprecated = true];</code>
   * @deprecated
   * @return The enum numeric value on the wire for unique.
   */
  @java.lang.Override @java.lang.Deprecated public int getUniqueValue() {
    return unique_;
  }
  /**
   * <pre>
   * When attribute is unique it is automatically filterable, and it is ensured there is exactly one single entity
   * having certain value of this attribute among other entities in the same collection.
   * As an example of unique attribute can be EAN - there is no sense in having two entities with same EAN, and it's
   * better to have this ensured by the database engine.
   * deprecated in favor of `uniqueInScopes`
   * </pre>
   *
   * <code>.io.evitadb.externalApi.grpc.generated.GrpcAttributeUniquenessType unique = 4 [deprecated = true];</code>
   * @deprecated
   * @return The unique.
   */
  @java.lang.Override @java.lang.Deprecated public io.evitadb.externalApi.grpc.generated.GrpcAttributeUniquenessType getUnique() {
    @SuppressWarnings("deprecation")
    io.evitadb.externalApi.grpc.generated.GrpcAttributeUniquenessType result = io.evitadb.externalApi.grpc.generated.GrpcAttributeUniquenessType.valueOf(unique_);
    return result == null ? io.evitadb.externalApi.grpc.generated.GrpcAttributeUniquenessType.UNRECOGNIZED : result;
  }

  public static final int FILTERABLE_FIELD_NUMBER = 5;
  private boolean filterable_;
  /**
   * <pre>
   * When attribute is filterable, it is possible to filter entities by this attribute. Do not mark attribute
   * as filterable unless you know that you'll search entities by this attribute. Each filterable attribute occupies
   * (memory/disk) space in the form of index.
   * When attribute is filterable, extra result `attributeHistogram`
   * can be requested for this attribute.
   * deprecated in favor of `filterableInScopes`
   * </pre>
   *
   * <code>bool filterable = 5 [deprecated = true];</code>
   * @deprecated
   * @return The filterable.
   */
  @java.lang.Override
  @java.lang.Deprecated public boolean getFilterable() {
    return filterable_;
  }

  public static final int SORTABLE_FIELD_NUMBER = 6;
  private boolean sortable_;
  /**
   * <pre>
   * When attribute is sortable, it is possible to sort entities by this attribute. Do not mark attribute
   * as sortable unless you know that you'll sort entities along this attribute. Each sortable attribute occupies
   * (memory/disk) space in the form of index..
   * deprecated in favor of `sortableInScopes`
   * </pre>
   *
   * <code>bool sortable = 6 [deprecated = true];</code>
   * @deprecated
   * @return The sortable.
   */
  @java.lang.Override
  @java.lang.Deprecated public boolean getSortable() {
    return sortable_;
  }

  public static final int LOCALIZED_FIELD_NUMBER = 7;
  private boolean localized_;
  /**
   * <pre>
   * When attribute is localized, it has to be ALWAYS used in connection with specific `Locale`.
   * </pre>
   *
   * <code>bool localized = 7;</code>
   * @return The localized.
   */
  @java.lang.Override
  public boolean getLocalized() {
    return localized_;
  }

  public static final int NULLABLE_FIELD_NUMBER = 8;
  private boolean nullable_;
  /**
   * <pre>
   * When attribute is nullable, its values may be missing in the entities. Otherwise, the system will enforce
   * non-null checks upon upserting of the entity.
   * </pre>
   *
   * <code>bool nullable = 8;</code>
   * @return The nullable.
   */
  @java.lang.Override
  public boolean getNullable() {
    return nullable_;
  }

  public static final int REPRESENTATIVE_FIELD_NUMBER = 9;
  private boolean representative_;
  /**
   * <pre>
   * If an attribute is flagged as representative, it should be used in developer tools along with the entity's
   * primary key to describe the entity or reference to that entity. The flag is completely optional and doesn't
   * affect the core functionality of the database in any way. However, if it's used correctly, it can be very
   * helpful to developers in quickly finding their way around the data. There should be very few representative
   * attributes in the entity type, and the unique ones are usually the best to choose.
   * </pre>
   *
   * <code>bool representative = 9;</code>
   * @return The representative.
   */
  @java.lang.Override
  public boolean getRepresentative() {
    return representative_;
  }

  public static final int TYPE_FIELD_NUMBER = 10;
  private int type_;
  /**
   * <pre>
   * Data type of the attribute. Must be one of Evita-supported values.
   * Internally the scalar is converted into Java-corresponding data type.
   * </pre>
   *
   * <code>.io.evitadb.externalApi.grpc.generated.GrpcEvitaDataType type = 10;</code>
   * @return The enum numeric value on the wire for type.
   */
  @java.lang.Override public int getTypeValue() {
    return type_;
  }
  /**
   * <pre>
   * Data type of the attribute. Must be one of Evita-supported values.
   * Internally the scalar is converted into Java-corresponding data type.
   * </pre>
   *
   * <code>.io.evitadb.externalApi.grpc.generated.GrpcEvitaDataType type = 10;</code>
   * @return The type.
   */
  @java.lang.Override public io.evitadb.externalApi.grpc.generated.GrpcEvitaDataType getType() {
    @SuppressWarnings("deprecation")
    io.evitadb.externalApi.grpc.generated.GrpcEvitaDataType result = io.evitadb.externalApi.grpc.generated.GrpcEvitaDataType.valueOf(type_);
    return result == null ? io.evitadb.externalApi.grpc.generated.GrpcEvitaDataType.UNRECOGNIZED : result;
  }

  public static final int DEFAULTVALUE_FIELD_NUMBER = 11;
  private io.evitadb.externalApi.grpc.generated.GrpcEvitaValue defaultValue_;
  /**
   * <pre>
   * Default value is used when the entity is created without this attribute specified. Default values allow to pass
   * non-null checks even if no attributes of such name are specified.
   * </pre>
   *
   * <code>.io.evitadb.externalApi.grpc.generated.GrpcEvitaValue defaultValue = 11;</code>
   * @return Whether the defaultValue field is set.
   */
  @java.lang.Override
  public boolean hasDefaultValue() {
    return defaultValue_ != null;
  }
  /**
   * <pre>
   * Default value is used when the entity is created without this attribute specified. Default values allow to pass
   * non-null checks even if no attributes of such name are specified.
   * </pre>
   *
   * <code>.io.evitadb.externalApi.grpc.generated.GrpcEvitaValue defaultValue = 11;</code>
   * @return The defaultValue.
   */
  @java.lang.Override
  public io.evitadb.externalApi.grpc.generated.GrpcEvitaValue getDefaultValue() {
    return defaultValue_ == null ? io.evitadb.externalApi.grpc.generated.GrpcEvitaValue.getDefaultInstance() : defaultValue_;
  }
  /**
   * <pre>
   * Default value is used when the entity is created without this attribute specified. Default values allow to pass
   * non-null checks even if no attributes of such name are specified.
   * </pre>
   *
   * <code>.io.evitadb.externalApi.grpc.generated.GrpcEvitaValue defaultValue = 11;</code>
   */
  @java.lang.Override
  public io.evitadb.externalApi.grpc.generated.GrpcEvitaValueOrBuilder getDefaultValueOrBuilder() {
    return getDefaultValue();
  }

  public static final int INDEXEDDECIMALPLACES_FIELD_NUMBER = 12;
  private int indexedDecimalPlaces_;
  /**
   * <pre>
   * Determines how many fractional places are important when entities are compared during filtering or sorting. It is
   * significant to know that all values of this attribute will be converted to {&#64;link java.lang.Integer}, so the attribute
   * number must not ever exceed maximum limits of {&#64;link java.lang.Integer} type when scaling the number by the power
   * of ten using `indexedDecimalPlaces` as exponent.
   * </pre>
   *
   * <code>int32 indexedDecimalPlaces = 12;</code>
   * @return The indexedDecimalPlaces.
   */
  @java.lang.Override
  public int getIndexedDecimalPlaces() {
    return indexedDecimalPlaces_;
  }

  public static final int UNIQUEGLOBALLY_FIELD_NUMBER = 13;
  private int uniqueGlobally_;
  /**
   * <pre>
   * When attribute is unique globally it is automatically filterable, and it is ensured there is exactly one single
   * entity having certain value of this attribute in entire catalog.
   * As an example of unique attribute can be URL - there is no sense in having two entities with same URL, and it's
   * better to have this ensured by the database engine.
   * deprecated in favor of `uniqueGloballyInScopes`
   * </pre>
   *
   * <code>.io.evitadb.externalApi.grpc.generated.GrpcGlobalAttributeUniquenessType uniqueGlobally = 13 [deprecated = true];</code>
   * @deprecated
   * @return The enum numeric value on the wire for uniqueGlobally.
   */
  @java.lang.Override @java.lang.Deprecated public int getUniqueGloballyValue() {
    return uniqueGlobally_;
  }
  /**
   * <pre>
   * When attribute is unique globally it is automatically filterable, and it is ensured there is exactly one single
   * entity having certain value of this attribute in entire catalog.
   * As an example of unique attribute can be URL - there is no sense in having two entities with same URL, and it's
   * better to have this ensured by the database engine.
   * deprecated in favor of `uniqueGloballyInScopes`
   * </pre>
   *
   * <code>.io.evitadb.externalApi.grpc.generated.GrpcGlobalAttributeUniquenessType uniqueGlobally = 13 [deprecated = true];</code>
   * @deprecated
   * @return The uniqueGlobally.
   */
  @java.lang.Override @java.lang.Deprecated public io.evitadb.externalApi.grpc.generated.GrpcGlobalAttributeUniquenessType getUniqueGlobally() {
    @SuppressWarnings("deprecation")
    io.evitadb.externalApi.grpc.generated.GrpcGlobalAttributeUniquenessType result = io.evitadb.externalApi.grpc.generated.GrpcGlobalAttributeUniquenessType.valueOf(uniqueGlobally_);
    return result == null ? io.evitadb.externalApi.grpc.generated.GrpcGlobalAttributeUniquenessType.UNRECOGNIZED : result;
  }

  public static final int NAMEVARIANT_FIELD_NUMBER = 14;
  private java.util.List<io.evitadb.externalApi.grpc.generated.GrpcNameVariant> nameVariant_;
  /**
   * <pre>
   * Contains attribute name converted to different naming conventions.
   * </pre>
   *
   * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcNameVariant nameVariant = 14;</code>
   */
  @java.lang.Override
  public java.util.List<io.evitadb.externalApi.grpc.generated.GrpcNameVariant> getNameVariantList() {
    return nameVariant_;
  }
  /**
   * <pre>
   * Contains attribute name converted to different naming conventions.
   * </pre>
   *
   * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcNameVariant nameVariant = 14;</code>
   */
  @java.lang.Override
  public java.util.List<? extends io.evitadb.externalApi.grpc.generated.GrpcNameVariantOrBuilder>
      getNameVariantOrBuilderList() {
    return nameVariant_;
  }
  /**
   * <pre>
   * Contains attribute name converted to different naming conventions.
   * </pre>
   *
   * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcNameVariant nameVariant = 14;</code>
   */
  @java.lang.Override
  public int getNameVariantCount() {
    return nameVariant_.size();
  }
  /**
   * <pre>
   * Contains attribute name converted to different naming conventions.
   * </pre>
   *
   * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcNameVariant nameVariant = 14;</code>
   */
  @java.lang.Override
  public io.evitadb.externalApi.grpc.generated.GrpcNameVariant getNameVariant(int index) {
    return nameVariant_.get(index);
  }
  /**
   * <pre>
   * Contains attribute name converted to different naming conventions.
   * </pre>
   *
   * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcNameVariant nameVariant = 14;</code>
   */
  @java.lang.Override
  public io.evitadb.externalApi.grpc.generated.GrpcNameVariantOrBuilder getNameVariantOrBuilder(
      int index) {
    return nameVariant_.get(index);
  }

  public static final int UNIQUEINSCOPES_FIELD_NUMBER = 15;
  private java.util.List<io.evitadb.externalApi.grpc.generated.GrpcScopedAttributeUniquenessType> uniqueInScopes_;
  /**
   * <pre>
   * When attribute is unique it is automatically filterable, and it is ensured there is exactly one single entity
   * having certain value of this attribute among other entities in the same collection.
   * As an example of unique attribute can be EAN - there is no sense in having two entities with same EAN, and it's
   * better to have this ensured by the database engine.
   * </pre>
   *
   * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcScopedAttributeUniquenessType uniqueInScopes = 15;</code>
   */
  @java.lang.Override
  public java.util.List<io.evitadb.externalApi.grpc.generated.GrpcScopedAttributeUniquenessType> getUniqueInScopesList() {
    return uniqueInScopes_;
  }
  /**
   * <pre>
   * When attribute is unique it is automatically filterable, and it is ensured there is exactly one single entity
   * having certain value of this attribute among other entities in the same collection.
   * As an example of unique attribute can be EAN - there is no sense in having two entities with same EAN, and it's
   * better to have this ensured by the database engine.
   * </pre>
   *
   * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcScopedAttributeUniquenessType uniqueInScopes = 15;</code>
   */
  @java.lang.Override
  public java.util.List<? extends io.evitadb.externalApi.grpc.generated.GrpcScopedAttributeUniquenessTypeOrBuilder>
      getUniqueInScopesOrBuilderList() {
    return uniqueInScopes_;
  }
  /**
   * <pre>
   * When attribute is unique it is automatically filterable, and it is ensured there is exactly one single entity
   * having certain value of this attribute among other entities in the same collection.
   * As an example of unique attribute can be EAN - there is no sense in having two entities with same EAN, and it's
   * better to have this ensured by the database engine.
   * </pre>
   *
   * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcScopedAttributeUniquenessType uniqueInScopes = 15;</code>
   */
  @java.lang.Override
  public int getUniqueInScopesCount() {
    return uniqueInScopes_.size();
  }
  /**
   * <pre>
   * When attribute is unique it is automatically filterable, and it is ensured there is exactly one single entity
   * having certain value of this attribute among other entities in the same collection.
   * As an example of unique attribute can be EAN - there is no sense in having two entities with same EAN, and it's
   * better to have this ensured by the database engine.
   * </pre>
   *
   * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcScopedAttributeUniquenessType uniqueInScopes = 15;</code>
   */
  @java.lang.Override
  public io.evitadb.externalApi.grpc.generated.GrpcScopedAttributeUniquenessType getUniqueInScopes(int index) {
    return uniqueInScopes_.get(index);
  }
  /**
   * <pre>
   * When attribute is unique it is automatically filterable, and it is ensured there is exactly one single entity
   * having certain value of this attribute among other entities in the same collection.
   * As an example of unique attribute can be EAN - there is no sense in having two entities with same EAN, and it's
   * better to have this ensured by the database engine.
   * </pre>
   *
   * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcScopedAttributeUniquenessType uniqueInScopes = 15;</code>
   */
  @java.lang.Override
  public io.evitadb.externalApi.grpc.generated.GrpcScopedAttributeUniquenessTypeOrBuilder getUniqueInScopesOrBuilder(
      int index) {
    return uniqueInScopes_.get(index);
  }

  public static final int FILTERABLEINSCOPES_FIELD_NUMBER = 16;
  private java.util.List<java.lang.Integer> filterableInScopes_;
  private static final com.google.protobuf.Internal.ListAdapter.Converter<
      java.lang.Integer, io.evitadb.externalApi.grpc.generated.GrpcEntityScope> filterableInScopes_converter_ =
          new com.google.protobuf.Internal.ListAdapter.Converter<
              java.lang.Integer, io.evitadb.externalApi.grpc.generated.GrpcEntityScope>() {
            public io.evitadb.externalApi.grpc.generated.GrpcEntityScope convert(java.lang.Integer from) {
              @SuppressWarnings("deprecation")
              io.evitadb.externalApi.grpc.generated.GrpcEntityScope result = io.evitadb.externalApi.grpc.generated.GrpcEntityScope.valueOf(from);
              return result == null ? io.evitadb.externalApi.grpc.generated.GrpcEntityScope.UNRECOGNIZED : result;
            }
          };
  /**
   * <pre>
   * When attribute is filterable, it is possible to filter entities by this attribute. Do not mark attribute
   * as filterable unless you know that you'll search entities by this attribute. Each filterable attribute occupies
   * (memory/disk) space in the form of index.
   * When attribute is filterable, extra result `attributeHistogram`
   * can be requested for this attribute.
   * </pre>
   *
   * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope filterableInScopes = 16;</code>
   * @return A list containing the filterableInScopes.
   */
  @java.lang.Override
  public java.util.List<io.evitadb.externalApi.grpc.generated.GrpcEntityScope> getFilterableInScopesList() {
    return new com.google.protobuf.Internal.ListAdapter<
        java.lang.Integer, io.evitadb.externalApi.grpc.generated.GrpcEntityScope>(filterableInScopes_, filterableInScopes_converter_);
  }
  /**
   * <pre>
   * When attribute is filterable, it is possible to filter entities by this attribute. Do not mark attribute
   * as filterable unless you know that you'll search entities by this attribute. Each filterable attribute occupies
   * (memory/disk) space in the form of index.
   * When attribute is filterable, extra result `attributeHistogram`
   * can be requested for this attribute.
   * </pre>
   *
   * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope filterableInScopes = 16;</code>
   * @return The count of filterableInScopes.
   */
  @java.lang.Override
  public int getFilterableInScopesCount() {
    return filterableInScopes_.size();
  }
  /**
   * <pre>
   * When attribute is filterable, it is possible to filter entities by this attribute. Do not mark attribute
   * as filterable unless you know that you'll search entities by this attribute. Each filterable attribute occupies
   * (memory/disk) space in the form of index.
   * When attribute is filterable, extra result `attributeHistogram`
   * can be requested for this attribute.
   * </pre>
   *
   * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope filterableInScopes = 16;</code>
   * @param index The index of the element to return.
   * @return The filterableInScopes at the given index.
   */
  @java.lang.Override
  public io.evitadb.externalApi.grpc.generated.GrpcEntityScope getFilterableInScopes(int index) {
    return filterableInScopes_converter_.convert(filterableInScopes_.get(index));
  }
  /**
   * <pre>
   * When attribute is filterable, it is possible to filter entities by this attribute. Do not mark attribute
   * as filterable unless you know that you'll search entities by this attribute. Each filterable attribute occupies
   * (memory/disk) space in the form of index.
   * When attribute is filterable, extra result `attributeHistogram`
   * can be requested for this attribute.
   * </pre>
   *
   * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope filterableInScopes = 16;</code>
   * @return A list containing the enum numeric values on the wire for filterableInScopes.
   */
  @java.lang.Override
  public java.util.List<java.lang.Integer>
  getFilterableInScopesValueList() {
    return filterableInScopes_;
  }
  /**
   * <pre>
   * When attribute is filterable, it is possible to filter entities by this attribute. Do not mark attribute
   * as filterable unless you know that you'll search entities by this attribute. Each filterable attribute occupies
   * (memory/disk) space in the form of index.
   * When attribute is filterable, extra result `attributeHistogram`
   * can be requested for this attribute.
   * </pre>
   *
   * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope filterableInScopes = 16;</code>
   * @param index The index of the value to return.
   * @return The enum numeric value on the wire of filterableInScopes at the given index.
   */
  @java.lang.Override
  public int getFilterableInScopesValue(int index) {
    return filterableInScopes_.get(index);
  }
  private int filterableInScopesMemoizedSerializedSize;

  public static final int SORTABLEINSCOPES_FIELD_NUMBER = 17;
  private java.util.List<java.lang.Integer> sortableInScopes_;
  private static final com.google.protobuf.Internal.ListAdapter.Converter<
      java.lang.Integer, io.evitadb.externalApi.grpc.generated.GrpcEntityScope> sortableInScopes_converter_ =
          new com.google.protobuf.Internal.ListAdapter.Converter<
              java.lang.Integer, io.evitadb.externalApi.grpc.generated.GrpcEntityScope>() {
            public io.evitadb.externalApi.grpc.generated.GrpcEntityScope convert(java.lang.Integer from) {
              @SuppressWarnings("deprecation")
              io.evitadb.externalApi.grpc.generated.GrpcEntityScope result = io.evitadb.externalApi.grpc.generated.GrpcEntityScope.valueOf(from);
              return result == null ? io.evitadb.externalApi.grpc.generated.GrpcEntityScope.UNRECOGNIZED : result;
            }
          };
  /**
   * <pre>
   * When attribute is sortable, it is possible to sort entities by this attribute. Do not mark attribute
   * as sortable unless you know that you'll sort entities along this attribute. Each sortable attribute occupies
   * (memory/disk) space in the form of index..
   * </pre>
   *
   * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope sortableInScopes = 17;</code>
   * @return A list containing the sortableInScopes.
   */
  @java.lang.Override
  public java.util.List<io.evitadb.externalApi.grpc.generated.GrpcEntityScope> getSortableInScopesList() {
    return new com.google.protobuf.Internal.ListAdapter<
        java.lang.Integer, io.evitadb.externalApi.grpc.generated.GrpcEntityScope>(sortableInScopes_, sortableInScopes_converter_);
  }
  /**
   * <pre>
   * When attribute is sortable, it is possible to sort entities by this attribute. Do not mark attribute
   * as sortable unless you know that you'll sort entities along this attribute. Each sortable attribute occupies
   * (memory/disk) space in the form of index..
   * </pre>
   *
   * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope sortableInScopes = 17;</code>
   * @return The count of sortableInScopes.
   */
  @java.lang.Override
  public int getSortableInScopesCount() {
    return sortableInScopes_.size();
  }
  /**
   * <pre>
   * When attribute is sortable, it is possible to sort entities by this attribute. Do not mark attribute
   * as sortable unless you know that you'll sort entities along this attribute. Each sortable attribute occupies
   * (memory/disk) space in the form of index..
   * </pre>
   *
   * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope sortableInScopes = 17;</code>
   * @param index The index of the element to return.
   * @return The sortableInScopes at the given index.
   */
  @java.lang.Override
  public io.evitadb.externalApi.grpc.generated.GrpcEntityScope getSortableInScopes(int index) {
    return sortableInScopes_converter_.convert(sortableInScopes_.get(index));
  }
  /**
   * <pre>
   * When attribute is sortable, it is possible to sort entities by this attribute. Do not mark attribute
   * as sortable unless you know that you'll sort entities along this attribute. Each sortable attribute occupies
   * (memory/disk) space in the form of index..
   * </pre>
   *
   * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope sortableInScopes = 17;</code>
   * @return A list containing the enum numeric values on the wire for sortableInScopes.
   */
  @java.lang.Override
  public java.util.List<java.lang.Integer>
  getSortableInScopesValueList() {
    return sortableInScopes_;
  }
  /**
   * <pre>
   * When attribute is sortable, it is possible to sort entities by this attribute. Do not mark attribute
   * as sortable unless you know that you'll sort entities along this attribute. Each sortable attribute occupies
   * (memory/disk) space in the form of index..
   * </pre>
   *
   * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope sortableInScopes = 17;</code>
   * @param index The index of the value to return.
   * @return The enum numeric value on the wire of sortableInScopes at the given index.
   */
  @java.lang.Override
  public int getSortableInScopesValue(int index) {
    return sortableInScopes_.get(index);
  }
  private int sortableInScopesMemoizedSerializedSize;

  public static final int UNIQUEGLOBALLYINSCOPES_FIELD_NUMBER = 18;
  private java.util.List<io.evitadb.externalApi.grpc.generated.GrpcScopedGlobalAttributeUniquenessType> uniqueGloballyInScopes_;
  /**
   * <pre>
   * When attribute is unique globally it is automatically filterable, and it is ensured there is exactly one single
   * entity having certain value of this attribute in entire catalog.
   * As an example of unique attribute can be URL - there is no sense in having two entities with same URL, and it's
   * better to have this ensured by the database engine.
   * </pre>
   *
   * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcScopedGlobalAttributeUniquenessType uniqueGloballyInScopes = 18;</code>
   */
  @java.lang.Override
  public java.util.List<io.evitadb.externalApi.grpc.generated.GrpcScopedGlobalAttributeUniquenessType> getUniqueGloballyInScopesList() {
    return uniqueGloballyInScopes_;
  }
  /**
   * <pre>
   * When attribute is unique globally it is automatically filterable, and it is ensured there is exactly one single
   * entity having certain value of this attribute in entire catalog.
   * As an example of unique attribute can be URL - there is no sense in having two entities with same URL, and it's
   * better to have this ensured by the database engine.
   * </pre>
   *
   * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcScopedGlobalAttributeUniquenessType uniqueGloballyInScopes = 18;</code>
   */
  @java.lang.Override
  public java.util.List<? extends io.evitadb.externalApi.grpc.generated.GrpcScopedGlobalAttributeUniquenessTypeOrBuilder>
      getUniqueGloballyInScopesOrBuilderList() {
    return uniqueGloballyInScopes_;
  }
  /**
   * <pre>
   * When attribute is unique globally it is automatically filterable, and it is ensured there is exactly one single
   * entity having certain value of this attribute in entire catalog.
   * As an example of unique attribute can be URL - there is no sense in having two entities with same URL, and it's
   * better to have this ensured by the database engine.
   * </pre>
   *
   * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcScopedGlobalAttributeUniquenessType uniqueGloballyInScopes = 18;</code>
   */
  @java.lang.Override
  public int getUniqueGloballyInScopesCount() {
    return uniqueGloballyInScopes_.size();
  }
  /**
   * <pre>
   * When attribute is unique globally it is automatically filterable, and it is ensured there is exactly one single
   * entity having certain value of this attribute in entire catalog.
   * As an example of unique attribute can be URL - there is no sense in having two entities with same URL, and it's
   * better to have this ensured by the database engine.
   * </pre>
   *
   * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcScopedGlobalAttributeUniquenessType uniqueGloballyInScopes = 18;</code>
   */
  @java.lang.Override
  public io.evitadb.externalApi.grpc.generated.GrpcScopedGlobalAttributeUniquenessType getUniqueGloballyInScopes(int index) {
    return uniqueGloballyInScopes_.get(index);
  }
  /**
   * <pre>
   * When attribute is unique globally it is automatically filterable, and it is ensured there is exactly one single
   * entity having certain value of this attribute in entire catalog.
   * As an example of unique attribute can be URL - there is no sense in having two entities with same URL, and it's
   * better to have this ensured by the database engine.
   * </pre>
   *
   * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcScopedGlobalAttributeUniquenessType uniqueGloballyInScopes = 18;</code>
   */
  @java.lang.Override
  public io.evitadb.externalApi.grpc.generated.GrpcScopedGlobalAttributeUniquenessTypeOrBuilder getUniqueGloballyInScopesOrBuilder(
      int index) {
    return uniqueGloballyInScopes_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
    }
    if (description_ != null) {
      output.writeMessage(2, getDescription());
    }
    if (deprecationNotice_ != null) {
      output.writeMessage(3, getDeprecationNotice());
    }
    if (unique_ != io.evitadb.externalApi.grpc.generated.GrpcAttributeUniquenessType.NOT_UNIQUE.getNumber()) {
      output.writeEnum(4, unique_);
    }
    if (filterable_ != false) {
      output.writeBool(5, filterable_);
    }
    if (sortable_ != false) {
      output.writeBool(6, sortable_);
    }
    if (localized_ != false) {
      output.writeBool(7, localized_);
    }
    if (nullable_ != false) {
      output.writeBool(8, nullable_);
    }
    if (representative_ != false) {
      output.writeBool(9, representative_);
    }
    if (type_ != io.evitadb.externalApi.grpc.generated.GrpcEvitaDataType.STRING.getNumber()) {
      output.writeEnum(10, type_);
    }
    if (defaultValue_ != null) {
      output.writeMessage(11, getDefaultValue());
    }
    if (indexedDecimalPlaces_ != 0) {
      output.writeInt32(12, indexedDecimalPlaces_);
    }
    if (uniqueGlobally_ != io.evitadb.externalApi.grpc.generated.GrpcGlobalAttributeUniquenessType.NOT_GLOBALLY_UNIQUE.getNumber()) {
      output.writeEnum(13, uniqueGlobally_);
    }
    for (int i = 0; i < nameVariant_.size(); i++) {
      output.writeMessage(14, nameVariant_.get(i));
    }
    for (int i = 0; i < uniqueInScopes_.size(); i++) {
      output.writeMessage(15, uniqueInScopes_.get(i));
    }
    if (getFilterableInScopesList().size() > 0) {
      output.writeUInt32NoTag(130);
      output.writeUInt32NoTag(filterableInScopesMemoizedSerializedSize);
    }
    for (int i = 0; i < filterableInScopes_.size(); i++) {
      output.writeEnumNoTag(filterableInScopes_.get(i));
    }
    if (getSortableInScopesList().size() > 0) {
      output.writeUInt32NoTag(138);
      output.writeUInt32NoTag(sortableInScopesMemoizedSerializedSize);
    }
    for (int i = 0; i < sortableInScopes_.size(); i++) {
      output.writeEnumNoTag(sortableInScopes_.get(i));
    }
    for (int i = 0; i < uniqueGloballyInScopes_.size(); i++) {
      output.writeMessage(18, uniqueGloballyInScopes_.get(i));
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
    }
    if (description_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getDescription());
    }
    if (deprecationNotice_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getDeprecationNotice());
    }
    if (unique_ != io.evitadb.externalApi.grpc.generated.GrpcAttributeUniquenessType.NOT_UNIQUE.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(4, unique_);
    }
    if (filterable_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(5, filterable_);
    }
    if (sortable_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(6, sortable_);
    }
    if (localized_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(7, localized_);
    }
    if (nullable_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(8, nullable_);
    }
    if (representative_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(9, representative_);
    }
    if (type_ != io.evitadb.externalApi.grpc.generated.GrpcEvitaDataType.STRING.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(10, type_);
    }
    if (defaultValue_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(11, getDefaultValue());
    }
    if (indexedDecimalPlaces_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(12, indexedDecimalPlaces_);
    }
    if (uniqueGlobally_ != io.evitadb.externalApi.grpc.generated.GrpcGlobalAttributeUniquenessType.NOT_GLOBALLY_UNIQUE.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(13, uniqueGlobally_);
    }
    for (int i = 0; i < nameVariant_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(14, nameVariant_.get(i));
    }
    for (int i = 0; i < uniqueInScopes_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(15, uniqueInScopes_.get(i));
    }
    {
      int dataSize = 0;
      for (int i = 0; i < filterableInScopes_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeEnumSizeNoTag(filterableInScopes_.get(i));
      }
      size += dataSize;
      if (!getFilterableInScopesList().isEmpty()) {  size += 2;
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32SizeNoTag(dataSize);
      }filterableInScopesMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      for (int i = 0; i < sortableInScopes_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeEnumSizeNoTag(sortableInScopes_.get(i));
      }
      size += dataSize;
      if (!getSortableInScopesList().isEmpty()) {  size += 2;
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32SizeNoTag(dataSize);
      }sortableInScopesMemoizedSerializedSize = dataSize;
    }
    for (int i = 0; i < uniqueGloballyInScopes_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(18, uniqueGloballyInScopes_.get(i));
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.evitadb.externalApi.grpc.generated.GrpcGlobalAttributeSchema)) {
      return super.equals(obj);
    }
    io.evitadb.externalApi.grpc.generated.GrpcGlobalAttributeSchema other = (io.evitadb.externalApi.grpc.generated.GrpcGlobalAttributeSchema) obj;

    if (!getName()
        .equals(other.getName())) return false;
    if (hasDescription() != other.hasDescription()) return false;
    if (hasDescription()) {
      if (!getDescription()
          .equals(other.getDescription())) return false;
    }
    if (hasDeprecationNotice() != other.hasDeprecationNotice()) return false;
    if (hasDeprecationNotice()) {
      if (!getDeprecationNotice()
          .equals(other.getDeprecationNotice())) return false;
    }
    if (unique_ != other.unique_) return false;
    if (getFilterable()
        != other.getFilterable()) return false;
    if (getSortable()
        != other.getSortable()) return false;
    if (getLocalized()
        != other.getLocalized()) return false;
    if (getNullable()
        != other.getNullable()) return false;
    if (getRepresentative()
        != other.getRepresentative()) return false;
    if (type_ != other.type_) return false;
    if (hasDefaultValue() != other.hasDefaultValue()) return false;
    if (hasDefaultValue()) {
      if (!getDefaultValue()
          .equals(other.getDefaultValue())) return false;
    }
    if (getIndexedDecimalPlaces()
        != other.getIndexedDecimalPlaces()) return false;
    if (uniqueGlobally_ != other.uniqueGlobally_) return false;
    if (!getNameVariantList()
        .equals(other.getNameVariantList())) return false;
    if (!getUniqueInScopesList()
        .equals(other.getUniqueInScopesList())) return false;
    if (!filterableInScopes_.equals(other.filterableInScopes_)) return false;
    if (!sortableInScopes_.equals(other.sortableInScopes_)) return false;
    if (!getUniqueGloballyInScopesList()
        .equals(other.getUniqueGloballyInScopesList())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + NAME_FIELD_NUMBER;
    hash = (53 * hash) + getName().hashCode();
    if (hasDescription()) {
      hash = (37 * hash) + DESCRIPTION_FIELD_NUMBER;
      hash = (53 * hash) + getDescription().hashCode();
    }
    if (hasDeprecationNotice()) {
      hash = (37 * hash) + DEPRECATIONNOTICE_FIELD_NUMBER;
      hash = (53 * hash) + getDeprecationNotice().hashCode();
    }
    hash = (37 * hash) + UNIQUE_FIELD_NUMBER;
    hash = (53 * hash) + unique_;
    hash = (37 * hash) + FILTERABLE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getFilterable());
    hash = (37 * hash) + SORTABLE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getSortable());
    hash = (37 * hash) + LOCALIZED_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getLocalized());
    hash = (37 * hash) + NULLABLE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getNullable());
    hash = (37 * hash) + REPRESENTATIVE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getRepresentative());
    hash = (37 * hash) + TYPE_FIELD_NUMBER;
    hash = (53 * hash) + type_;
    if (hasDefaultValue()) {
      hash = (37 * hash) + DEFAULTVALUE_FIELD_NUMBER;
      hash = (53 * hash) + getDefaultValue().hashCode();
    }
    hash = (37 * hash) + INDEXEDDECIMALPLACES_FIELD_NUMBER;
    hash = (53 * hash) + getIndexedDecimalPlaces();
    hash = (37 * hash) + UNIQUEGLOBALLY_FIELD_NUMBER;
    hash = (53 * hash) + uniqueGlobally_;
    if (getNameVariantCount() > 0) {
      hash = (37 * hash) + NAMEVARIANT_FIELD_NUMBER;
      hash = (53 * hash) + getNameVariantList().hashCode();
    }
    if (getUniqueInScopesCount() > 0) {
      hash = (37 * hash) + UNIQUEINSCOPES_FIELD_NUMBER;
      hash = (53 * hash) + getUniqueInScopesList().hashCode();
    }
    if (getFilterableInScopesCount() > 0) {
      hash = (37 * hash) + FILTERABLEINSCOPES_FIELD_NUMBER;
      hash = (53 * hash) + filterableInScopes_.hashCode();
    }
    if (getSortableInScopesCount() > 0) {
      hash = (37 * hash) + SORTABLEINSCOPES_FIELD_NUMBER;
      hash = (53 * hash) + sortableInScopes_.hashCode();
    }
    if (getUniqueGloballyInScopesCount() > 0) {
      hash = (37 * hash) + UNIQUEGLOBALLYINSCOPES_FIELD_NUMBER;
      hash = (53 * hash) + getUniqueGloballyInScopesList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.evitadb.externalApi.grpc.generated.GrpcGlobalAttributeSchema parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.evitadb.externalApi.grpc.generated.GrpcGlobalAttributeSchema parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.evitadb.externalApi.grpc.generated.GrpcGlobalAttributeSchema parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.evitadb.externalApi.grpc.generated.GrpcGlobalAttributeSchema parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.evitadb.externalApi.grpc.generated.GrpcGlobalAttributeSchema parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.evitadb.externalApi.grpc.generated.GrpcGlobalAttributeSchema parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.evitadb.externalApi.grpc.generated.GrpcGlobalAttributeSchema parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.evitadb.externalApi.grpc.generated.GrpcGlobalAttributeSchema parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.evitadb.externalApi.grpc.generated.GrpcGlobalAttributeSchema parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.evitadb.externalApi.grpc.generated.GrpcGlobalAttributeSchema parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.evitadb.externalApi.grpc.generated.GrpcGlobalAttributeSchema parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.evitadb.externalApi.grpc.generated.GrpcGlobalAttributeSchema parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.evitadb.externalApi.grpc.generated.GrpcGlobalAttributeSchema prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * This is the definition object for attributes that are stored along with
   * catalog. Definition objects allow to describe the structure of the catalog so that
   * in any time everyone can consult complete structure of the catalog. Definition object is similar to Java reflection
   * process where you can also at any moment see which fields and methods are available for the class.
   * Catalog attributes allows defining set of data that are fetched in bulk along with the catalog body.
   * Attributes may be indexed for fast filtering or can be used to sort along. Attributes are not automatically indexed
   * in order not to waste precious memory space for data that will never be used in search queries.
   * Filtering in attributes is executed by using constraints like `and`, `or`, `not`. Sorting can be achieved with
   * `attributeNatural` or others.
   * Attributes are not recommended for bigger data as they are all loaded at once when requested.
   * </pre>
   *
   * Protobuf type {@code io.evitadb.externalApi.grpc.generated.GrpcGlobalAttributeSchema}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:io.evitadb.externalApi.grpc.generated.GrpcGlobalAttributeSchema)
      io.evitadb.externalApi.grpc.generated.GrpcGlobalAttributeSchemaOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.evitadb.externalApi.grpc.generated.GrpcCatalogSchemaOuterClass.internal_static_io_evitadb_externalApi_grpc_generated_GrpcGlobalAttributeSchema_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.evitadb.externalApi.grpc.generated.GrpcCatalogSchemaOuterClass.internal_static_io_evitadb_externalApi_grpc_generated_GrpcGlobalAttributeSchema_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.evitadb.externalApi.grpc.generated.GrpcGlobalAttributeSchema.class, io.evitadb.externalApi.grpc.generated.GrpcGlobalAttributeSchema.Builder.class);
    }

    // Construct using io.evitadb.externalApi.grpc.generated.GrpcGlobalAttributeSchema.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getNameVariantFieldBuilder();
        getUniqueInScopesFieldBuilder();
        getUniqueGloballyInScopesFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      name_ = "";

      if (descriptionBuilder_ == null) {
        description_ = null;
      } else {
        description_ = null;
        descriptionBuilder_ = null;
      }
      if (deprecationNoticeBuilder_ == null) {
        deprecationNotice_ = null;
      } else {
        deprecationNotice_ = null;
        deprecationNoticeBuilder_ = null;
      }
      unique_ = 0;

      filterable_ = false;

      sortable_ = false;

      localized_ = false;

      nullable_ = false;

      representative_ = false;

      type_ = 0;

      if (defaultValueBuilder_ == null) {
        defaultValue_ = null;
      } else {
        defaultValue_ = null;
        defaultValueBuilder_ = null;
      }
      indexedDecimalPlaces_ = 0;

      uniqueGlobally_ = 0;

      if (nameVariantBuilder_ == null) {
        nameVariant_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        nameVariantBuilder_.clear();
      }
      if (uniqueInScopesBuilder_ == null) {
        uniqueInScopes_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
      } else {
        uniqueInScopesBuilder_.clear();
      }
      filterableInScopes_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000004);
      sortableInScopes_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000008);
      if (uniqueGloballyInScopesBuilder_ == null) {
        uniqueGloballyInScopes_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
      } else {
        uniqueGloballyInScopesBuilder_.clear();
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.evitadb.externalApi.grpc.generated.GrpcCatalogSchemaOuterClass.internal_static_io_evitadb_externalApi_grpc_generated_GrpcGlobalAttributeSchema_descriptor;
    }

    @java.lang.Override
    public io.evitadb.externalApi.grpc.generated.GrpcGlobalAttributeSchema getDefaultInstanceForType() {
      return io.evitadb.externalApi.grpc.generated.GrpcGlobalAttributeSchema.getDefaultInstance();
    }

    @java.lang.Override
    public io.evitadb.externalApi.grpc.generated.GrpcGlobalAttributeSchema build() {
      io.evitadb.externalApi.grpc.generated.GrpcGlobalAttributeSchema result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.evitadb.externalApi.grpc.generated.GrpcGlobalAttributeSchema buildPartial() {
      io.evitadb.externalApi.grpc.generated.GrpcGlobalAttributeSchema result = new io.evitadb.externalApi.grpc.generated.GrpcGlobalAttributeSchema(this);
      int from_bitField0_ = bitField0_;
      result.name_ = name_;
      if (descriptionBuilder_ == null) {
        result.description_ = description_;
      } else {
        result.description_ = descriptionBuilder_.build();
      }
      if (deprecationNoticeBuilder_ == null) {
        result.deprecationNotice_ = deprecationNotice_;
      } else {
        result.deprecationNotice_ = deprecationNoticeBuilder_.build();
      }
      result.unique_ = unique_;
      result.filterable_ = filterable_;
      result.sortable_ = sortable_;
      result.localized_ = localized_;
      result.nullable_ = nullable_;
      result.representative_ = representative_;
      result.type_ = type_;
      if (defaultValueBuilder_ == null) {
        result.defaultValue_ = defaultValue_;
      } else {
        result.defaultValue_ = defaultValueBuilder_.build();
      }
      result.indexedDecimalPlaces_ = indexedDecimalPlaces_;
      result.uniqueGlobally_ = uniqueGlobally_;
      if (nameVariantBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          nameVariant_ = java.util.Collections.unmodifiableList(nameVariant_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.nameVariant_ = nameVariant_;
      } else {
        result.nameVariant_ = nameVariantBuilder_.build();
      }
      if (uniqueInScopesBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0)) {
          uniqueInScopes_ = java.util.Collections.unmodifiableList(uniqueInScopes_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.uniqueInScopes_ = uniqueInScopes_;
      } else {
        result.uniqueInScopes_ = uniqueInScopesBuilder_.build();
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        filterableInScopes_ = java.util.Collections.unmodifiableList(filterableInScopes_);
        bitField0_ = (bitField0_ & ~0x00000004);
      }
      result.filterableInScopes_ = filterableInScopes_;
      if (((bitField0_ & 0x00000008) != 0)) {
        sortableInScopes_ = java.util.Collections.unmodifiableList(sortableInScopes_);
        bitField0_ = (bitField0_ & ~0x00000008);
      }
      result.sortableInScopes_ = sortableInScopes_;
      if (uniqueGloballyInScopesBuilder_ == null) {
        if (((bitField0_ & 0x00000010) != 0)) {
          uniqueGloballyInScopes_ = java.util.Collections.unmodifiableList(uniqueGloballyInScopes_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.uniqueGloballyInScopes_ = uniqueGloballyInScopes_;
      } else {
        result.uniqueGloballyInScopes_ = uniqueGloballyInScopesBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.evitadb.externalApi.grpc.generated.GrpcGlobalAttributeSchema) {
        return mergeFrom((io.evitadb.externalApi.grpc.generated.GrpcGlobalAttributeSchema)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.evitadb.externalApi.grpc.generated.GrpcGlobalAttributeSchema other) {
      if (other == io.evitadb.externalApi.grpc.generated.GrpcGlobalAttributeSchema.getDefaultInstance()) return this;
      if (!other.getName().isEmpty()) {
        name_ = other.name_;
        onChanged();
      }
      if (other.hasDescription()) {
        mergeDescription(other.getDescription());
      }
      if (other.hasDeprecationNotice()) {
        mergeDeprecationNotice(other.getDeprecationNotice());
      }
      if (other.unique_ != 0) {
        setUniqueValue(other.getUniqueValue());
      }
      if (other.getFilterable() != false) {
        setFilterable(other.getFilterable());
      }
      if (other.getSortable() != false) {
        setSortable(other.getSortable());
      }
      if (other.getLocalized() != false) {
        setLocalized(other.getLocalized());
      }
      if (other.getNullable() != false) {
        setNullable(other.getNullable());
      }
      if (other.getRepresentative() != false) {
        setRepresentative(other.getRepresentative());
      }
      if (other.type_ != 0) {
        setTypeValue(other.getTypeValue());
      }
      if (other.hasDefaultValue()) {
        mergeDefaultValue(other.getDefaultValue());
      }
      if (other.getIndexedDecimalPlaces() != 0) {
        setIndexedDecimalPlaces(other.getIndexedDecimalPlaces());
      }
      if (other.uniqueGlobally_ != 0) {
        setUniqueGloballyValue(other.getUniqueGloballyValue());
      }
      if (nameVariantBuilder_ == null) {
        if (!other.nameVariant_.isEmpty()) {
          if (nameVariant_.isEmpty()) {
            nameVariant_ = other.nameVariant_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureNameVariantIsMutable();
            nameVariant_.addAll(other.nameVariant_);
          }
          onChanged();
        }
      } else {
        if (!other.nameVariant_.isEmpty()) {
          if (nameVariantBuilder_.isEmpty()) {
            nameVariantBuilder_.dispose();
            nameVariantBuilder_ = null;
            nameVariant_ = other.nameVariant_;
            bitField0_ = (bitField0_ & ~0x00000001);
            nameVariantBuilder_ =
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getNameVariantFieldBuilder() : null;
          } else {
            nameVariantBuilder_.addAllMessages(other.nameVariant_);
          }
        }
      }
      if (uniqueInScopesBuilder_ == null) {
        if (!other.uniqueInScopes_.isEmpty()) {
          if (uniqueInScopes_.isEmpty()) {
            uniqueInScopes_ = other.uniqueInScopes_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureUniqueInScopesIsMutable();
            uniqueInScopes_.addAll(other.uniqueInScopes_);
          }
          onChanged();
        }
      } else {
        if (!other.uniqueInScopes_.isEmpty()) {
          if (uniqueInScopesBuilder_.isEmpty()) {
            uniqueInScopesBuilder_.dispose();
            uniqueInScopesBuilder_ = null;
            uniqueInScopes_ = other.uniqueInScopes_;
            bitField0_ = (bitField0_ & ~0x00000002);
            uniqueInScopesBuilder_ =
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getUniqueInScopesFieldBuilder() : null;
          } else {
            uniqueInScopesBuilder_.addAllMessages(other.uniqueInScopes_);
          }
        }
      }
      if (!other.filterableInScopes_.isEmpty()) {
        if (filterableInScopes_.isEmpty()) {
          filterableInScopes_ = other.filterableInScopes_;
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          ensureFilterableInScopesIsMutable();
          filterableInScopes_.addAll(other.filterableInScopes_);
        }
        onChanged();
      }
      if (!other.sortableInScopes_.isEmpty()) {
        if (sortableInScopes_.isEmpty()) {
          sortableInScopes_ = other.sortableInScopes_;
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          ensureSortableInScopesIsMutable();
          sortableInScopes_.addAll(other.sortableInScopes_);
        }
        onChanged();
      }
      if (uniqueGloballyInScopesBuilder_ == null) {
        if (!other.uniqueGloballyInScopes_.isEmpty()) {
          if (uniqueGloballyInScopes_.isEmpty()) {
            uniqueGloballyInScopes_ = other.uniqueGloballyInScopes_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureUniqueGloballyInScopesIsMutable();
            uniqueGloballyInScopes_.addAll(other.uniqueGloballyInScopes_);
          }
          onChanged();
        }
      } else {
        if (!other.uniqueGloballyInScopes_.isEmpty()) {
          if (uniqueGloballyInScopesBuilder_.isEmpty()) {
            uniqueGloballyInScopesBuilder_.dispose();
            uniqueGloballyInScopesBuilder_ = null;
            uniqueGloballyInScopes_ = other.uniqueGloballyInScopes_;
            bitField0_ = (bitField0_ & ~0x00000010);
            uniqueGloballyInScopesBuilder_ =
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getUniqueGloballyInScopesFieldBuilder() : null;
          } else {
            uniqueGloballyInScopesBuilder_.addAllMessages(other.uniqueGloballyInScopes_);
          }
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      io.evitadb.externalApi.grpc.generated.GrpcGlobalAttributeSchema parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.evitadb.externalApi.grpc.generated.GrpcGlobalAttributeSchema) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.lang.Object name_ = "";
    /**
     * <code>string name = 1;</code>
     * @return The name.
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string name = 1;</code>
     * @param value The name to set.
     * @return This builder for chaining.
     */
    public Builder setName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }

      name_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string name = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearName() {

      name_ = getDefaultInstance().getName();
      onChanged();
      return this;
    }
    /**
     * <code>string name = 1;</code>
     * @param value The bytes for name to set.
     * @return This builder for chaining.
     */
    public Builder setNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

      name_ = value;
      onChanged();
      return this;
    }

    private com.google.protobuf.StringValue description_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder> descriptionBuilder_;
    /**
     * <pre>
     * optional description of the attribute
     * </pre>
     *
     * <code>.google.protobuf.StringValue description = 2;</code>
     * @return Whether the description field is set.
     */
    public boolean hasDescription() {
      return descriptionBuilder_ != null || description_ != null;
    }
    /**
     * <pre>
     * optional description of the attribute
     * </pre>
     *
     * <code>.google.protobuf.StringValue description = 2;</code>
     * @return The description.
     */
    public com.google.protobuf.StringValue getDescription() {
      if (descriptionBuilder_ == null) {
        return description_ == null ? com.google.protobuf.StringValue.getDefaultInstance() : description_;
      } else {
        return descriptionBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * optional description of the attribute
     * </pre>
     *
     * <code>.google.protobuf.StringValue description = 2;</code>
     */
    public Builder setDescription(com.google.protobuf.StringValue value) {
      if (descriptionBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        description_ = value;
        onChanged();
      } else {
        descriptionBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * optional description of the attribute
     * </pre>
     *
     * <code>.google.protobuf.StringValue description = 2;</code>
     */
    public Builder setDescription(
        com.google.protobuf.StringValue.Builder builderForValue) {
      if (descriptionBuilder_ == null) {
        description_ = builderForValue.build();
        onChanged();
      } else {
        descriptionBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * optional description of the attribute
     * </pre>
     *
     * <code>.google.protobuf.StringValue description = 2;</code>
     */
    public Builder mergeDescription(com.google.protobuf.StringValue value) {
      if (descriptionBuilder_ == null) {
        if (description_ != null) {
          description_ =
            com.google.protobuf.StringValue.newBuilder(description_).mergeFrom(value).buildPartial();
        } else {
          description_ = value;
        }
        onChanged();
      } else {
        descriptionBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * optional description of the attribute
     * </pre>
     *
     * <code>.google.protobuf.StringValue description = 2;</code>
     */
    public Builder clearDescription() {
      if (descriptionBuilder_ == null) {
        description_ = null;
        onChanged();
      } else {
        description_ = null;
        descriptionBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * optional description of the attribute
     * </pre>
     *
     * <code>.google.protobuf.StringValue description = 2;</code>
     */
    public com.google.protobuf.StringValue.Builder getDescriptionBuilder() {

      onChanged();
      return getDescriptionFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * optional description of the attribute
     * </pre>
     *
     * <code>.google.protobuf.StringValue description = 2;</code>
     */
    public com.google.protobuf.StringValueOrBuilder getDescriptionOrBuilder() {
      if (descriptionBuilder_ != null) {
        return descriptionBuilder_.getMessageOrBuilder();
      } else {
        return description_ == null ?
            com.google.protobuf.StringValue.getDefaultInstance() : description_;
      }
    }
    /**
     * <pre>
     * optional description of the attribute
     * </pre>
     *
     * <code>.google.protobuf.StringValue description = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder>
        getDescriptionFieldBuilder() {
      if (descriptionBuilder_ == null) {
        descriptionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder>(
                getDescription(),
                getParentForChildren(),
                isClean());
        description_ = null;
      }
      return descriptionBuilder_;
    }

    private com.google.protobuf.StringValue deprecationNotice_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder> deprecationNoticeBuilder_;
    /**
     * <pre>
     * optional deprecation notice
     * </pre>
     *
     * <code>.google.protobuf.StringValue deprecationNotice = 3;</code>
     * @return Whether the deprecationNotice field is set.
     */
    public boolean hasDeprecationNotice() {
      return deprecationNoticeBuilder_ != null || deprecationNotice_ != null;
    }
    /**
     * <pre>
     * optional deprecation notice
     * </pre>
     *
     * <code>.google.protobuf.StringValue deprecationNotice = 3;</code>
     * @return The deprecationNotice.
     */
    public com.google.protobuf.StringValue getDeprecationNotice() {
      if (deprecationNoticeBuilder_ == null) {
        return deprecationNotice_ == null ? com.google.protobuf.StringValue.getDefaultInstance() : deprecationNotice_;
      } else {
        return deprecationNoticeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * optional deprecation notice
     * </pre>
     *
     * <code>.google.protobuf.StringValue deprecationNotice = 3;</code>
     */
    public Builder setDeprecationNotice(com.google.protobuf.StringValue value) {
      if (deprecationNoticeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        deprecationNotice_ = value;
        onChanged();
      } else {
        deprecationNoticeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * optional deprecation notice
     * </pre>
     *
     * <code>.google.protobuf.StringValue deprecationNotice = 3;</code>
     */
    public Builder setDeprecationNotice(
        com.google.protobuf.StringValue.Builder builderForValue) {
      if (deprecationNoticeBuilder_ == null) {
        deprecationNotice_ = builderForValue.build();
        onChanged();
      } else {
        deprecationNoticeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * optional deprecation notice
     * </pre>
     *
     * <code>.google.protobuf.StringValue deprecationNotice = 3;</code>
     */
    public Builder mergeDeprecationNotice(com.google.protobuf.StringValue value) {
      if (deprecationNoticeBuilder_ == null) {
        if (deprecationNotice_ != null) {
          deprecationNotice_ =
            com.google.protobuf.StringValue.newBuilder(deprecationNotice_).mergeFrom(value).buildPartial();
        } else {
          deprecationNotice_ = value;
        }
        onChanged();
      } else {
        deprecationNoticeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * optional deprecation notice
     * </pre>
     *
     * <code>.google.protobuf.StringValue deprecationNotice = 3;</code>
     */
    public Builder clearDeprecationNotice() {
      if (deprecationNoticeBuilder_ == null) {
        deprecationNotice_ = null;
        onChanged();
      } else {
        deprecationNotice_ = null;
        deprecationNoticeBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * optional deprecation notice
     * </pre>
     *
     * <code>.google.protobuf.StringValue deprecationNotice = 3;</code>
     */
    public com.google.protobuf.StringValue.Builder getDeprecationNoticeBuilder() {

      onChanged();
      return getDeprecationNoticeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * optional deprecation notice
     * </pre>
     *
     * <code>.google.protobuf.StringValue deprecationNotice = 3;</code>
     */
    public com.google.protobuf.StringValueOrBuilder getDeprecationNoticeOrBuilder() {
      if (deprecationNoticeBuilder_ != null) {
        return deprecationNoticeBuilder_.getMessageOrBuilder();
      } else {
        return deprecationNotice_ == null ?
            com.google.protobuf.StringValue.getDefaultInstance() : deprecationNotice_;
      }
    }
    /**
     * <pre>
     * optional deprecation notice
     * </pre>
     *
     * <code>.google.protobuf.StringValue deprecationNotice = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder>
        getDeprecationNoticeFieldBuilder() {
      if (deprecationNoticeBuilder_ == null) {
        deprecationNoticeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder>(
                getDeprecationNotice(),
                getParentForChildren(),
                isClean());
        deprecationNotice_ = null;
      }
      return deprecationNoticeBuilder_;
    }

    private int unique_ = 0;
    /**
     * <pre>
     * When attribute is unique it is automatically filterable, and it is ensured there is exactly one single entity
     * having certain value of this attribute among other entities in the same collection.
     * As an example of unique attribute can be EAN - there is no sense in having two entities with same EAN, and it's
     * better to have this ensured by the database engine.
     * deprecated in favor of `uniqueInScopes`
     * </pre>
     *
     * <code>.io.evitadb.externalApi.grpc.generated.GrpcAttributeUniquenessType unique = 4 [deprecated = true];</code>
     * @deprecated
     * @return The enum numeric value on the wire for unique.
     */
    @java.lang.Override @java.lang.Deprecated public int getUniqueValue() {
      return unique_;
    }
    /**
     * <pre>
     * When attribute is unique it is automatically filterable, and it is ensured there is exactly one single entity
     * having certain value of this attribute among other entities in the same collection.
     * As an example of unique attribute can be EAN - there is no sense in having two entities with same EAN, and it's
     * better to have this ensured by the database engine.
     * deprecated in favor of `uniqueInScopes`
     * </pre>
     *
     * <code>.io.evitadb.externalApi.grpc.generated.GrpcAttributeUniquenessType unique = 4 [deprecated = true];</code>
     * @deprecated
     * @param value The enum numeric value on the wire for unique to set.
     * @return This builder for chaining.
     */
    @java.lang.Deprecated public Builder setUniqueValue(int value) {

      unique_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * When attribute is unique it is automatically filterable, and it is ensured there is exactly one single entity
     * having certain value of this attribute among other entities in the same collection.
     * As an example of unique attribute can be EAN - there is no sense in having two entities with same EAN, and it's
     * better to have this ensured by the database engine.
     * deprecated in favor of `uniqueInScopes`
     * </pre>
     *
     * <code>.io.evitadb.externalApi.grpc.generated.GrpcAttributeUniquenessType unique = 4 [deprecated = true];</code>
     * @deprecated
     * @return The unique.
     */
    @java.lang.Override
    @java.lang.Deprecated public io.evitadb.externalApi.grpc.generated.GrpcAttributeUniquenessType getUnique() {
      @SuppressWarnings("deprecation")
      io.evitadb.externalApi.grpc.generated.GrpcAttributeUniquenessType result = io.evitadb.externalApi.grpc.generated.GrpcAttributeUniquenessType.valueOf(unique_);
      return result == null ? io.evitadb.externalApi.grpc.generated.GrpcAttributeUniquenessType.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * When attribute is unique it is automatically filterable, and it is ensured there is exactly one single entity
     * having certain value of this attribute among other entities in the same collection.
     * As an example of unique attribute can be EAN - there is no sense in having two entities with same EAN, and it's
     * better to have this ensured by the database engine.
     * deprecated in favor of `uniqueInScopes`
     * </pre>
     *
     * <code>.io.evitadb.externalApi.grpc.generated.GrpcAttributeUniquenessType unique = 4 [deprecated = true];</code>
     * @deprecated
     * @param value The unique to set.
     * @return This builder for chaining.
     */
    @java.lang.Deprecated public Builder setUnique(io.evitadb.externalApi.grpc.generated.GrpcAttributeUniquenessType value) {
      if (value == null) {
        throw new NullPointerException();
      }

      unique_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * When attribute is unique it is automatically filterable, and it is ensured there is exactly one single entity
     * having certain value of this attribute among other entities in the same collection.
     * As an example of unique attribute can be EAN - there is no sense in having two entities with same EAN, and it's
     * better to have this ensured by the database engine.
     * deprecated in favor of `uniqueInScopes`
     * </pre>
     *
     * <code>.io.evitadb.externalApi.grpc.generated.GrpcAttributeUniquenessType unique = 4 [deprecated = true];</code>
     * @deprecated
     * @return This builder for chaining.
     */
    @java.lang.Deprecated public Builder clearUnique() {

      unique_ = 0;
      onChanged();
      return this;
    }

    private boolean filterable_ ;
    /**
     * <pre>
     * When attribute is filterable, it is possible to filter entities by this attribute. Do not mark attribute
     * as filterable unless you know that you'll search entities by this attribute. Each filterable attribute occupies
     * (memory/disk) space in the form of index.
     * When attribute is filterable, extra result `attributeHistogram`
     * can be requested for this attribute.
     * deprecated in favor of `filterableInScopes`
     * </pre>
     *
     * <code>bool filterable = 5 [deprecated = true];</code>
     * @deprecated
     * @return The filterable.
     */
    @java.lang.Override
    @java.lang.Deprecated public boolean getFilterable() {
      return filterable_;
    }
    /**
     * <pre>
     * When attribute is filterable, it is possible to filter entities by this attribute. Do not mark attribute
     * as filterable unless you know that you'll search entities by this attribute. Each filterable attribute occupies
     * (memory/disk) space in the form of index.
     * When attribute is filterable, extra result `attributeHistogram`
     * can be requested for this attribute.
     * deprecated in favor of `filterableInScopes`
     * </pre>
     *
     * <code>bool filterable = 5 [deprecated = true];</code>
     * @deprecated
     * @param value The filterable to set.
     * @return This builder for chaining.
     */
    @java.lang.Deprecated public Builder setFilterable(boolean value) {

      filterable_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * When attribute is filterable, it is possible to filter entities by this attribute. Do not mark attribute
     * as filterable unless you know that you'll search entities by this attribute. Each filterable attribute occupies
     * (memory/disk) space in the form of index.
     * When attribute is filterable, extra result `attributeHistogram`
     * can be requested for this attribute.
     * deprecated in favor of `filterableInScopes`
     * </pre>
     *
     * <code>bool filterable = 5 [deprecated = true];</code>
     * @deprecated
     * @return This builder for chaining.
     */
    @java.lang.Deprecated public Builder clearFilterable() {

      filterable_ = false;
      onChanged();
      return this;
    }

    private boolean sortable_ ;
    /**
     * <pre>
     * When attribute is sortable, it is possible to sort entities by this attribute. Do not mark attribute
     * as sortable unless you know that you'll sort entities along this attribute. Each sortable attribute occupies
     * (memory/disk) space in the form of index..
     * deprecated in favor of `sortableInScopes`
     * </pre>
     *
     * <code>bool sortable = 6 [deprecated = true];</code>
     * @deprecated
     * @return The sortable.
     */
    @java.lang.Override
    @java.lang.Deprecated public boolean getSortable() {
      return sortable_;
    }
    /**
     * <pre>
     * When attribute is sortable, it is possible to sort entities by this attribute. Do not mark attribute
     * as sortable unless you know that you'll sort entities along this attribute. Each sortable attribute occupies
     * (memory/disk) space in the form of index..
     * deprecated in favor of `sortableInScopes`
     * </pre>
     *
     * <code>bool sortable = 6 [deprecated = true];</code>
     * @deprecated
     * @param value The sortable to set.
     * @return This builder for chaining.
     */
    @java.lang.Deprecated public Builder setSortable(boolean value) {

      sortable_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * When attribute is sortable, it is possible to sort entities by this attribute. Do not mark attribute
     * as sortable unless you know that you'll sort entities along this attribute. Each sortable attribute occupies
     * (memory/disk) space in the form of index..
     * deprecated in favor of `sortableInScopes`
     * </pre>
     *
     * <code>bool sortable = 6 [deprecated = true];</code>
     * @deprecated
     * @return This builder for chaining.
     */
    @java.lang.Deprecated public Builder clearSortable() {

      sortable_ = false;
      onChanged();
      return this;
    }

    private boolean localized_ ;
    /**
     * <pre>
     * When attribute is localized, it has to be ALWAYS used in connection with specific `Locale`.
     * </pre>
     *
     * <code>bool localized = 7;</code>
     * @return The localized.
     */
    @java.lang.Override
    public boolean getLocalized() {
      return localized_;
    }
    /**
     * <pre>
     * When attribute is localized, it has to be ALWAYS used in connection with specific `Locale`.
     * </pre>
     *
     * <code>bool localized = 7;</code>
     * @param value The localized to set.
     * @return This builder for chaining.
     */
    public Builder setLocalized(boolean value) {

      localized_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * When attribute is localized, it has to be ALWAYS used in connection with specific `Locale`.
     * </pre>
     *
     * <code>bool localized = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearLocalized() {

      localized_ = false;
      onChanged();
      return this;
    }

    private boolean nullable_ ;
    /**
     * <pre>
     * When attribute is nullable, its values may be missing in the entities. Otherwise, the system will enforce
     * non-null checks upon upserting of the entity.
     * </pre>
     *
     * <code>bool nullable = 8;</code>
     * @return The nullable.
     */
    @java.lang.Override
    public boolean getNullable() {
      return nullable_;
    }
    /**
     * <pre>
     * When attribute is nullable, its values may be missing in the entities. Otherwise, the system will enforce
     * non-null checks upon upserting of the entity.
     * </pre>
     *
     * <code>bool nullable = 8;</code>
     * @param value The nullable to set.
     * @return This builder for chaining.
     */
    public Builder setNullable(boolean value) {

      nullable_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * When attribute is nullable, its values may be missing in the entities. Otherwise, the system will enforce
     * non-null checks upon upserting of the entity.
     * </pre>
     *
     * <code>bool nullable = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearNullable() {

      nullable_ = false;
      onChanged();
      return this;
    }

    private boolean representative_ ;
    /**
     * <pre>
     * If an attribute is flagged as representative, it should be used in developer tools along with the entity's
     * primary key to describe the entity or reference to that entity. The flag is completely optional and doesn't
     * affect the core functionality of the database in any way. However, if it's used correctly, it can be very
     * helpful to developers in quickly finding their way around the data. There should be very few representative
     * attributes in the entity type, and the unique ones are usually the best to choose.
     * </pre>
     *
     * <code>bool representative = 9;</code>
     * @return The representative.
     */
    @java.lang.Override
    public boolean getRepresentative() {
      return representative_;
    }
    /**
     * <pre>
     * If an attribute is flagged as representative, it should be used in developer tools along with the entity's
     * primary key to describe the entity or reference to that entity. The flag is completely optional and doesn't
     * affect the core functionality of the database in any way. However, if it's used correctly, it can be very
     * helpful to developers in quickly finding their way around the data. There should be very few representative
     * attributes in the entity type, and the unique ones are usually the best to choose.
     * </pre>
     *
     * <code>bool representative = 9;</code>
     * @param value The representative to set.
     * @return This builder for chaining.
     */
    public Builder setRepresentative(boolean value) {

      representative_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * If an attribute is flagged as representative, it should be used in developer tools along with the entity's
     * primary key to describe the entity or reference to that entity. The flag is completely optional and doesn't
     * affect the core functionality of the database in any way. However, if it's used correctly, it can be very
     * helpful to developers in quickly finding their way around the data. There should be very few representative
     * attributes in the entity type, and the unique ones are usually the best to choose.
     * </pre>
     *
     * <code>bool representative = 9;</code>
     * @return This builder for chaining.
     */
    public Builder clearRepresentative() {

      representative_ = false;
      onChanged();
      return this;
    }

    private int type_ = 0;
    /**
     * <pre>
     * Data type of the attribute. Must be one of Evita-supported values.
     * Internally the scalar is converted into Java-corresponding data type.
     * </pre>
     *
     * <code>.io.evitadb.externalApi.grpc.generated.GrpcEvitaDataType type = 10;</code>
     * @return The enum numeric value on the wire for type.
     */
    @java.lang.Override public int getTypeValue() {
      return type_;
    }
    /**
     * <pre>
     * Data type of the attribute. Must be one of Evita-supported values.
     * Internally the scalar is converted into Java-corresponding data type.
     * </pre>
     *
     * <code>.io.evitadb.externalApi.grpc.generated.GrpcEvitaDataType type = 10;</code>
     * @param value The enum numeric value on the wire for type to set.
     * @return This builder for chaining.
     */
    public Builder setTypeValue(int value) {

      type_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Data type of the attribute. Must be one of Evita-supported values.
     * Internally the scalar is converted into Java-corresponding data type.
     * </pre>
     *
     * <code>.io.evitadb.externalApi.grpc.generated.GrpcEvitaDataType type = 10;</code>
     * @return The type.
     */
    @java.lang.Override
    public io.evitadb.externalApi.grpc.generated.GrpcEvitaDataType getType() {
      @SuppressWarnings("deprecation")
      io.evitadb.externalApi.grpc.generated.GrpcEvitaDataType result = io.evitadb.externalApi.grpc.generated.GrpcEvitaDataType.valueOf(type_);
      return result == null ? io.evitadb.externalApi.grpc.generated.GrpcEvitaDataType.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Data type of the attribute. Must be one of Evita-supported values.
     * Internally the scalar is converted into Java-corresponding data type.
     * </pre>
     *
     * <code>.io.evitadb.externalApi.grpc.generated.GrpcEvitaDataType type = 10;</code>
     * @param value The type to set.
     * @return This builder for chaining.
     */
    public Builder setType(io.evitadb.externalApi.grpc.generated.GrpcEvitaDataType value) {
      if (value == null) {
        throw new NullPointerException();
      }

      type_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Data type of the attribute. Must be one of Evita-supported values.
     * Internally the scalar is converted into Java-corresponding data type.
     * </pre>
     *
     * <code>.io.evitadb.externalApi.grpc.generated.GrpcEvitaDataType type = 10;</code>
     * @return This builder for chaining.
     */
    public Builder clearType() {

      type_ = 0;
      onChanged();
      return this;
    }

    private io.evitadb.externalApi.grpc.generated.GrpcEvitaValue defaultValue_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.evitadb.externalApi.grpc.generated.GrpcEvitaValue, io.evitadb.externalApi.grpc.generated.GrpcEvitaValue.Builder, io.evitadb.externalApi.grpc.generated.GrpcEvitaValueOrBuilder> defaultValueBuilder_;
    /**
     * <pre>
     * Default value is used when the entity is created without this attribute specified. Default values allow to pass
     * non-null checks even if no attributes of such name are specified.
     * </pre>
     *
     * <code>.io.evitadb.externalApi.grpc.generated.GrpcEvitaValue defaultValue = 11;</code>
     * @return Whether the defaultValue field is set.
     */
    public boolean hasDefaultValue() {
      return defaultValueBuilder_ != null || defaultValue_ != null;
    }
    /**
     * <pre>
     * Default value is used when the entity is created without this attribute specified. Default values allow to pass
     * non-null checks even if no attributes of such name are specified.
     * </pre>
     *
     * <code>.io.evitadb.externalApi.grpc.generated.GrpcEvitaValue defaultValue = 11;</code>
     * @return The defaultValue.
     */
    public io.evitadb.externalApi.grpc.generated.GrpcEvitaValue getDefaultValue() {
      if (defaultValueBuilder_ == null) {
        return defaultValue_ == null ? io.evitadb.externalApi.grpc.generated.GrpcEvitaValue.getDefaultInstance() : defaultValue_;
      } else {
        return defaultValueBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Default value is used when the entity is created without this attribute specified. Default values allow to pass
     * non-null checks even if no attributes of such name are specified.
     * </pre>
     *
     * <code>.io.evitadb.externalApi.grpc.generated.GrpcEvitaValue defaultValue = 11;</code>
     */
    public Builder setDefaultValue(io.evitadb.externalApi.grpc.generated.GrpcEvitaValue value) {
      if (defaultValueBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        defaultValue_ = value;
        onChanged();
      } else {
        defaultValueBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Default value is used when the entity is created without this attribute specified. Default values allow to pass
     * non-null checks even if no attributes of such name are specified.
     * </pre>
     *
     * <code>.io.evitadb.externalApi.grpc.generated.GrpcEvitaValue defaultValue = 11;</code>
     */
    public Builder setDefaultValue(
        io.evitadb.externalApi.grpc.generated.GrpcEvitaValue.Builder builderForValue) {
      if (defaultValueBuilder_ == null) {
        defaultValue_ = builderForValue.build();
        onChanged();
      } else {
        defaultValueBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Default value is used when the entity is created without this attribute specified. Default values allow to pass
     * non-null checks even if no attributes of such name are specified.
     * </pre>
     *
     * <code>.io.evitadb.externalApi.grpc.generated.GrpcEvitaValue defaultValue = 11;</code>
     */
    public Builder mergeDefaultValue(io.evitadb.externalApi.grpc.generated.GrpcEvitaValue value) {
      if (defaultValueBuilder_ == null) {
        if (defaultValue_ != null) {
          defaultValue_ =
            io.evitadb.externalApi.grpc.generated.GrpcEvitaValue.newBuilder(defaultValue_).mergeFrom(value).buildPartial();
        } else {
          defaultValue_ = value;
        }
        onChanged();
      } else {
        defaultValueBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Default value is used when the entity is created without this attribute specified. Default values allow to pass
     * non-null checks even if no attributes of such name are specified.
     * </pre>
     *
     * <code>.io.evitadb.externalApi.grpc.generated.GrpcEvitaValue defaultValue = 11;</code>
     */
    public Builder clearDefaultValue() {
      if (defaultValueBuilder_ == null) {
        defaultValue_ = null;
        onChanged();
      } else {
        defaultValue_ = null;
        defaultValueBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Default value is used when the entity is created without this attribute specified. Default values allow to pass
     * non-null checks even if no attributes of such name are specified.
     * </pre>
     *
     * <code>.io.evitadb.externalApi.grpc.generated.GrpcEvitaValue defaultValue = 11;</code>
     */
    public io.evitadb.externalApi.grpc.generated.GrpcEvitaValue.Builder getDefaultValueBuilder() {

      onChanged();
      return getDefaultValueFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Default value is used when the entity is created without this attribute specified. Default values allow to pass
     * non-null checks even if no attributes of such name are specified.
     * </pre>
     *
     * <code>.io.evitadb.externalApi.grpc.generated.GrpcEvitaValue defaultValue = 11;</code>
     */
    public io.evitadb.externalApi.grpc.generated.GrpcEvitaValueOrBuilder getDefaultValueOrBuilder() {
      if (defaultValueBuilder_ != null) {
        return defaultValueBuilder_.getMessageOrBuilder();
      } else {
        return defaultValue_ == null ?
            io.evitadb.externalApi.grpc.generated.GrpcEvitaValue.getDefaultInstance() : defaultValue_;
      }
    }
    /**
     * <pre>
     * Default value is used when the entity is created without this attribute specified. Default values allow to pass
     * non-null checks even if no attributes of such name are specified.
     * </pre>
     *
     * <code>.io.evitadb.externalApi.grpc.generated.GrpcEvitaValue defaultValue = 11;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.evitadb.externalApi.grpc.generated.GrpcEvitaValue, io.evitadb.externalApi.grpc.generated.GrpcEvitaValue.Builder, io.evitadb.externalApi.grpc.generated.GrpcEvitaValueOrBuilder>
        getDefaultValueFieldBuilder() {
      if (defaultValueBuilder_ == null) {
        defaultValueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.evitadb.externalApi.grpc.generated.GrpcEvitaValue, io.evitadb.externalApi.grpc.generated.GrpcEvitaValue.Builder, io.evitadb.externalApi.grpc.generated.GrpcEvitaValueOrBuilder>(
                getDefaultValue(),
                getParentForChildren(),
                isClean());
        defaultValue_ = null;
      }
      return defaultValueBuilder_;
    }

    private int indexedDecimalPlaces_ ;
    /**
     * <pre>
     * Determines how many fractional places are important when entities are compared during filtering or sorting. It is
     * significant to know that all values of this attribute will be converted to {&#64;link java.lang.Integer}, so the attribute
     * number must not ever exceed maximum limits of {&#64;link java.lang.Integer} type when scaling the number by the power
     * of ten using `indexedDecimalPlaces` as exponent.
     * </pre>
     *
     * <code>int32 indexedDecimalPlaces = 12;</code>
     * @return The indexedDecimalPlaces.
     */
    @java.lang.Override
    public int getIndexedDecimalPlaces() {
      return indexedDecimalPlaces_;
    }
    /**
     * <pre>
     * Determines how many fractional places are important when entities are compared during filtering or sorting. It is
     * significant to know that all values of this attribute will be converted to {&#64;link java.lang.Integer}, so the attribute
     * number must not ever exceed maximum limits of {&#64;link java.lang.Integer} type when scaling the number by the power
     * of ten using `indexedDecimalPlaces` as exponent.
     * </pre>
     *
     * <code>int32 indexedDecimalPlaces = 12;</code>
     * @param value The indexedDecimalPlaces to set.
     * @return This builder for chaining.
     */
    public Builder setIndexedDecimalPlaces(int value) {

      indexedDecimalPlaces_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Determines how many fractional places are important when entities are compared during filtering or sorting. It is
     * significant to know that all values of this attribute will be converted to {&#64;link java.lang.Integer}, so the attribute
     * number must not ever exceed maximum limits of {&#64;link java.lang.Integer} type when scaling the number by the power
     * of ten using `indexedDecimalPlaces` as exponent.
     * </pre>
     *
     * <code>int32 indexedDecimalPlaces = 12;</code>
     * @return This builder for chaining.
     */
    public Builder clearIndexedDecimalPlaces() {

      indexedDecimalPlaces_ = 0;
      onChanged();
      return this;
    }

    private int uniqueGlobally_ = 0;
    /**
     * <pre>
     * When attribute is unique globally it is automatically filterable, and it is ensured there is exactly one single
     * entity having certain value of this attribute in entire catalog.
     * As an example of unique attribute can be URL - there is no sense in having two entities with same URL, and it's
     * better to have this ensured by the database engine.
     * deprecated in favor of `uniqueGloballyInScopes`
     * </pre>
     *
     * <code>.io.evitadb.externalApi.grpc.generated.GrpcGlobalAttributeUniquenessType uniqueGlobally = 13 [deprecated = true];</code>
     * @deprecated
     * @return The enum numeric value on the wire for uniqueGlobally.
     */
    @java.lang.Override @java.lang.Deprecated public int getUniqueGloballyValue() {
      return uniqueGlobally_;
    }
    /**
     * <pre>
     * When attribute is unique globally it is automatically filterable, and it is ensured there is exactly one single
     * entity having certain value of this attribute in entire catalog.
     * As an example of unique attribute can be URL - there is no sense in having two entities with same URL, and it's
     * better to have this ensured by the database engine.
     * deprecated in favor of `uniqueGloballyInScopes`
     * </pre>
     *
     * <code>.io.evitadb.externalApi.grpc.generated.GrpcGlobalAttributeUniquenessType uniqueGlobally = 13 [deprecated = true];</code>
     * @deprecated
     * @param value The enum numeric value on the wire for uniqueGlobally to set.
     * @return This builder for chaining.
     */
    @java.lang.Deprecated public Builder setUniqueGloballyValue(int value) {

      uniqueGlobally_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * When attribute is unique globally it is automatically filterable, and it is ensured there is exactly one single
     * entity having certain value of this attribute in entire catalog.
     * As an example of unique attribute can be URL - there is no sense in having two entities with same URL, and it's
     * better to have this ensured by the database engine.
     * deprecated in favor of `uniqueGloballyInScopes`
     * </pre>
     *
     * <code>.io.evitadb.externalApi.grpc.generated.GrpcGlobalAttributeUniquenessType uniqueGlobally = 13 [deprecated = true];</code>
     * @deprecated
     * @return The uniqueGlobally.
     */
    @java.lang.Override
    @java.lang.Deprecated public io.evitadb.externalApi.grpc.generated.GrpcGlobalAttributeUniquenessType getUniqueGlobally() {
      @SuppressWarnings("deprecation")
      io.evitadb.externalApi.grpc.generated.GrpcGlobalAttributeUniquenessType result = io.evitadb.externalApi.grpc.generated.GrpcGlobalAttributeUniquenessType.valueOf(uniqueGlobally_);
      return result == null ? io.evitadb.externalApi.grpc.generated.GrpcGlobalAttributeUniquenessType.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * When attribute is unique globally it is automatically filterable, and it is ensured there is exactly one single
     * entity having certain value of this attribute in entire catalog.
     * As an example of unique attribute can be URL - there is no sense in having two entities with same URL, and it's
     * better to have this ensured by the database engine.
     * deprecated in favor of `uniqueGloballyInScopes`
     * </pre>
     *
     * <code>.io.evitadb.externalApi.grpc.generated.GrpcGlobalAttributeUniquenessType uniqueGlobally = 13 [deprecated = true];</code>
     * @deprecated
     * @param value The uniqueGlobally to set.
     * @return This builder for chaining.
     */
    @java.lang.Deprecated public Builder setUniqueGlobally(io.evitadb.externalApi.grpc.generated.GrpcGlobalAttributeUniquenessType value) {
      if (value == null) {
        throw new NullPointerException();
      }

      uniqueGlobally_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * When attribute is unique globally it is automatically filterable, and it is ensured there is exactly one single
     * entity having certain value of this attribute in entire catalog.
     * As an example of unique attribute can be URL - there is no sense in having two entities with same URL, and it's
     * better to have this ensured by the database engine.
     * deprecated in favor of `uniqueGloballyInScopes`
     * </pre>
     *
     * <code>.io.evitadb.externalApi.grpc.generated.GrpcGlobalAttributeUniquenessType uniqueGlobally = 13 [deprecated = true];</code>
     * @deprecated
     * @return This builder for chaining.
     */
    @java.lang.Deprecated public Builder clearUniqueGlobally() {

      uniqueGlobally_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<io.evitadb.externalApi.grpc.generated.GrpcNameVariant> nameVariant_ =
      java.util.Collections.emptyList();
    private void ensureNameVariantIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        nameVariant_ = new java.util.ArrayList<io.evitadb.externalApi.grpc.generated.GrpcNameVariant>(nameVariant_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.evitadb.externalApi.grpc.generated.GrpcNameVariant, io.evitadb.externalApi.grpc.generated.GrpcNameVariant.Builder, io.evitadb.externalApi.grpc.generated.GrpcNameVariantOrBuilder> nameVariantBuilder_;

    /**
     * <pre>
     * Contains attribute name converted to different naming conventions.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcNameVariant nameVariant = 14;</code>
     */
    public java.util.List<io.evitadb.externalApi.grpc.generated.GrpcNameVariant> getNameVariantList() {
      if (nameVariantBuilder_ == null) {
        return java.util.Collections.unmodifiableList(nameVariant_);
      } else {
        return nameVariantBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Contains attribute name converted to different naming conventions.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcNameVariant nameVariant = 14;</code>
     */
    public int getNameVariantCount() {
      if (nameVariantBuilder_ == null) {
        return nameVariant_.size();
      } else {
        return nameVariantBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Contains attribute name converted to different naming conventions.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcNameVariant nameVariant = 14;</code>
     */
    public io.evitadb.externalApi.grpc.generated.GrpcNameVariant getNameVariant(int index) {
      if (nameVariantBuilder_ == null) {
        return nameVariant_.get(index);
      } else {
        return nameVariantBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Contains attribute name converted to different naming conventions.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcNameVariant nameVariant = 14;</code>
     */
    public Builder setNameVariant(
        int index, io.evitadb.externalApi.grpc.generated.GrpcNameVariant value) {
      if (nameVariantBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureNameVariantIsMutable();
        nameVariant_.set(index, value);
        onChanged();
      } else {
        nameVariantBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Contains attribute name converted to different naming conventions.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcNameVariant nameVariant = 14;</code>
     */
    public Builder setNameVariant(
        int index, io.evitadb.externalApi.grpc.generated.GrpcNameVariant.Builder builderForValue) {
      if (nameVariantBuilder_ == null) {
        ensureNameVariantIsMutable();
        nameVariant_.set(index, builderForValue.build());
        onChanged();
      } else {
        nameVariantBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Contains attribute name converted to different naming conventions.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcNameVariant nameVariant = 14;</code>
     */
    public Builder addNameVariant(io.evitadb.externalApi.grpc.generated.GrpcNameVariant value) {
      if (nameVariantBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureNameVariantIsMutable();
        nameVariant_.add(value);
        onChanged();
      } else {
        nameVariantBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Contains attribute name converted to different naming conventions.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcNameVariant nameVariant = 14;</code>
     */
    public Builder addNameVariant(
        int index, io.evitadb.externalApi.grpc.generated.GrpcNameVariant value) {
      if (nameVariantBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureNameVariantIsMutable();
        nameVariant_.add(index, value);
        onChanged();
      } else {
        nameVariantBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Contains attribute name converted to different naming conventions.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcNameVariant nameVariant = 14;</code>
     */
    public Builder addNameVariant(
        io.evitadb.externalApi.grpc.generated.GrpcNameVariant.Builder builderForValue) {
      if (nameVariantBuilder_ == null) {
        ensureNameVariantIsMutable();
        nameVariant_.add(builderForValue.build());
        onChanged();
      } else {
        nameVariantBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Contains attribute name converted to different naming conventions.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcNameVariant nameVariant = 14;</code>
     */
    public Builder addNameVariant(
        int index, io.evitadb.externalApi.grpc.generated.GrpcNameVariant.Builder builderForValue) {
      if (nameVariantBuilder_ == null) {
        ensureNameVariantIsMutable();
        nameVariant_.add(index, builderForValue.build());
        onChanged();
      } else {
        nameVariantBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Contains attribute name converted to different naming conventions.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcNameVariant nameVariant = 14;</code>
     */
    public Builder addAllNameVariant(
        java.lang.Iterable<? extends io.evitadb.externalApi.grpc.generated.GrpcNameVariant> values) {
      if (nameVariantBuilder_ == null) {
        ensureNameVariantIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, nameVariant_);
        onChanged();
      } else {
        nameVariantBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Contains attribute name converted to different naming conventions.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcNameVariant nameVariant = 14;</code>
     */
    public Builder clearNameVariant() {
      if (nameVariantBuilder_ == null) {
        nameVariant_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        nameVariantBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Contains attribute name converted to different naming conventions.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcNameVariant nameVariant = 14;</code>
     */
    public Builder removeNameVariant(int index) {
      if (nameVariantBuilder_ == null) {
        ensureNameVariantIsMutable();
        nameVariant_.remove(index);
        onChanged();
      } else {
        nameVariantBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Contains attribute name converted to different naming conventions.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcNameVariant nameVariant = 14;</code>
     */
    public io.evitadb.externalApi.grpc.generated.GrpcNameVariant.Builder getNameVariantBuilder(
        int index) {
      return getNameVariantFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Contains attribute name converted to different naming conventions.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcNameVariant nameVariant = 14;</code>
     */
    public io.evitadb.externalApi.grpc.generated.GrpcNameVariantOrBuilder getNameVariantOrBuilder(
        int index) {
      if (nameVariantBuilder_ == null) {
        return nameVariant_.get(index);  } else {
        return nameVariantBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Contains attribute name converted to different naming conventions.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcNameVariant nameVariant = 14;</code>
     */
    public java.util.List<? extends io.evitadb.externalApi.grpc.generated.GrpcNameVariantOrBuilder>
         getNameVariantOrBuilderList() {
      if (nameVariantBuilder_ != null) {
        return nameVariantBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(nameVariant_);
      }
    }
    /**
     * <pre>
     * Contains attribute name converted to different naming conventions.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcNameVariant nameVariant = 14;</code>
     */
    public io.evitadb.externalApi.grpc.generated.GrpcNameVariant.Builder addNameVariantBuilder() {
      return getNameVariantFieldBuilder().addBuilder(
          io.evitadb.externalApi.grpc.generated.GrpcNameVariant.getDefaultInstance());
    }
    /**
     * <pre>
     * Contains attribute name converted to different naming conventions.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcNameVariant nameVariant = 14;</code>
     */
    public io.evitadb.externalApi.grpc.generated.GrpcNameVariant.Builder addNameVariantBuilder(
        int index) {
      return getNameVariantFieldBuilder().addBuilder(
          index, io.evitadb.externalApi.grpc.generated.GrpcNameVariant.getDefaultInstance());
    }
    /**
     * <pre>
     * Contains attribute name converted to different naming conventions.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcNameVariant nameVariant = 14;</code>
     */
    public java.util.List<io.evitadb.externalApi.grpc.generated.GrpcNameVariant.Builder>
         getNameVariantBuilderList() {
      return getNameVariantFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.evitadb.externalApi.grpc.generated.GrpcNameVariant, io.evitadb.externalApi.grpc.generated.GrpcNameVariant.Builder, io.evitadb.externalApi.grpc.generated.GrpcNameVariantOrBuilder>
        getNameVariantFieldBuilder() {
      if (nameVariantBuilder_ == null) {
        nameVariantBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            io.evitadb.externalApi.grpc.generated.GrpcNameVariant, io.evitadb.externalApi.grpc.generated.GrpcNameVariant.Builder, io.evitadb.externalApi.grpc.generated.GrpcNameVariantOrBuilder>(
                nameVariant_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        nameVariant_ = null;
      }
      return nameVariantBuilder_;
    }

    private java.util.List<io.evitadb.externalApi.grpc.generated.GrpcScopedAttributeUniquenessType> uniqueInScopes_ =
      java.util.Collections.emptyList();
    private void ensureUniqueInScopesIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        uniqueInScopes_ = new java.util.ArrayList<io.evitadb.externalApi.grpc.generated.GrpcScopedAttributeUniquenessType>(uniqueInScopes_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.evitadb.externalApi.grpc.generated.GrpcScopedAttributeUniquenessType, io.evitadb.externalApi.grpc.generated.GrpcScopedAttributeUniquenessType.Builder, io.evitadb.externalApi.grpc.generated.GrpcScopedAttributeUniquenessTypeOrBuilder> uniqueInScopesBuilder_;

    /**
     * <pre>
     * When attribute is unique it is automatically filterable, and it is ensured there is exactly one single entity
     * having certain value of this attribute among other entities in the same collection.
     * As an example of unique attribute can be EAN - there is no sense in having two entities with same EAN, and it's
     * better to have this ensured by the database engine.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcScopedAttributeUniquenessType uniqueInScopes = 15;</code>
     */
    public java.util.List<io.evitadb.externalApi.grpc.generated.GrpcScopedAttributeUniquenessType> getUniqueInScopesList() {
      if (uniqueInScopesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(uniqueInScopes_);
      } else {
        return uniqueInScopesBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * When attribute is unique it is automatically filterable, and it is ensured there is exactly one single entity
     * having certain value of this attribute among other entities in the same collection.
     * As an example of unique attribute can be EAN - there is no sense in having two entities with same EAN, and it's
     * better to have this ensured by the database engine.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcScopedAttributeUniquenessType uniqueInScopes = 15;</code>
     */
    public int getUniqueInScopesCount() {
      if (uniqueInScopesBuilder_ == null) {
        return uniqueInScopes_.size();
      } else {
        return uniqueInScopesBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * When attribute is unique it is automatically filterable, and it is ensured there is exactly one single entity
     * having certain value of this attribute among other entities in the same collection.
     * As an example of unique attribute can be EAN - there is no sense in having two entities with same EAN, and it's
     * better to have this ensured by the database engine.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcScopedAttributeUniquenessType uniqueInScopes = 15;</code>
     */
    public io.evitadb.externalApi.grpc.generated.GrpcScopedAttributeUniquenessType getUniqueInScopes(int index) {
      if (uniqueInScopesBuilder_ == null) {
        return uniqueInScopes_.get(index);
      } else {
        return uniqueInScopesBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * When attribute is unique it is automatically filterable, and it is ensured there is exactly one single entity
     * having certain value of this attribute among other entities in the same collection.
     * As an example of unique attribute can be EAN - there is no sense in having two entities with same EAN, and it's
     * better to have this ensured by the database engine.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcScopedAttributeUniquenessType uniqueInScopes = 15;</code>
     */
    public Builder setUniqueInScopes(
        int index, io.evitadb.externalApi.grpc.generated.GrpcScopedAttributeUniquenessType value) {
      if (uniqueInScopesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureUniqueInScopesIsMutable();
        uniqueInScopes_.set(index, value);
        onChanged();
      } else {
        uniqueInScopesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * When attribute is unique it is automatically filterable, and it is ensured there is exactly one single entity
     * having certain value of this attribute among other entities in the same collection.
     * As an example of unique attribute can be EAN - there is no sense in having two entities with same EAN, and it's
     * better to have this ensured by the database engine.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcScopedAttributeUniquenessType uniqueInScopes = 15;</code>
     */
    public Builder setUniqueInScopes(
        int index, io.evitadb.externalApi.grpc.generated.GrpcScopedAttributeUniquenessType.Builder builderForValue) {
      if (uniqueInScopesBuilder_ == null) {
        ensureUniqueInScopesIsMutable();
        uniqueInScopes_.set(index, builderForValue.build());
        onChanged();
      } else {
        uniqueInScopesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * When attribute is unique it is automatically filterable, and it is ensured there is exactly one single entity
     * having certain value of this attribute among other entities in the same collection.
     * As an example of unique attribute can be EAN - there is no sense in having two entities with same EAN, and it's
     * better to have this ensured by the database engine.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcScopedAttributeUniquenessType uniqueInScopes = 15;</code>
     */
    public Builder addUniqueInScopes(io.evitadb.externalApi.grpc.generated.GrpcScopedAttributeUniquenessType value) {
      if (uniqueInScopesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureUniqueInScopesIsMutable();
        uniqueInScopes_.add(value);
        onChanged();
      } else {
        uniqueInScopesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * When attribute is unique it is automatically filterable, and it is ensured there is exactly one single entity
     * having certain value of this attribute among other entities in the same collection.
     * As an example of unique attribute can be EAN - there is no sense in having two entities with same EAN, and it's
     * better to have this ensured by the database engine.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcScopedAttributeUniquenessType uniqueInScopes = 15;</code>
     */
    public Builder addUniqueInScopes(
        int index, io.evitadb.externalApi.grpc.generated.GrpcScopedAttributeUniquenessType value) {
      if (uniqueInScopesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureUniqueInScopesIsMutable();
        uniqueInScopes_.add(index, value);
        onChanged();
      } else {
        uniqueInScopesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * When attribute is unique it is automatically filterable, and it is ensured there is exactly one single entity
     * having certain value of this attribute among other entities in the same collection.
     * As an example of unique attribute can be EAN - there is no sense in having two entities with same EAN, and it's
     * better to have this ensured by the database engine.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcScopedAttributeUniquenessType uniqueInScopes = 15;</code>
     */
    public Builder addUniqueInScopes(
        io.evitadb.externalApi.grpc.generated.GrpcScopedAttributeUniquenessType.Builder builderForValue) {
      if (uniqueInScopesBuilder_ == null) {
        ensureUniqueInScopesIsMutable();
        uniqueInScopes_.add(builderForValue.build());
        onChanged();
      } else {
        uniqueInScopesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * When attribute is unique it is automatically filterable, and it is ensured there is exactly one single entity
     * having certain value of this attribute among other entities in the same collection.
     * As an example of unique attribute can be EAN - there is no sense in having two entities with same EAN, and it's
     * better to have this ensured by the database engine.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcScopedAttributeUniquenessType uniqueInScopes = 15;</code>
     */
    public Builder addUniqueInScopes(
        int index, io.evitadb.externalApi.grpc.generated.GrpcScopedAttributeUniquenessType.Builder builderForValue) {
      if (uniqueInScopesBuilder_ == null) {
        ensureUniqueInScopesIsMutable();
        uniqueInScopes_.add(index, builderForValue.build());
        onChanged();
      } else {
        uniqueInScopesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * When attribute is unique it is automatically filterable, and it is ensured there is exactly one single entity
     * having certain value of this attribute among other entities in the same collection.
     * As an example of unique attribute can be EAN - there is no sense in having two entities with same EAN, and it's
     * better to have this ensured by the database engine.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcScopedAttributeUniquenessType uniqueInScopes = 15;</code>
     */
    public Builder addAllUniqueInScopes(
        java.lang.Iterable<? extends io.evitadb.externalApi.grpc.generated.GrpcScopedAttributeUniquenessType> values) {
      if (uniqueInScopesBuilder_ == null) {
        ensureUniqueInScopesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, uniqueInScopes_);
        onChanged();
      } else {
        uniqueInScopesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * When attribute is unique it is automatically filterable, and it is ensured there is exactly one single entity
     * having certain value of this attribute among other entities in the same collection.
     * As an example of unique attribute can be EAN - there is no sense in having two entities with same EAN, and it's
     * better to have this ensured by the database engine.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcScopedAttributeUniquenessType uniqueInScopes = 15;</code>
     */
    public Builder clearUniqueInScopes() {
      if (uniqueInScopesBuilder_ == null) {
        uniqueInScopes_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        uniqueInScopesBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * When attribute is unique it is automatically filterable, and it is ensured there is exactly one single entity
     * having certain value of this attribute among other entities in the same collection.
     * As an example of unique attribute can be EAN - there is no sense in having two entities with same EAN, and it's
     * better to have this ensured by the database engine.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcScopedAttributeUniquenessType uniqueInScopes = 15;</code>
     */
    public Builder removeUniqueInScopes(int index) {
      if (uniqueInScopesBuilder_ == null) {
        ensureUniqueInScopesIsMutable();
        uniqueInScopes_.remove(index);
        onChanged();
      } else {
        uniqueInScopesBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * When attribute is unique it is automatically filterable, and it is ensured there is exactly one single entity
     * having certain value of this attribute among other entities in the same collection.
     * As an example of unique attribute can be EAN - there is no sense in having two entities with same EAN, and it's
     * better to have this ensured by the database engine.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcScopedAttributeUniquenessType uniqueInScopes = 15;</code>
     */
    public io.evitadb.externalApi.grpc.generated.GrpcScopedAttributeUniquenessType.Builder getUniqueInScopesBuilder(
        int index) {
      return getUniqueInScopesFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * When attribute is unique it is automatically filterable, and it is ensured there is exactly one single entity
     * having certain value of this attribute among other entities in the same collection.
     * As an example of unique attribute can be EAN - there is no sense in having two entities with same EAN, and it's
     * better to have this ensured by the database engine.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcScopedAttributeUniquenessType uniqueInScopes = 15;</code>
     */
    public io.evitadb.externalApi.grpc.generated.GrpcScopedAttributeUniquenessTypeOrBuilder getUniqueInScopesOrBuilder(
        int index) {
      if (uniqueInScopesBuilder_ == null) {
        return uniqueInScopes_.get(index);  } else {
        return uniqueInScopesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * When attribute is unique it is automatically filterable, and it is ensured there is exactly one single entity
     * having certain value of this attribute among other entities in the same collection.
     * As an example of unique attribute can be EAN - there is no sense in having two entities with same EAN, and it's
     * better to have this ensured by the database engine.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcScopedAttributeUniquenessType uniqueInScopes = 15;</code>
     */
    public java.util.List<? extends io.evitadb.externalApi.grpc.generated.GrpcScopedAttributeUniquenessTypeOrBuilder>
         getUniqueInScopesOrBuilderList() {
      if (uniqueInScopesBuilder_ != null) {
        return uniqueInScopesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(uniqueInScopes_);
      }
    }
    /**
     * <pre>
     * When attribute is unique it is automatically filterable, and it is ensured there is exactly one single entity
     * having certain value of this attribute among other entities in the same collection.
     * As an example of unique attribute can be EAN - there is no sense in having two entities with same EAN, and it's
     * better to have this ensured by the database engine.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcScopedAttributeUniquenessType uniqueInScopes = 15;</code>
     */
    public io.evitadb.externalApi.grpc.generated.GrpcScopedAttributeUniquenessType.Builder addUniqueInScopesBuilder() {
      return getUniqueInScopesFieldBuilder().addBuilder(
          io.evitadb.externalApi.grpc.generated.GrpcScopedAttributeUniquenessType.getDefaultInstance());
    }
    /**
     * <pre>
     * When attribute is unique it is automatically filterable, and it is ensured there is exactly one single entity
     * having certain value of this attribute among other entities in the same collection.
     * As an example of unique attribute can be EAN - there is no sense in having two entities with same EAN, and it's
     * better to have this ensured by the database engine.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcScopedAttributeUniquenessType uniqueInScopes = 15;</code>
     */
    public io.evitadb.externalApi.grpc.generated.GrpcScopedAttributeUniquenessType.Builder addUniqueInScopesBuilder(
        int index) {
      return getUniqueInScopesFieldBuilder().addBuilder(
          index, io.evitadb.externalApi.grpc.generated.GrpcScopedAttributeUniquenessType.getDefaultInstance());
    }
    /**
     * <pre>
     * When attribute is unique it is automatically filterable, and it is ensured there is exactly one single entity
     * having certain value of this attribute among other entities in the same collection.
     * As an example of unique attribute can be EAN - there is no sense in having two entities with same EAN, and it's
     * better to have this ensured by the database engine.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcScopedAttributeUniquenessType uniqueInScopes = 15;</code>
     */
    public java.util.List<io.evitadb.externalApi.grpc.generated.GrpcScopedAttributeUniquenessType.Builder>
         getUniqueInScopesBuilderList() {
      return getUniqueInScopesFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.evitadb.externalApi.grpc.generated.GrpcScopedAttributeUniquenessType, io.evitadb.externalApi.grpc.generated.GrpcScopedAttributeUniquenessType.Builder, io.evitadb.externalApi.grpc.generated.GrpcScopedAttributeUniquenessTypeOrBuilder>
        getUniqueInScopesFieldBuilder() {
      if (uniqueInScopesBuilder_ == null) {
        uniqueInScopesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            io.evitadb.externalApi.grpc.generated.GrpcScopedAttributeUniquenessType, io.evitadb.externalApi.grpc.generated.GrpcScopedAttributeUniquenessType.Builder, io.evitadb.externalApi.grpc.generated.GrpcScopedAttributeUniquenessTypeOrBuilder>(
                uniqueInScopes_,
                ((bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        uniqueInScopes_ = null;
      }
      return uniqueInScopesBuilder_;
    }

    private java.util.List<java.lang.Integer> filterableInScopes_ =
      java.util.Collections.emptyList();
    private void ensureFilterableInScopesIsMutable() {
      if (!((bitField0_ & 0x00000004) != 0)) {
        filterableInScopes_ = new java.util.ArrayList<java.lang.Integer>(filterableInScopes_);
        bitField0_ |= 0x00000004;
      }
    }
    /**
     * <pre>
     * When attribute is filterable, it is possible to filter entities by this attribute. Do not mark attribute
     * as filterable unless you know that you'll search entities by this attribute. Each filterable attribute occupies
     * (memory/disk) space in the form of index.
     * When attribute is filterable, extra result `attributeHistogram`
     * can be requested for this attribute.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope filterableInScopes = 16;</code>
     * @return A list containing the filterableInScopes.
     */
    public java.util.List<io.evitadb.externalApi.grpc.generated.GrpcEntityScope> getFilterableInScopesList() {
      return new com.google.protobuf.Internal.ListAdapter<
          java.lang.Integer, io.evitadb.externalApi.grpc.generated.GrpcEntityScope>(filterableInScopes_, filterableInScopes_converter_);
    }
    /**
     * <pre>
     * When attribute is filterable, it is possible to filter entities by this attribute. Do not mark attribute
     * as filterable unless you know that you'll search entities by this attribute. Each filterable attribute occupies
     * (memory/disk) space in the form of index.
     * When attribute is filterable, extra result `attributeHistogram`
     * can be requested for this attribute.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope filterableInScopes = 16;</code>
     * @return The count of filterableInScopes.
     */
    public int getFilterableInScopesCount() {
      return filterableInScopes_.size();
    }
    /**
     * <pre>
     * When attribute is filterable, it is possible to filter entities by this attribute. Do not mark attribute
     * as filterable unless you know that you'll search entities by this attribute. Each filterable attribute occupies
     * (memory/disk) space in the form of index.
     * When attribute is filterable, extra result `attributeHistogram`
     * can be requested for this attribute.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope filterableInScopes = 16;</code>
     * @param index The index of the element to return.
     * @return The filterableInScopes at the given index.
     */
    public io.evitadb.externalApi.grpc.generated.GrpcEntityScope getFilterableInScopes(int index) {
      return filterableInScopes_converter_.convert(filterableInScopes_.get(index));
    }
    /**
     * <pre>
     * When attribute is filterable, it is possible to filter entities by this attribute. Do not mark attribute
     * as filterable unless you know that you'll search entities by this attribute. Each filterable attribute occupies
     * (memory/disk) space in the form of index.
     * When attribute is filterable, extra result `attributeHistogram`
     * can be requested for this attribute.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope filterableInScopes = 16;</code>
     * @param index The index to set the value at.
     * @param value The filterableInScopes to set.
     * @return This builder for chaining.
     */
    public Builder setFilterableInScopes(
        int index, io.evitadb.externalApi.grpc.generated.GrpcEntityScope value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureFilterableInScopesIsMutable();
      filterableInScopes_.set(index, value.getNumber());
      onChanged();
      return this;
    }
    /**
     * <pre>
     * When attribute is filterable, it is possible to filter entities by this attribute. Do not mark attribute
     * as filterable unless you know that you'll search entities by this attribute. Each filterable attribute occupies
     * (memory/disk) space in the form of index.
     * When attribute is filterable, extra result `attributeHistogram`
     * can be requested for this attribute.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope filterableInScopes = 16;</code>
     * @param value The filterableInScopes to add.
     * @return This builder for chaining.
     */
    public Builder addFilterableInScopes(io.evitadb.externalApi.grpc.generated.GrpcEntityScope value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureFilterableInScopesIsMutable();
      filterableInScopes_.add(value.getNumber());
      onChanged();
      return this;
    }
    /**
     * <pre>
     * When attribute is filterable, it is possible to filter entities by this attribute. Do not mark attribute
     * as filterable unless you know that you'll search entities by this attribute. Each filterable attribute occupies
     * (memory/disk) space in the form of index.
     * When attribute is filterable, extra result `attributeHistogram`
     * can be requested for this attribute.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope filterableInScopes = 16;</code>
     * @param values The filterableInScopes to add.
     * @return This builder for chaining.
     */
    public Builder addAllFilterableInScopes(
        java.lang.Iterable<? extends io.evitadb.externalApi.grpc.generated.GrpcEntityScope> values) {
      ensureFilterableInScopesIsMutable();
      for (io.evitadb.externalApi.grpc.generated.GrpcEntityScope value : values) {
        filterableInScopes_.add(value.getNumber());
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * When attribute is filterable, it is possible to filter entities by this attribute. Do not mark attribute
     * as filterable unless you know that you'll search entities by this attribute. Each filterable attribute occupies
     * (memory/disk) space in the form of index.
     * When attribute is filterable, extra result `attributeHistogram`
     * can be requested for this attribute.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope filterableInScopes = 16;</code>
     * @return This builder for chaining.
     */
    public Builder clearFilterableInScopes() {
      filterableInScopes_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000004);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * When attribute is filterable, it is possible to filter entities by this attribute. Do not mark attribute
     * as filterable unless you know that you'll search entities by this attribute. Each filterable attribute occupies
     * (memory/disk) space in the form of index.
     * When attribute is filterable, extra result `attributeHistogram`
     * can be requested for this attribute.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope filterableInScopes = 16;</code>
     * @return A list containing the enum numeric values on the wire for filterableInScopes.
     */
    public java.util.List<java.lang.Integer>
    getFilterableInScopesValueList() {
      return java.util.Collections.unmodifiableList(filterableInScopes_);
    }
    /**
     * <pre>
     * When attribute is filterable, it is possible to filter entities by this attribute. Do not mark attribute
     * as filterable unless you know that you'll search entities by this attribute. Each filterable attribute occupies
     * (memory/disk) space in the form of index.
     * When attribute is filterable, extra result `attributeHistogram`
     * can be requested for this attribute.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope filterableInScopes = 16;</code>
     * @param index The index of the value to return.
     * @return The enum numeric value on the wire of filterableInScopes at the given index.
     */
    public int getFilterableInScopesValue(int index) {
      return filterableInScopes_.get(index);
    }
    /**
     * <pre>
     * When attribute is filterable, it is possible to filter entities by this attribute. Do not mark attribute
     * as filterable unless you know that you'll search entities by this attribute. Each filterable attribute occupies
     * (memory/disk) space in the form of index.
     * When attribute is filterable, extra result `attributeHistogram`
     * can be requested for this attribute.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope filterableInScopes = 16;</code>
     * @param index The index of the value to return.
     * @return The enum numeric value on the wire of filterableInScopes at the given index.
     * @return This builder for chaining.
     */
    public Builder setFilterableInScopesValue(
        int index, int value) {
      ensureFilterableInScopesIsMutable();
      filterableInScopes_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * When attribute is filterable, it is possible to filter entities by this attribute. Do not mark attribute
     * as filterable unless you know that you'll search entities by this attribute. Each filterable attribute occupies
     * (memory/disk) space in the form of index.
     * When attribute is filterable, extra result `attributeHistogram`
     * can be requested for this attribute.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope filterableInScopes = 16;</code>
     * @param value The enum numeric value on the wire for filterableInScopes to add.
     * @return This builder for chaining.
     */
    public Builder addFilterableInScopesValue(int value) {
      ensureFilterableInScopesIsMutable();
      filterableInScopes_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * When attribute is filterable, it is possible to filter entities by this attribute. Do not mark attribute
     * as filterable unless you know that you'll search entities by this attribute. Each filterable attribute occupies
     * (memory/disk) space in the form of index.
     * When attribute is filterable, extra result `attributeHistogram`
     * can be requested for this attribute.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope filterableInScopes = 16;</code>
     * @param values The enum numeric values on the wire for filterableInScopes to add.
     * @return This builder for chaining.
     */
    public Builder addAllFilterableInScopesValue(
        java.lang.Iterable<java.lang.Integer> values) {
      ensureFilterableInScopesIsMutable();
      for (int value : values) {
        filterableInScopes_.add(value);
      }
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Integer> sortableInScopes_ =
      java.util.Collections.emptyList();
    private void ensureSortableInScopesIsMutable() {
      if (!((bitField0_ & 0x00000008) != 0)) {
        sortableInScopes_ = new java.util.ArrayList<java.lang.Integer>(sortableInScopes_);
        bitField0_ |= 0x00000008;
      }
    }
    /**
     * <pre>
     * When attribute is sortable, it is possible to sort entities by this attribute. Do not mark attribute
     * as sortable unless you know that you'll sort entities along this attribute. Each sortable attribute occupies
     * (memory/disk) space in the form of index..
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope sortableInScopes = 17;</code>
     * @return A list containing the sortableInScopes.
     */
    public java.util.List<io.evitadb.externalApi.grpc.generated.GrpcEntityScope> getSortableInScopesList() {
      return new com.google.protobuf.Internal.ListAdapter<
          java.lang.Integer, io.evitadb.externalApi.grpc.generated.GrpcEntityScope>(sortableInScopes_, sortableInScopes_converter_);
    }
    /**
     * <pre>
     * When attribute is sortable, it is possible to sort entities by this attribute. Do not mark attribute
     * as sortable unless you know that you'll sort entities along this attribute. Each sortable attribute occupies
     * (memory/disk) space in the form of index..
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope sortableInScopes = 17;</code>
     * @return The count of sortableInScopes.
     */
    public int getSortableInScopesCount() {
      return sortableInScopes_.size();
    }
    /**
     * <pre>
     * When attribute is sortable, it is possible to sort entities by this attribute. Do not mark attribute
     * as sortable unless you know that you'll sort entities along this attribute. Each sortable attribute occupies
     * (memory/disk) space in the form of index..
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope sortableInScopes = 17;</code>
     * @param index The index of the element to return.
     * @return The sortableInScopes at the given index.
     */
    public io.evitadb.externalApi.grpc.generated.GrpcEntityScope getSortableInScopes(int index) {
      return sortableInScopes_converter_.convert(sortableInScopes_.get(index));
    }
    /**
     * <pre>
     * When attribute is sortable, it is possible to sort entities by this attribute. Do not mark attribute
     * as sortable unless you know that you'll sort entities along this attribute. Each sortable attribute occupies
     * (memory/disk) space in the form of index..
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope sortableInScopes = 17;</code>
     * @param index The index to set the value at.
     * @param value The sortableInScopes to set.
     * @return This builder for chaining.
     */
    public Builder setSortableInScopes(
        int index, io.evitadb.externalApi.grpc.generated.GrpcEntityScope value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureSortableInScopesIsMutable();
      sortableInScopes_.set(index, value.getNumber());
      onChanged();
      return this;
    }
    /**
     * <pre>
     * When attribute is sortable, it is possible to sort entities by this attribute. Do not mark attribute
     * as sortable unless you know that you'll sort entities along this attribute. Each sortable attribute occupies
     * (memory/disk) space in the form of index..
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope sortableInScopes = 17;</code>
     * @param value The sortableInScopes to add.
     * @return This builder for chaining.
     */
    public Builder addSortableInScopes(io.evitadb.externalApi.grpc.generated.GrpcEntityScope value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureSortableInScopesIsMutable();
      sortableInScopes_.add(value.getNumber());
      onChanged();
      return this;
    }
    /**
     * <pre>
     * When attribute is sortable, it is possible to sort entities by this attribute. Do not mark attribute
     * as sortable unless you know that you'll sort entities along this attribute. Each sortable attribute occupies
     * (memory/disk) space in the form of index..
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope sortableInScopes = 17;</code>
     * @param values The sortableInScopes to add.
     * @return This builder for chaining.
     */
    public Builder addAllSortableInScopes(
        java.lang.Iterable<? extends io.evitadb.externalApi.grpc.generated.GrpcEntityScope> values) {
      ensureSortableInScopesIsMutable();
      for (io.evitadb.externalApi.grpc.generated.GrpcEntityScope value : values) {
        sortableInScopes_.add(value.getNumber());
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * When attribute is sortable, it is possible to sort entities by this attribute. Do not mark attribute
     * as sortable unless you know that you'll sort entities along this attribute. Each sortable attribute occupies
     * (memory/disk) space in the form of index..
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope sortableInScopes = 17;</code>
     * @return This builder for chaining.
     */
    public Builder clearSortableInScopes() {
      sortableInScopes_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000008);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * When attribute is sortable, it is possible to sort entities by this attribute. Do not mark attribute
     * as sortable unless you know that you'll sort entities along this attribute. Each sortable attribute occupies
     * (memory/disk) space in the form of index..
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope sortableInScopes = 17;</code>
     * @return A list containing the enum numeric values on the wire for sortableInScopes.
     */
    public java.util.List<java.lang.Integer>
    getSortableInScopesValueList() {
      return java.util.Collections.unmodifiableList(sortableInScopes_);
    }
    /**
     * <pre>
     * When attribute is sortable, it is possible to sort entities by this attribute. Do not mark attribute
     * as sortable unless you know that you'll sort entities along this attribute. Each sortable attribute occupies
     * (memory/disk) space in the form of index..
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope sortableInScopes = 17;</code>
     * @param index The index of the value to return.
     * @return The enum numeric value on the wire of sortableInScopes at the given index.
     */
    public int getSortableInScopesValue(int index) {
      return sortableInScopes_.get(index);
    }
    /**
     * <pre>
     * When attribute is sortable, it is possible to sort entities by this attribute. Do not mark attribute
     * as sortable unless you know that you'll sort entities along this attribute. Each sortable attribute occupies
     * (memory/disk) space in the form of index..
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope sortableInScopes = 17;</code>
     * @param index The index of the value to return.
     * @return The enum numeric value on the wire of sortableInScopes at the given index.
     * @return This builder for chaining.
     */
    public Builder setSortableInScopesValue(
        int index, int value) {
      ensureSortableInScopesIsMutable();
      sortableInScopes_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * When attribute is sortable, it is possible to sort entities by this attribute. Do not mark attribute
     * as sortable unless you know that you'll sort entities along this attribute. Each sortable attribute occupies
     * (memory/disk) space in the form of index..
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope sortableInScopes = 17;</code>
     * @param value The enum numeric value on the wire for sortableInScopes to add.
     * @return This builder for chaining.
     */
    public Builder addSortableInScopesValue(int value) {
      ensureSortableInScopesIsMutable();
      sortableInScopes_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * When attribute is sortable, it is possible to sort entities by this attribute. Do not mark attribute
     * as sortable unless you know that you'll sort entities along this attribute. Each sortable attribute occupies
     * (memory/disk) space in the form of index..
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope sortableInScopes = 17;</code>
     * @param values The enum numeric values on the wire for sortableInScopes to add.
     * @return This builder for chaining.
     */
    public Builder addAllSortableInScopesValue(
        java.lang.Iterable<java.lang.Integer> values) {
      ensureSortableInScopesIsMutable();
      for (int value : values) {
        sortableInScopes_.add(value);
      }
      onChanged();
      return this;
    }

    private java.util.List<io.evitadb.externalApi.grpc.generated.GrpcScopedGlobalAttributeUniquenessType> uniqueGloballyInScopes_ =
      java.util.Collections.emptyList();
    private void ensureUniqueGloballyInScopesIsMutable() {
      if (!((bitField0_ & 0x00000010) != 0)) {
        uniqueGloballyInScopes_ = new java.util.ArrayList<io.evitadb.externalApi.grpc.generated.GrpcScopedGlobalAttributeUniquenessType>(uniqueGloballyInScopes_);
        bitField0_ |= 0x00000010;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.evitadb.externalApi.grpc.generated.GrpcScopedGlobalAttributeUniquenessType, io.evitadb.externalApi.grpc.generated.GrpcScopedGlobalAttributeUniquenessType.Builder, io.evitadb.externalApi.grpc.generated.GrpcScopedGlobalAttributeUniquenessTypeOrBuilder> uniqueGloballyInScopesBuilder_;

    /**
     * <pre>
     * When attribute is unique globally it is automatically filterable, and it is ensured there is exactly one single
     * entity having certain value of this attribute in entire catalog.
     * As an example of unique attribute can be URL - there is no sense in having two entities with same URL, and it's
     * better to have this ensured by the database engine.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcScopedGlobalAttributeUniquenessType uniqueGloballyInScopes = 18;</code>
     */
    public java.util.List<io.evitadb.externalApi.grpc.generated.GrpcScopedGlobalAttributeUniquenessType> getUniqueGloballyInScopesList() {
      if (uniqueGloballyInScopesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(uniqueGloballyInScopes_);
      } else {
        return uniqueGloballyInScopesBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * When attribute is unique globally it is automatically filterable, and it is ensured there is exactly one single
     * entity having certain value of this attribute in entire catalog.
     * As an example of unique attribute can be URL - there is no sense in having two entities with same URL, and it's
     * better to have this ensured by the database engine.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcScopedGlobalAttributeUniquenessType uniqueGloballyInScopes = 18;</code>
     */
    public int getUniqueGloballyInScopesCount() {
      if (uniqueGloballyInScopesBuilder_ == null) {
        return uniqueGloballyInScopes_.size();
      } else {
        return uniqueGloballyInScopesBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * When attribute is unique globally it is automatically filterable, and it is ensured there is exactly one single
     * entity having certain value of this attribute in entire catalog.
     * As an example of unique attribute can be URL - there is no sense in having two entities with same URL, and it's
     * better to have this ensured by the database engine.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcScopedGlobalAttributeUniquenessType uniqueGloballyInScopes = 18;</code>
     */
    public io.evitadb.externalApi.grpc.generated.GrpcScopedGlobalAttributeUniquenessType getUniqueGloballyInScopes(int index) {
      if (uniqueGloballyInScopesBuilder_ == null) {
        return uniqueGloballyInScopes_.get(index);
      } else {
        return uniqueGloballyInScopesBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * When attribute is unique globally it is automatically filterable, and it is ensured there is exactly one single
     * entity having certain value of this attribute in entire catalog.
     * As an example of unique attribute can be URL - there is no sense in having two entities with same URL, and it's
     * better to have this ensured by the database engine.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcScopedGlobalAttributeUniquenessType uniqueGloballyInScopes = 18;</code>
     */
    public Builder setUniqueGloballyInScopes(
        int index, io.evitadb.externalApi.grpc.generated.GrpcScopedGlobalAttributeUniquenessType value) {
      if (uniqueGloballyInScopesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureUniqueGloballyInScopesIsMutable();
        uniqueGloballyInScopes_.set(index, value);
        onChanged();
      } else {
        uniqueGloballyInScopesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * When attribute is unique globally it is automatically filterable, and it is ensured there is exactly one single
     * entity having certain value of this attribute in entire catalog.
     * As an example of unique attribute can be URL - there is no sense in having two entities with same URL, and it's
     * better to have this ensured by the database engine.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcScopedGlobalAttributeUniquenessType uniqueGloballyInScopes = 18;</code>
     */
    public Builder setUniqueGloballyInScopes(
        int index, io.evitadb.externalApi.grpc.generated.GrpcScopedGlobalAttributeUniquenessType.Builder builderForValue) {
      if (uniqueGloballyInScopesBuilder_ == null) {
        ensureUniqueGloballyInScopesIsMutable();
        uniqueGloballyInScopes_.set(index, builderForValue.build());
        onChanged();
      } else {
        uniqueGloballyInScopesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * When attribute is unique globally it is automatically filterable, and it is ensured there is exactly one single
     * entity having certain value of this attribute in entire catalog.
     * As an example of unique attribute can be URL - there is no sense in having two entities with same URL, and it's
     * better to have this ensured by the database engine.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcScopedGlobalAttributeUniquenessType uniqueGloballyInScopes = 18;</code>
     */
    public Builder addUniqueGloballyInScopes(io.evitadb.externalApi.grpc.generated.GrpcScopedGlobalAttributeUniquenessType value) {
      if (uniqueGloballyInScopesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureUniqueGloballyInScopesIsMutable();
        uniqueGloballyInScopes_.add(value);
        onChanged();
      } else {
        uniqueGloballyInScopesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * When attribute is unique globally it is automatically filterable, and it is ensured there is exactly one single
     * entity having certain value of this attribute in entire catalog.
     * As an example of unique attribute can be URL - there is no sense in having two entities with same URL, and it's
     * better to have this ensured by the database engine.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcScopedGlobalAttributeUniquenessType uniqueGloballyInScopes = 18;</code>
     */
    public Builder addUniqueGloballyInScopes(
        int index, io.evitadb.externalApi.grpc.generated.GrpcScopedGlobalAttributeUniquenessType value) {
      if (uniqueGloballyInScopesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureUniqueGloballyInScopesIsMutable();
        uniqueGloballyInScopes_.add(index, value);
        onChanged();
      } else {
        uniqueGloballyInScopesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * When attribute is unique globally it is automatically filterable, and it is ensured there is exactly one single
     * entity having certain value of this attribute in entire catalog.
     * As an example of unique attribute can be URL - there is no sense in having two entities with same URL, and it's
     * better to have this ensured by the database engine.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcScopedGlobalAttributeUniquenessType uniqueGloballyInScopes = 18;</code>
     */
    public Builder addUniqueGloballyInScopes(
        io.evitadb.externalApi.grpc.generated.GrpcScopedGlobalAttributeUniquenessType.Builder builderForValue) {
      if (uniqueGloballyInScopesBuilder_ == null) {
        ensureUniqueGloballyInScopesIsMutable();
        uniqueGloballyInScopes_.add(builderForValue.build());
        onChanged();
      } else {
        uniqueGloballyInScopesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * When attribute is unique globally it is automatically filterable, and it is ensured there is exactly one single
     * entity having certain value of this attribute in entire catalog.
     * As an example of unique attribute can be URL - there is no sense in having two entities with same URL, and it's
     * better to have this ensured by the database engine.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcScopedGlobalAttributeUniquenessType uniqueGloballyInScopes = 18;</code>
     */
    public Builder addUniqueGloballyInScopes(
        int index, io.evitadb.externalApi.grpc.generated.GrpcScopedGlobalAttributeUniquenessType.Builder builderForValue) {
      if (uniqueGloballyInScopesBuilder_ == null) {
        ensureUniqueGloballyInScopesIsMutable();
        uniqueGloballyInScopes_.add(index, builderForValue.build());
        onChanged();
      } else {
        uniqueGloballyInScopesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * When attribute is unique globally it is automatically filterable, and it is ensured there is exactly one single
     * entity having certain value of this attribute in entire catalog.
     * As an example of unique attribute can be URL - there is no sense in having two entities with same URL, and it's
     * better to have this ensured by the database engine.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcScopedGlobalAttributeUniquenessType uniqueGloballyInScopes = 18;</code>
     */
    public Builder addAllUniqueGloballyInScopes(
        java.lang.Iterable<? extends io.evitadb.externalApi.grpc.generated.GrpcScopedGlobalAttributeUniquenessType> values) {
      if (uniqueGloballyInScopesBuilder_ == null) {
        ensureUniqueGloballyInScopesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, uniqueGloballyInScopes_);
        onChanged();
      } else {
        uniqueGloballyInScopesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * When attribute is unique globally it is automatically filterable, and it is ensured there is exactly one single
     * entity having certain value of this attribute in entire catalog.
     * As an example of unique attribute can be URL - there is no sense in having two entities with same URL, and it's
     * better to have this ensured by the database engine.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcScopedGlobalAttributeUniquenessType uniqueGloballyInScopes = 18;</code>
     */
    public Builder clearUniqueGloballyInScopes() {
      if (uniqueGloballyInScopesBuilder_ == null) {
        uniqueGloballyInScopes_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
      } else {
        uniqueGloballyInScopesBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * When attribute is unique globally it is automatically filterable, and it is ensured there is exactly one single
     * entity having certain value of this attribute in entire catalog.
     * As an example of unique attribute can be URL - there is no sense in having two entities with same URL, and it's
     * better to have this ensured by the database engine.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcScopedGlobalAttributeUniquenessType uniqueGloballyInScopes = 18;</code>
     */
    public Builder removeUniqueGloballyInScopes(int index) {
      if (uniqueGloballyInScopesBuilder_ == null) {
        ensureUniqueGloballyInScopesIsMutable();
        uniqueGloballyInScopes_.remove(index);
        onChanged();
      } else {
        uniqueGloballyInScopesBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * When attribute is unique globally it is automatically filterable, and it is ensured there is exactly one single
     * entity having certain value of this attribute in entire catalog.
     * As an example of unique attribute can be URL - there is no sense in having two entities with same URL, and it's
     * better to have this ensured by the database engine.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcScopedGlobalAttributeUniquenessType uniqueGloballyInScopes = 18;</code>
     */
    public io.evitadb.externalApi.grpc.generated.GrpcScopedGlobalAttributeUniquenessType.Builder getUniqueGloballyInScopesBuilder(
        int index) {
      return getUniqueGloballyInScopesFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * When attribute is unique globally it is automatically filterable, and it is ensured there is exactly one single
     * entity having certain value of this attribute in entire catalog.
     * As an example of unique attribute can be URL - there is no sense in having two entities with same URL, and it's
     * better to have this ensured by the database engine.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcScopedGlobalAttributeUniquenessType uniqueGloballyInScopes = 18;</code>
     */
    public io.evitadb.externalApi.grpc.generated.GrpcScopedGlobalAttributeUniquenessTypeOrBuilder getUniqueGloballyInScopesOrBuilder(
        int index) {
      if (uniqueGloballyInScopesBuilder_ == null) {
        return uniqueGloballyInScopes_.get(index);  } else {
        return uniqueGloballyInScopesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * When attribute is unique globally it is automatically filterable, and it is ensured there is exactly one single
     * entity having certain value of this attribute in entire catalog.
     * As an example of unique attribute can be URL - there is no sense in having two entities with same URL, and it's
     * better to have this ensured by the database engine.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcScopedGlobalAttributeUniquenessType uniqueGloballyInScopes = 18;</code>
     */
    public java.util.List<? extends io.evitadb.externalApi.grpc.generated.GrpcScopedGlobalAttributeUniquenessTypeOrBuilder>
         getUniqueGloballyInScopesOrBuilderList() {
      if (uniqueGloballyInScopesBuilder_ != null) {
        return uniqueGloballyInScopesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(uniqueGloballyInScopes_);
      }
    }
    /**
     * <pre>
     * When attribute is unique globally it is automatically filterable, and it is ensured there is exactly one single
     * entity having certain value of this attribute in entire catalog.
     * As an example of unique attribute can be URL - there is no sense in having two entities with same URL, and it's
     * better to have this ensured by the database engine.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcScopedGlobalAttributeUniquenessType uniqueGloballyInScopes = 18;</code>
     */
    public io.evitadb.externalApi.grpc.generated.GrpcScopedGlobalAttributeUniquenessType.Builder addUniqueGloballyInScopesBuilder() {
      return getUniqueGloballyInScopesFieldBuilder().addBuilder(
          io.evitadb.externalApi.grpc.generated.GrpcScopedGlobalAttributeUniquenessType.getDefaultInstance());
    }
    /**
     * <pre>
     * When attribute is unique globally it is automatically filterable, and it is ensured there is exactly one single
     * entity having certain value of this attribute in entire catalog.
     * As an example of unique attribute can be URL - there is no sense in having two entities with same URL, and it's
     * better to have this ensured by the database engine.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcScopedGlobalAttributeUniquenessType uniqueGloballyInScopes = 18;</code>
     */
    public io.evitadb.externalApi.grpc.generated.GrpcScopedGlobalAttributeUniquenessType.Builder addUniqueGloballyInScopesBuilder(
        int index) {
      return getUniqueGloballyInScopesFieldBuilder().addBuilder(
          index, io.evitadb.externalApi.grpc.generated.GrpcScopedGlobalAttributeUniquenessType.getDefaultInstance());
    }
    /**
     * <pre>
     * When attribute is unique globally it is automatically filterable, and it is ensured there is exactly one single
     * entity having certain value of this attribute in entire catalog.
     * As an example of unique attribute can be URL - there is no sense in having two entities with same URL, and it's
     * better to have this ensured by the database engine.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcScopedGlobalAttributeUniquenessType uniqueGloballyInScopes = 18;</code>
     */
    public java.util.List<io.evitadb.externalApi.grpc.generated.GrpcScopedGlobalAttributeUniquenessType.Builder>
         getUniqueGloballyInScopesBuilderList() {
      return getUniqueGloballyInScopesFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.evitadb.externalApi.grpc.generated.GrpcScopedGlobalAttributeUniquenessType, io.evitadb.externalApi.grpc.generated.GrpcScopedGlobalAttributeUniquenessType.Builder, io.evitadb.externalApi.grpc.generated.GrpcScopedGlobalAttributeUniquenessTypeOrBuilder>
        getUniqueGloballyInScopesFieldBuilder() {
      if (uniqueGloballyInScopesBuilder_ == null) {
        uniqueGloballyInScopesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            io.evitadb.externalApi.grpc.generated.GrpcScopedGlobalAttributeUniquenessType, io.evitadb.externalApi.grpc.generated.GrpcScopedGlobalAttributeUniquenessType.Builder, io.evitadb.externalApi.grpc.generated.GrpcScopedGlobalAttributeUniquenessTypeOrBuilder>(
                uniqueGloballyInScopes_,
                ((bitField0_ & 0x00000010) != 0),
                getParentForChildren(),
                isClean());
        uniqueGloballyInScopes_ = null;
      }
      return uniqueGloballyInScopesBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:io.evitadb.externalApi.grpc.generated.GrpcGlobalAttributeSchema)
  }

  // @@protoc_insertion_point(class_scope:io.evitadb.externalApi.grpc.generated.GrpcGlobalAttributeSchema)
  private static final io.evitadb.externalApi.grpc.generated.GrpcGlobalAttributeSchema DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.evitadb.externalApi.grpc.generated.GrpcGlobalAttributeSchema();
  }

  public static io.evitadb.externalApi.grpc.generated.GrpcGlobalAttributeSchema getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<GrpcGlobalAttributeSchema>
      PARSER = new com.google.protobuf.AbstractParser<GrpcGlobalAttributeSchema>() {
    @java.lang.Override
    public GrpcGlobalAttributeSchema parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new GrpcGlobalAttributeSchema(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<GrpcGlobalAttributeSchema> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<GrpcGlobalAttributeSchema> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.evitadb.externalApi.grpc.generated.GrpcGlobalAttributeSchema getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

