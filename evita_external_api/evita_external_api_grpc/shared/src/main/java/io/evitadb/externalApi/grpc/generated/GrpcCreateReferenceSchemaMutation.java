/*
 *
 *                         _ _        ____  ____
 *               _____   _(_) |_ __ _|  _ \| __ )
 *              / _ \ \ / / | __/ _` | | | |  _ \
 *             |  __/\ V /| | || (_| | |_| | |_) |
 *              \___| \_/ |_|\__\__,_|____/|____/
 *
 *   Copyright (c) 2023-2025
 *
 *   Licensed under the Business Source License, Version 1.1 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *   https://github.com/FgForrest/evitaDB/blob/master/LICENSE
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GrpcReferenceSchemaMutations.proto

// Protobuf Java Version: 3.25.8
package io.evitadb.externalApi.grpc.generated;

/**
 * <pre>
 * Mutation is responsible for setting up a new `ReferenceSchema` in the `EntitySchema`.
 * Mutation can be used for altering also the existing `ReferenceSchema` alone.
 * </pre>
 *
 * Protobuf type {@code io.evitadb.externalApi.grpc.generated.GrpcCreateReferenceSchemaMutation}
 */
public final class GrpcCreateReferenceSchemaMutation extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:io.evitadb.externalApi.grpc.generated.GrpcCreateReferenceSchemaMutation)
    GrpcCreateReferenceSchemaMutationOrBuilder {
private static final long serialVersionUID = 0L;
  // Use GrpcCreateReferenceSchemaMutation.newBuilder() to construct.
  private GrpcCreateReferenceSchemaMutation(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private GrpcCreateReferenceSchemaMutation() {
    name_ = "";
    cardinality_ = 0;
    referencedEntityType_ = "";
    indexedInScopes_ = java.util.Collections.emptyList();
    facetedInScopes_ = java.util.Collections.emptyList();
    scopedIndexTypes_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new GrpcCreateReferenceSchemaMutation();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.evitadb.externalApi.grpc.generated.GrpcReferenceSchemaMutations.internal_static_io_evitadb_externalApi_grpc_generated_GrpcCreateReferenceSchemaMutation_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.evitadb.externalApi.grpc.generated.GrpcReferenceSchemaMutations.internal_static_io_evitadb_externalApi_grpc_generated_GrpcCreateReferenceSchemaMutation_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.evitadb.externalApi.grpc.generated.GrpcCreateReferenceSchemaMutation.class, io.evitadb.externalApi.grpc.generated.GrpcCreateReferenceSchemaMutation.Builder.class);
  }

  private int bitField0_;
  public static final int NAME_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object name_ = "";
  /**
   * <pre>
   * Name of the reference the mutation is targeting.
   * </pre>
   *
   * <code>string name = 1;</code>
   * @return The name.
   */
  @java.lang.Override
  public java.lang.String getName() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs =
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      name_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Name of the reference the mutation is targeting.
   * </pre>
   *
   * <code>string name = 1;</code>
   * @return The bytes for name.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getNameBytes() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      name_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int DESCRIPTION_FIELD_NUMBER = 2;
  private com.google.protobuf.StringValue description_;
  /**
   * <pre>
   * Contains description of the model is optional but helps authors of the schema / client API to better
   * explain the original purpose of the model to the consumers.
   * </pre>
   *
   * <code>.google.protobuf.StringValue description = 2;</code>
   * @return Whether the description field is set.
   */
  @java.lang.Override
  public boolean hasDescription() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * Contains description of the model is optional but helps authors of the schema / client API to better
   * explain the original purpose of the model to the consumers.
   * </pre>
   *
   * <code>.google.protobuf.StringValue description = 2;</code>
   * @return The description.
   */
  @java.lang.Override
  public com.google.protobuf.StringValue getDescription() {
    return description_ == null ? com.google.protobuf.StringValue.getDefaultInstance() : description_;
  }
  /**
   * <pre>
   * Contains description of the model is optional but helps authors of the schema / client API to better
   * explain the original purpose of the model to the consumers.
   * </pre>
   *
   * <code>.google.protobuf.StringValue description = 2;</code>
   */
  @java.lang.Override
  public com.google.protobuf.StringValueOrBuilder getDescriptionOrBuilder() {
    return description_ == null ? com.google.protobuf.StringValue.getDefaultInstance() : description_;
  }

  public static final int DEPRECATIONNOTICE_FIELD_NUMBER = 3;
  private com.google.protobuf.StringValue deprecationNotice_;
  /**
   * <pre>
   * Deprecation notice contains information about planned removal of this schema from the model / client API.
   * This allows to plan and evolve the schema allowing clients to adapt early to planned breaking changes.
   * </pre>
   *
   * <code>.google.protobuf.StringValue deprecationNotice = 3;</code>
   * @return Whether the deprecationNotice field is set.
   */
  @java.lang.Override
  public boolean hasDeprecationNotice() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * Deprecation notice contains information about planned removal of this schema from the model / client API.
   * This allows to plan and evolve the schema allowing clients to adapt early to planned breaking changes.
   * </pre>
   *
   * <code>.google.protobuf.StringValue deprecationNotice = 3;</code>
   * @return The deprecationNotice.
   */
  @java.lang.Override
  public com.google.protobuf.StringValue getDeprecationNotice() {
    return deprecationNotice_ == null ? com.google.protobuf.StringValue.getDefaultInstance() : deprecationNotice_;
  }
  /**
   * <pre>
   * Deprecation notice contains information about planned removal of this schema from the model / client API.
   * This allows to plan and evolve the schema allowing clients to adapt early to planned breaking changes.
   * </pre>
   *
   * <code>.google.protobuf.StringValue deprecationNotice = 3;</code>
   */
  @java.lang.Override
  public com.google.protobuf.StringValueOrBuilder getDeprecationNoticeOrBuilder() {
    return deprecationNotice_ == null ? com.google.protobuf.StringValue.getDefaultInstance() : deprecationNotice_;
  }

  public static final int CARDINALITY_FIELD_NUMBER = 4;
  private int cardinality_ = 0;
  /**
   * <pre>
   * Cardinality describes the expected count of relations of this type. In evitaDB we define only one-way
   * relationship from the perspective of the entity. We stick to the ERD modelling
   * [standards](https://www.gleek.io/blog/crows-foot-notation.html) here. Cardinality affect the design
   * of the client API (returning only single reference or collections) and also help us to protect the consistency
   * of the data so that conforms to the creator mental model.
   * </pre>
   *
   * <code>.io.evitadb.externalApi.grpc.generated.GrpcCardinality cardinality = 4;</code>
   * @return The enum numeric value on the wire for cardinality.
   */
  @java.lang.Override public int getCardinalityValue() {
    return cardinality_;
  }
  /**
   * <pre>
   * Cardinality describes the expected count of relations of this type. In evitaDB we define only one-way
   * relationship from the perspective of the entity. We stick to the ERD modelling
   * [standards](https://www.gleek.io/blog/crows-foot-notation.html) here. Cardinality affect the design
   * of the client API (returning only single reference or collections) and also help us to protect the consistency
   * of the data so that conforms to the creator mental model.
   * </pre>
   *
   * <code>.io.evitadb.externalApi.grpc.generated.GrpcCardinality cardinality = 4;</code>
   * @return The cardinality.
   */
  @java.lang.Override public io.evitadb.externalApi.grpc.generated.GrpcCardinality getCardinality() {
    io.evitadb.externalApi.grpc.generated.GrpcCardinality result = io.evitadb.externalApi.grpc.generated.GrpcCardinality.forNumber(cardinality_);
    return result == null ? io.evitadb.externalApi.grpc.generated.GrpcCardinality.UNRECOGNIZED : result;
  }

  public static final int REFERENCEDENTITYTYPE_FIELD_NUMBER = 5;
  @SuppressWarnings("serial")
  private volatile java.lang.Object referencedEntityType_ = "";
  /**
   * <pre>
   * Reference to `EntitySchema.name` of the referenced entity. Might be also any `String`
   * that identifies type some external resource not maintained by Evita.
   * </pre>
   *
   * <code>string referencedEntityType = 5;</code>
   * @return The referencedEntityType.
   */
  @java.lang.Override
  public java.lang.String getReferencedEntityType() {
    java.lang.Object ref = referencedEntityType_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs =
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      referencedEntityType_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Reference to `EntitySchema.name` of the referenced entity. Might be also any `String`
   * that identifies type some external resource not maintained by Evita.
   * </pre>
   *
   * <code>string referencedEntityType = 5;</code>
   * @return The bytes for referencedEntityType.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getReferencedEntityTypeBytes() {
    java.lang.Object ref = referencedEntityType_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      referencedEntityType_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int REFERENCEDENTITYTYPEMANAGED_FIELD_NUMBER = 6;
  private boolean referencedEntityTypeManaged_ = false;
  /**
   * <pre>
   * Whether `referencedEntityType` refers to any existing `EntitySchema.name` that is
   * maintained by Evita.
   * </pre>
   *
   * <code>bool referencedEntityTypeManaged = 6;</code>
   * @return The referencedEntityTypeManaged.
   */
  @java.lang.Override
  public boolean getReferencedEntityTypeManaged() {
    return referencedEntityTypeManaged_;
  }

  public static final int REFERENCEDGROUPTYPE_FIELD_NUMBER = 7;
  private com.google.protobuf.StringValue referencedGroupType_;
  /**
   * <pre>
   * Reference to `EntitySchema.name` of the referenced group entity. Might be also any `String`
   * that identifies type some external resource not maintained by Evita.
   * </pre>
   *
   * <code>.google.protobuf.StringValue referencedGroupType = 7;</code>
   * @return Whether the referencedGroupType field is set.
   */
  @java.lang.Override
  public boolean hasReferencedGroupType() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <pre>
   * Reference to `EntitySchema.name` of the referenced group entity. Might be also any `String`
   * that identifies type some external resource not maintained by Evita.
   * </pre>
   *
   * <code>.google.protobuf.StringValue referencedGroupType = 7;</code>
   * @return The referencedGroupType.
   */
  @java.lang.Override
  public com.google.protobuf.StringValue getReferencedGroupType() {
    return referencedGroupType_ == null ? com.google.protobuf.StringValue.getDefaultInstance() : referencedGroupType_;
  }
  /**
   * <pre>
   * Reference to `EntitySchema.name` of the referenced group entity. Might be also any `String`
   * that identifies type some external resource not maintained by Evita.
   * </pre>
   *
   * <code>.google.protobuf.StringValue referencedGroupType = 7;</code>
   */
  @java.lang.Override
  public com.google.protobuf.StringValueOrBuilder getReferencedGroupTypeOrBuilder() {
    return referencedGroupType_ == null ? com.google.protobuf.StringValue.getDefaultInstance() : referencedGroupType_;
  }

  public static final int REFERENCEDGROUPTYPEMANAGED_FIELD_NUMBER = 8;
  private boolean referencedGroupTypeManaged_ = false;
  /**
   * <pre>
   * Whether `referencedGroupType` refers to any existing `EntitySchema.name` that is
   * maintained by Evita.
   * </pre>
   *
   * <code>bool referencedGroupTypeManaged = 8;</code>
   * @return The referencedGroupTypeManaged.
   */
  @java.lang.Override
  public boolean getReferencedGroupTypeManaged() {
    return referencedGroupTypeManaged_;
  }

  public static final int FILTERABLE_FIELD_NUMBER = 9;
  private boolean filterable_ = false;
  /**
   * <pre>
   * Whether the index for this reference should be created and maintained allowing to filter by
   * `referenceHaving` filtering constraints. Index is also required when reference is
   * `faceted`.
   *
   * Do not mark reference as faceted unless you know that you'll need to filter/sort entities by this reference.
   * Each indexed reference occupies (memory/disk) space in the form of index. When reference is not indexed,
   * the entity cannot be looked up by reference attributes or relation existence itself, but the data is loaded
   * alongside other references if requested.
   * deprecated in favor of `indexedInScopes`
   * </pre>
   *
   * <code>bool filterable = 9 [deprecated = true];</code>
   * @deprecated io.evitadb.externalApi.grpc.generated.GrpcCreateReferenceSchemaMutation.filterable is deprecated.
   *     See GrpcReferenceSchemaMutations.proto;l=50
   * @return The filterable.
   */
  @java.lang.Override
  @java.lang.Deprecated public boolean getFilterable() {
    return filterable_;
  }

  public static final int FACETED_FIELD_NUMBER = 10;
  private boolean faceted_ = false;
  /**
   * <pre>
   * Whether the statistics data for this reference should be maintained and this allowing to get
   * `facetSummary` for this reference or use `facetInSet`
   * filtering query.
   *
   * Do not mark reference as faceted unless you want it among `FacetStatistics`. Each faceted reference
   * occupies (memory/disk) space in the form of index.
   * Reference that was marked as faceted is called Facet.
   * deprecated in favor of `facetedInScopes`
   * </pre>
   *
   * <code>bool faceted = 10 [deprecated = true];</code>
   * @deprecated io.evitadb.externalApi.grpc.generated.GrpcCreateReferenceSchemaMutation.faceted is deprecated.
   *     See GrpcReferenceSchemaMutations.proto;l=59
   * @return The faceted.
   */
  @java.lang.Override
  @java.lang.Deprecated public boolean getFaceted() {
    return faceted_;
  }

  public static final int INDEXEDINSCOPES_FIELD_NUMBER = 11;
  @SuppressWarnings("serial")
  private java.util.List<java.lang.Integer> indexedInScopes_;
  private static final com.google.protobuf.Internal.ListAdapter.Converter<
      java.lang.Integer, io.evitadb.externalApi.grpc.generated.GrpcEntityScope> indexedInScopes_converter_ =
          new com.google.protobuf.Internal.ListAdapter.Converter<
              java.lang.Integer, io.evitadb.externalApi.grpc.generated.GrpcEntityScope>() {
            public io.evitadb.externalApi.grpc.generated.GrpcEntityScope convert(java.lang.Integer from) {
              io.evitadb.externalApi.grpc.generated.GrpcEntityScope result = io.evitadb.externalApi.grpc.generated.GrpcEntityScope.forNumber(from);
              return result == null ? io.evitadb.externalApi.grpc.generated.GrpcEntityScope.UNRECOGNIZED : result;
            }
          };
  /**
   * <pre>
   * Whether the index for this reference should be created and maintained allowing to filter by
   * `referenceHaving` filtering constraints. Index is also required when reference is
   * `faceted`.
   *
   * Do not mark reference as faceted unless you know that you'll need to filter/sort entities by this reference.
   * Each indexed reference occupies (memory/disk) space in the form of index. When reference is not indexed,
   * the entity cannot be looked up by reference attributes or relation existence itself, but the data is loaded
   * alongside other references if requested.
   * deprecated in favor of `scopedIndexTypes`
   * </pre>
   *
   * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope indexedInScopes = 11 [deprecated = true];</code>
   * @deprecated io.evitadb.externalApi.grpc.generated.GrpcCreateReferenceSchemaMutation.indexedInScopes is deprecated.
   *     See GrpcReferenceSchemaMutations.proto;l=69
   * @return A list containing the indexedInScopes.
   */
  @java.lang.Override
  @java.lang.Deprecated public java.util.List<io.evitadb.externalApi.grpc.generated.GrpcEntityScope> getIndexedInScopesList() {
    return new com.google.protobuf.Internal.ListAdapter<
        java.lang.Integer, io.evitadb.externalApi.grpc.generated.GrpcEntityScope>(indexedInScopes_, indexedInScopes_converter_);
  }
  /**
   * <pre>
   * Whether the index for this reference should be created and maintained allowing to filter by
   * `referenceHaving` filtering constraints. Index is also required when reference is
   * `faceted`.
   *
   * Do not mark reference as faceted unless you know that you'll need to filter/sort entities by this reference.
   * Each indexed reference occupies (memory/disk) space in the form of index. When reference is not indexed,
   * the entity cannot be looked up by reference attributes or relation existence itself, but the data is loaded
   * alongside other references if requested.
   * deprecated in favor of `scopedIndexTypes`
   * </pre>
   *
   * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope indexedInScopes = 11 [deprecated = true];</code>
   * @deprecated io.evitadb.externalApi.grpc.generated.GrpcCreateReferenceSchemaMutation.indexedInScopes is deprecated.
   *     See GrpcReferenceSchemaMutations.proto;l=69
   * @return The count of indexedInScopes.
   */
  @java.lang.Override
  @java.lang.Deprecated public int getIndexedInScopesCount() {
    return indexedInScopes_.size();
  }
  /**
   * <pre>
   * Whether the index for this reference should be created and maintained allowing to filter by
   * `referenceHaving` filtering constraints. Index is also required when reference is
   * `faceted`.
   *
   * Do not mark reference as faceted unless you know that you'll need to filter/sort entities by this reference.
   * Each indexed reference occupies (memory/disk) space in the form of index. When reference is not indexed,
   * the entity cannot be looked up by reference attributes or relation existence itself, but the data is loaded
   * alongside other references if requested.
   * deprecated in favor of `scopedIndexTypes`
   * </pre>
   *
   * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope indexedInScopes = 11 [deprecated = true];</code>
   * @deprecated io.evitadb.externalApi.grpc.generated.GrpcCreateReferenceSchemaMutation.indexedInScopes is deprecated.
   *     See GrpcReferenceSchemaMutations.proto;l=69
   * @param index The index of the element to return.
   * @return The indexedInScopes at the given index.
   */
  @java.lang.Override
  @java.lang.Deprecated public io.evitadb.externalApi.grpc.generated.GrpcEntityScope getIndexedInScopes(int index) {
    return indexedInScopes_converter_.convert(indexedInScopes_.get(index));
  }
  /**
   * <pre>
   * Whether the index for this reference should be created and maintained allowing to filter by
   * `referenceHaving` filtering constraints. Index is also required when reference is
   * `faceted`.
   *
   * Do not mark reference as faceted unless you know that you'll need to filter/sort entities by this reference.
   * Each indexed reference occupies (memory/disk) space in the form of index. When reference is not indexed,
   * the entity cannot be looked up by reference attributes or relation existence itself, but the data is loaded
   * alongside other references if requested.
   * deprecated in favor of `scopedIndexTypes`
   * </pre>
   *
   * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope indexedInScopes = 11 [deprecated = true];</code>
   * @deprecated io.evitadb.externalApi.grpc.generated.GrpcCreateReferenceSchemaMutation.indexedInScopes is deprecated.
   *     See GrpcReferenceSchemaMutations.proto;l=69
   * @return A list containing the enum numeric values on the wire for indexedInScopes.
   */
  @java.lang.Override
  @java.lang.Deprecated public java.util.List<java.lang.Integer>
  getIndexedInScopesValueList() {
    return indexedInScopes_;
  }
  /**
   * <pre>
   * Whether the index for this reference should be created and maintained allowing to filter by
   * `referenceHaving` filtering constraints. Index is also required when reference is
   * `faceted`.
   *
   * Do not mark reference as faceted unless you know that you'll need to filter/sort entities by this reference.
   * Each indexed reference occupies (memory/disk) space in the form of index. When reference is not indexed,
   * the entity cannot be looked up by reference attributes or relation existence itself, but the data is loaded
   * alongside other references if requested.
   * deprecated in favor of `scopedIndexTypes`
   * </pre>
   *
   * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope indexedInScopes = 11 [deprecated = true];</code>
   * @deprecated io.evitadb.externalApi.grpc.generated.GrpcCreateReferenceSchemaMutation.indexedInScopes is deprecated.
   *     See GrpcReferenceSchemaMutations.proto;l=69
   * @param index The index of the value to return.
   * @return The enum numeric value on the wire of indexedInScopes at the given index.
   */
  @java.lang.Override
  @java.lang.Deprecated public int getIndexedInScopesValue(int index) {
    return indexedInScopes_.get(index);
  }
  private int indexedInScopesMemoizedSerializedSize;

  public static final int FACETEDINSCOPES_FIELD_NUMBER = 12;
  @SuppressWarnings("serial")
  private java.util.List<java.lang.Integer> facetedInScopes_;
  private static final com.google.protobuf.Internal.ListAdapter.Converter<
      java.lang.Integer, io.evitadb.externalApi.grpc.generated.GrpcEntityScope> facetedInScopes_converter_ =
          new com.google.protobuf.Internal.ListAdapter.Converter<
              java.lang.Integer, io.evitadb.externalApi.grpc.generated.GrpcEntityScope>() {
            public io.evitadb.externalApi.grpc.generated.GrpcEntityScope convert(java.lang.Integer from) {
              io.evitadb.externalApi.grpc.generated.GrpcEntityScope result = io.evitadb.externalApi.grpc.generated.GrpcEntityScope.forNumber(from);
              return result == null ? io.evitadb.externalApi.grpc.generated.GrpcEntityScope.UNRECOGNIZED : result;
            }
          };
  /**
   * <pre>
   * Whether the statistics data for this reference should be maintained and this allowing to get
   * `facetSummary` for this reference or use `facetInSet`
   * filtering query.
   *
   * Do not mark reference as faceted unless you want it among `FacetStatistics`. Each faceted reference
   * occupies (memory/disk) space in the form of index.
   * Reference that was marked as faceted is called Facet.
   * </pre>
   *
   * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope facetedInScopes = 12;</code>
   * @return A list containing the facetedInScopes.
   */
  @java.lang.Override
  public java.util.List<io.evitadb.externalApi.grpc.generated.GrpcEntityScope> getFacetedInScopesList() {
    return new com.google.protobuf.Internal.ListAdapter<
        java.lang.Integer, io.evitadb.externalApi.grpc.generated.GrpcEntityScope>(facetedInScopes_, facetedInScopes_converter_);
  }
  /**
   * <pre>
   * Whether the statistics data for this reference should be maintained and this allowing to get
   * `facetSummary` for this reference or use `facetInSet`
   * filtering query.
   *
   * Do not mark reference as faceted unless you want it among `FacetStatistics`. Each faceted reference
   * occupies (memory/disk) space in the form of index.
   * Reference that was marked as faceted is called Facet.
   * </pre>
   *
   * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope facetedInScopes = 12;</code>
   * @return The count of facetedInScopes.
   */
  @java.lang.Override
  public int getFacetedInScopesCount() {
    return facetedInScopes_.size();
  }
  /**
   * <pre>
   * Whether the statistics data for this reference should be maintained and this allowing to get
   * `facetSummary` for this reference or use `facetInSet`
   * filtering query.
   *
   * Do not mark reference as faceted unless you want it among `FacetStatistics`. Each faceted reference
   * occupies (memory/disk) space in the form of index.
   * Reference that was marked as faceted is called Facet.
   * </pre>
   *
   * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope facetedInScopes = 12;</code>
   * @param index The index of the element to return.
   * @return The facetedInScopes at the given index.
   */
  @java.lang.Override
  public io.evitadb.externalApi.grpc.generated.GrpcEntityScope getFacetedInScopes(int index) {
    return facetedInScopes_converter_.convert(facetedInScopes_.get(index));
  }
  /**
   * <pre>
   * Whether the statistics data for this reference should be maintained and this allowing to get
   * `facetSummary` for this reference or use `facetInSet`
   * filtering query.
   *
   * Do not mark reference as faceted unless you want it among `FacetStatistics`. Each faceted reference
   * occupies (memory/disk) space in the form of index.
   * Reference that was marked as faceted is called Facet.
   * </pre>
   *
   * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope facetedInScopes = 12;</code>
   * @return A list containing the enum numeric values on the wire for facetedInScopes.
   */
  @java.lang.Override
  public java.util.List<java.lang.Integer>
  getFacetedInScopesValueList() {
    return facetedInScopes_;
  }
  /**
   * <pre>
   * Whether the statistics data for this reference should be maintained and this allowing to get
   * `facetSummary` for this reference or use `facetInSet`
   * filtering query.
   *
   * Do not mark reference as faceted unless you want it among `FacetStatistics`. Each faceted reference
   * occupies (memory/disk) space in the form of index.
   * Reference that was marked as faceted is called Facet.
   * </pre>
   *
   * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope facetedInScopes = 12;</code>
   * @param index The index of the value to return.
   * @return The enum numeric value on the wire of facetedInScopes at the given index.
   */
  @java.lang.Override
  public int getFacetedInScopesValue(int index) {
    return facetedInScopes_.get(index);
  }
  private int facetedInScopesMemoizedSerializedSize;

  public static final int SCOPEDINDEXTYPES_FIELD_NUMBER = 13;
  @SuppressWarnings("serial")
  private java.util.List<io.evitadb.externalApi.grpc.generated.GrpcScopedReferenceIndexType> scopedIndexTypes_;
  /**
   * <pre>
   * Scoped reference index types that define both the scope and the type of index for the reference.
   * This replaces the deprecated `indexedInScopes` field with more granular control over indexing.
   * </pre>
   *
   * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcScopedReferenceIndexType scopedIndexTypes = 13;</code>
   */
  @java.lang.Override
  public java.util.List<io.evitadb.externalApi.grpc.generated.GrpcScopedReferenceIndexType> getScopedIndexTypesList() {
    return scopedIndexTypes_;
  }
  /**
   * <pre>
   * Scoped reference index types that define both the scope and the type of index for the reference.
   * This replaces the deprecated `indexedInScopes` field with more granular control over indexing.
   * </pre>
   *
   * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcScopedReferenceIndexType scopedIndexTypes = 13;</code>
   */
  @java.lang.Override
  public java.util.List<? extends io.evitadb.externalApi.grpc.generated.GrpcScopedReferenceIndexTypeOrBuilder>
      getScopedIndexTypesOrBuilderList() {
    return scopedIndexTypes_;
  }
  /**
   * <pre>
   * Scoped reference index types that define both the scope and the type of index for the reference.
   * This replaces the deprecated `indexedInScopes` field with more granular control over indexing.
   * </pre>
   *
   * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcScopedReferenceIndexType scopedIndexTypes = 13;</code>
   */
  @java.lang.Override
  public int getScopedIndexTypesCount() {
    return scopedIndexTypes_.size();
  }
  /**
   * <pre>
   * Scoped reference index types that define both the scope and the type of index for the reference.
   * This replaces the deprecated `indexedInScopes` field with more granular control over indexing.
   * </pre>
   *
   * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcScopedReferenceIndexType scopedIndexTypes = 13;</code>
   */
  @java.lang.Override
  public io.evitadb.externalApi.grpc.generated.GrpcScopedReferenceIndexType getScopedIndexTypes(int index) {
    return scopedIndexTypes_.get(index);
  }
  /**
   * <pre>
   * Scoped reference index types that define both the scope and the type of index for the reference.
   * This replaces the deprecated `indexedInScopes` field with more granular control over indexing.
   * </pre>
   *
   * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcScopedReferenceIndexType scopedIndexTypes = 13;</code>
   */
  @java.lang.Override
  public io.evitadb.externalApi.grpc.generated.GrpcScopedReferenceIndexTypeOrBuilder getScopedIndexTypesOrBuilder(
      int index) {
    return scopedIndexTypes_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(2, getDescription());
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      output.writeMessage(3, getDeprecationNotice());
    }
    if (cardinality_ != io.evitadb.externalApi.grpc.generated.GrpcCardinality.NOT_SPECIFIED.getNumber()) {
      output.writeEnum(4, cardinality_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(referencedEntityType_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 5, referencedEntityType_);
    }
    if (referencedEntityTypeManaged_ != false) {
      output.writeBool(6, referencedEntityTypeManaged_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      output.writeMessage(7, getReferencedGroupType());
    }
    if (referencedGroupTypeManaged_ != false) {
      output.writeBool(8, referencedGroupTypeManaged_);
    }
    if (filterable_ != false) {
      output.writeBool(9, filterable_);
    }
    if (faceted_ != false) {
      output.writeBool(10, faceted_);
    }
    if (getIndexedInScopesList().size() > 0) {
      output.writeUInt32NoTag(90);
      output.writeUInt32NoTag(indexedInScopesMemoizedSerializedSize);
    }
    for (int i = 0; i < indexedInScopes_.size(); i++) {
      output.writeEnumNoTag(indexedInScopes_.get(i));
    }
    if (getFacetedInScopesList().size() > 0) {
      output.writeUInt32NoTag(98);
      output.writeUInt32NoTag(facetedInScopesMemoizedSerializedSize);
    }
    for (int i = 0; i < facetedInScopes_.size(); i++) {
      output.writeEnumNoTag(facetedInScopes_.get(i));
    }
    for (int i = 0; i < scopedIndexTypes_.size(); i++) {
      output.writeMessage(13, scopedIndexTypes_.get(i));
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
    }
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getDescription());
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getDeprecationNotice());
    }
    if (cardinality_ != io.evitadb.externalApi.grpc.generated.GrpcCardinality.NOT_SPECIFIED.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(4, cardinality_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(referencedEntityType_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, referencedEntityType_);
    }
    if (referencedEntityTypeManaged_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(6, referencedEntityTypeManaged_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, getReferencedGroupType());
    }
    if (referencedGroupTypeManaged_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(8, referencedGroupTypeManaged_);
    }
    if (filterable_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(9, filterable_);
    }
    if (faceted_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(10, faceted_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < indexedInScopes_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeEnumSizeNoTag(indexedInScopes_.get(i));
      }
      size += dataSize;
      if (!getIndexedInScopesList().isEmpty()) {  size += 1;
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32SizeNoTag(dataSize);
      }indexedInScopesMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      for (int i = 0; i < facetedInScopes_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeEnumSizeNoTag(facetedInScopes_.get(i));
      }
      size += dataSize;
      if (!getFacetedInScopesList().isEmpty()) {  size += 1;
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32SizeNoTag(dataSize);
      }facetedInScopesMemoizedSerializedSize = dataSize;
    }
    for (int i = 0; i < scopedIndexTypes_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(13, scopedIndexTypes_.get(i));
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.evitadb.externalApi.grpc.generated.GrpcCreateReferenceSchemaMutation)) {
      return super.equals(obj);
    }
    io.evitadb.externalApi.grpc.generated.GrpcCreateReferenceSchemaMutation other = (io.evitadb.externalApi.grpc.generated.GrpcCreateReferenceSchemaMutation) obj;

    if (!getName()
        .equals(other.getName())) return false;
    if (hasDescription() != other.hasDescription()) return false;
    if (hasDescription()) {
      if (!getDescription()
          .equals(other.getDescription())) return false;
    }
    if (hasDeprecationNotice() != other.hasDeprecationNotice()) return false;
    if (hasDeprecationNotice()) {
      if (!getDeprecationNotice()
          .equals(other.getDeprecationNotice())) return false;
    }
    if (cardinality_ != other.cardinality_) return false;
    if (!getReferencedEntityType()
        .equals(other.getReferencedEntityType())) return false;
    if (getReferencedEntityTypeManaged()
        != other.getReferencedEntityTypeManaged()) return false;
    if (hasReferencedGroupType() != other.hasReferencedGroupType()) return false;
    if (hasReferencedGroupType()) {
      if (!getReferencedGroupType()
          .equals(other.getReferencedGroupType())) return false;
    }
    if (getReferencedGroupTypeManaged()
        != other.getReferencedGroupTypeManaged()) return false;
    if (getFilterable()
        != other.getFilterable()) return false;
    if (getFaceted()
        != other.getFaceted()) return false;
    if (!indexedInScopes_.equals(other.indexedInScopes_)) return false;
    if (!facetedInScopes_.equals(other.facetedInScopes_)) return false;
    if (!getScopedIndexTypesList()
        .equals(other.getScopedIndexTypesList())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + NAME_FIELD_NUMBER;
    hash = (53 * hash) + getName().hashCode();
    if (hasDescription()) {
      hash = (37 * hash) + DESCRIPTION_FIELD_NUMBER;
      hash = (53 * hash) + getDescription().hashCode();
    }
    if (hasDeprecationNotice()) {
      hash = (37 * hash) + DEPRECATIONNOTICE_FIELD_NUMBER;
      hash = (53 * hash) + getDeprecationNotice().hashCode();
    }
    hash = (37 * hash) + CARDINALITY_FIELD_NUMBER;
    hash = (53 * hash) + cardinality_;
    hash = (37 * hash) + REFERENCEDENTITYTYPE_FIELD_NUMBER;
    hash = (53 * hash) + getReferencedEntityType().hashCode();
    hash = (37 * hash) + REFERENCEDENTITYTYPEMANAGED_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getReferencedEntityTypeManaged());
    if (hasReferencedGroupType()) {
      hash = (37 * hash) + REFERENCEDGROUPTYPE_FIELD_NUMBER;
      hash = (53 * hash) + getReferencedGroupType().hashCode();
    }
    hash = (37 * hash) + REFERENCEDGROUPTYPEMANAGED_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getReferencedGroupTypeManaged());
    hash = (37 * hash) + FILTERABLE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getFilterable());
    hash = (37 * hash) + FACETED_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getFaceted());
    if (getIndexedInScopesCount() > 0) {
      hash = (37 * hash) + INDEXEDINSCOPES_FIELD_NUMBER;
      hash = (53 * hash) + indexedInScopes_.hashCode();
    }
    if (getFacetedInScopesCount() > 0) {
      hash = (37 * hash) + FACETEDINSCOPES_FIELD_NUMBER;
      hash = (53 * hash) + facetedInScopes_.hashCode();
    }
    if (getScopedIndexTypesCount() > 0) {
      hash = (37 * hash) + SCOPEDINDEXTYPES_FIELD_NUMBER;
      hash = (53 * hash) + getScopedIndexTypesList().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.evitadb.externalApi.grpc.generated.GrpcCreateReferenceSchemaMutation parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.evitadb.externalApi.grpc.generated.GrpcCreateReferenceSchemaMutation parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.evitadb.externalApi.grpc.generated.GrpcCreateReferenceSchemaMutation parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.evitadb.externalApi.grpc.generated.GrpcCreateReferenceSchemaMutation parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.evitadb.externalApi.grpc.generated.GrpcCreateReferenceSchemaMutation parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.evitadb.externalApi.grpc.generated.GrpcCreateReferenceSchemaMutation parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.evitadb.externalApi.grpc.generated.GrpcCreateReferenceSchemaMutation parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.evitadb.externalApi.grpc.generated.GrpcCreateReferenceSchemaMutation parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static io.evitadb.externalApi.grpc.generated.GrpcCreateReferenceSchemaMutation parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static io.evitadb.externalApi.grpc.generated.GrpcCreateReferenceSchemaMutation parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.evitadb.externalApi.grpc.generated.GrpcCreateReferenceSchemaMutation parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.evitadb.externalApi.grpc.generated.GrpcCreateReferenceSchemaMutation parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.evitadb.externalApi.grpc.generated.GrpcCreateReferenceSchemaMutation prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Mutation is responsible for setting up a new `ReferenceSchema` in the `EntitySchema`.
   * Mutation can be used for altering also the existing `ReferenceSchema` alone.
   * </pre>
   *
   * Protobuf type {@code io.evitadb.externalApi.grpc.generated.GrpcCreateReferenceSchemaMutation}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:io.evitadb.externalApi.grpc.generated.GrpcCreateReferenceSchemaMutation)
      io.evitadb.externalApi.grpc.generated.GrpcCreateReferenceSchemaMutationOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.evitadb.externalApi.grpc.generated.GrpcReferenceSchemaMutations.internal_static_io_evitadb_externalApi_grpc_generated_GrpcCreateReferenceSchemaMutation_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.evitadb.externalApi.grpc.generated.GrpcReferenceSchemaMutations.internal_static_io_evitadb_externalApi_grpc_generated_GrpcCreateReferenceSchemaMutation_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.evitadb.externalApi.grpc.generated.GrpcCreateReferenceSchemaMutation.class, io.evitadb.externalApi.grpc.generated.GrpcCreateReferenceSchemaMutation.Builder.class);
    }

    // Construct using io.evitadb.externalApi.grpc.generated.GrpcCreateReferenceSchemaMutation.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getDescriptionFieldBuilder();
        getDeprecationNoticeFieldBuilder();
        getReferencedGroupTypeFieldBuilder();
        getScopedIndexTypesFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      name_ = "";
      description_ = null;
      if (descriptionBuilder_ != null) {
        descriptionBuilder_.dispose();
        descriptionBuilder_ = null;
      }
      deprecationNotice_ = null;
      if (deprecationNoticeBuilder_ != null) {
        deprecationNoticeBuilder_.dispose();
        deprecationNoticeBuilder_ = null;
      }
      cardinality_ = 0;
      referencedEntityType_ = "";
      referencedEntityTypeManaged_ = false;
      referencedGroupType_ = null;
      if (referencedGroupTypeBuilder_ != null) {
        referencedGroupTypeBuilder_.dispose();
        referencedGroupTypeBuilder_ = null;
      }
      referencedGroupTypeManaged_ = false;
      filterable_ = false;
      faceted_ = false;
      indexedInScopes_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000400);
      facetedInScopes_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000800);
      if (scopedIndexTypesBuilder_ == null) {
        scopedIndexTypes_ = java.util.Collections.emptyList();
      } else {
        scopedIndexTypes_ = null;
        scopedIndexTypesBuilder_.clear();
      }
      bitField0_ = (bitField0_ & ~0x00001000);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.evitadb.externalApi.grpc.generated.GrpcReferenceSchemaMutations.internal_static_io_evitadb_externalApi_grpc_generated_GrpcCreateReferenceSchemaMutation_descriptor;
    }

    @java.lang.Override
    public io.evitadb.externalApi.grpc.generated.GrpcCreateReferenceSchemaMutation getDefaultInstanceForType() {
      return io.evitadb.externalApi.grpc.generated.GrpcCreateReferenceSchemaMutation.getDefaultInstance();
    }

    @java.lang.Override
    public io.evitadb.externalApi.grpc.generated.GrpcCreateReferenceSchemaMutation build() {
      io.evitadb.externalApi.grpc.generated.GrpcCreateReferenceSchemaMutation result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.evitadb.externalApi.grpc.generated.GrpcCreateReferenceSchemaMutation buildPartial() {
      io.evitadb.externalApi.grpc.generated.GrpcCreateReferenceSchemaMutation result = new io.evitadb.externalApi.grpc.generated.GrpcCreateReferenceSchemaMutation(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(io.evitadb.externalApi.grpc.generated.GrpcCreateReferenceSchemaMutation result) {
      if (((bitField0_ & 0x00000400) != 0)) {
        indexedInScopes_ = java.util.Collections.unmodifiableList(indexedInScopes_);
        bitField0_ = (bitField0_ & ~0x00000400);
      }
      result.indexedInScopes_ = indexedInScopes_;
      if (((bitField0_ & 0x00000800) != 0)) {
        facetedInScopes_ = java.util.Collections.unmodifiableList(facetedInScopes_);
        bitField0_ = (bitField0_ & ~0x00000800);
      }
      result.facetedInScopes_ = facetedInScopes_;
      if (scopedIndexTypesBuilder_ == null) {
        if (((bitField0_ & 0x00001000) != 0)) {
          scopedIndexTypes_ = java.util.Collections.unmodifiableList(scopedIndexTypes_);
          bitField0_ = (bitField0_ & ~0x00001000);
        }
        result.scopedIndexTypes_ = scopedIndexTypes_;
      } else {
        result.scopedIndexTypes_ = scopedIndexTypesBuilder_.build();
      }
    }

    private void buildPartial0(io.evitadb.externalApi.grpc.generated.GrpcCreateReferenceSchemaMutation result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.name_ = name_;
      }
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.description_ = descriptionBuilder_ == null
            ? description_
            : descriptionBuilder_.build();
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.deprecationNotice_ = deprecationNoticeBuilder_ == null
            ? deprecationNotice_
            : deprecationNoticeBuilder_.build();
        to_bitField0_ |= 0x00000002;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.cardinality_ = cardinality_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.referencedEntityType_ = referencedEntityType_;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.referencedEntityTypeManaged_ = referencedEntityTypeManaged_;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.referencedGroupType_ = referencedGroupTypeBuilder_ == null
            ? referencedGroupType_
            : referencedGroupTypeBuilder_.build();
        to_bitField0_ |= 0x00000004;
      }
      if (((from_bitField0_ & 0x00000080) != 0)) {
        result.referencedGroupTypeManaged_ = referencedGroupTypeManaged_;
      }
      if (((from_bitField0_ & 0x00000100) != 0)) {
        result.filterable_ = filterable_;
      }
      if (((from_bitField0_ & 0x00000200) != 0)) {
        result.faceted_ = faceted_;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.evitadb.externalApi.grpc.generated.GrpcCreateReferenceSchemaMutation) {
        return mergeFrom((io.evitadb.externalApi.grpc.generated.GrpcCreateReferenceSchemaMutation)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.evitadb.externalApi.grpc.generated.GrpcCreateReferenceSchemaMutation other) {
      if (other == io.evitadb.externalApi.grpc.generated.GrpcCreateReferenceSchemaMutation.getDefaultInstance()) return this;
      if (!other.getName().isEmpty()) {
        name_ = other.name_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (other.hasDescription()) {
        mergeDescription(other.getDescription());
      }
      if (other.hasDeprecationNotice()) {
        mergeDeprecationNotice(other.getDeprecationNotice());
      }
      if (other.cardinality_ != 0) {
        setCardinalityValue(other.getCardinalityValue());
      }
      if (!other.getReferencedEntityType().isEmpty()) {
        referencedEntityType_ = other.referencedEntityType_;
        bitField0_ |= 0x00000010;
        onChanged();
      }
      if (other.getReferencedEntityTypeManaged() != false) {
        setReferencedEntityTypeManaged(other.getReferencedEntityTypeManaged());
      }
      if (other.hasReferencedGroupType()) {
        mergeReferencedGroupType(other.getReferencedGroupType());
      }
      if (other.getReferencedGroupTypeManaged() != false) {
        setReferencedGroupTypeManaged(other.getReferencedGroupTypeManaged());
      }
      if (other.getFilterable() != false) {
        setFilterable(other.getFilterable());
      }
      if (other.getFaceted() != false) {
        setFaceted(other.getFaceted());
      }
      if (!other.indexedInScopes_.isEmpty()) {
        if (indexedInScopes_.isEmpty()) {
          indexedInScopes_ = other.indexedInScopes_;
          bitField0_ = (bitField0_ & ~0x00000400);
        } else {
          ensureIndexedInScopesIsMutable();
          indexedInScopes_.addAll(other.indexedInScopes_);
        }
        onChanged();
      }
      if (!other.facetedInScopes_.isEmpty()) {
        if (facetedInScopes_.isEmpty()) {
          facetedInScopes_ = other.facetedInScopes_;
          bitField0_ = (bitField0_ & ~0x00000800);
        } else {
          ensureFacetedInScopesIsMutable();
          facetedInScopes_.addAll(other.facetedInScopes_);
        }
        onChanged();
      }
      if (scopedIndexTypesBuilder_ == null) {
        if (!other.scopedIndexTypes_.isEmpty()) {
          if (scopedIndexTypes_.isEmpty()) {
            scopedIndexTypes_ = other.scopedIndexTypes_;
            bitField0_ = (bitField0_ & ~0x00001000);
          } else {
            ensureScopedIndexTypesIsMutable();
            scopedIndexTypes_.addAll(other.scopedIndexTypes_);
          }
          onChanged();
        }
      } else {
        if (!other.scopedIndexTypes_.isEmpty()) {
          if (scopedIndexTypesBuilder_.isEmpty()) {
            scopedIndexTypesBuilder_.dispose();
            scopedIndexTypesBuilder_ = null;
            scopedIndexTypes_ = other.scopedIndexTypes_;
            bitField0_ = (bitField0_ & ~0x00001000);
            scopedIndexTypesBuilder_ =
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getScopedIndexTypesFieldBuilder() : null;
          } else {
            scopedIndexTypesBuilder_.addAllMessages(other.scopedIndexTypes_);
          }
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              name_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              input.readMessage(
                  getDescriptionFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 26: {
              input.readMessage(
                  getDeprecationNoticeFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000004;
              break;
            } // case 26
            case 32: {
              cardinality_ = input.readEnum();
              bitField0_ |= 0x00000008;
              break;
            } // case 32
            case 42: {
              referencedEntityType_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000010;
              break;
            } // case 42
            case 48: {
              referencedEntityTypeManaged_ = input.readBool();
              bitField0_ |= 0x00000020;
              break;
            } // case 48
            case 58: {
              input.readMessage(
                  getReferencedGroupTypeFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000040;
              break;
            } // case 58
            case 64: {
              referencedGroupTypeManaged_ = input.readBool();
              bitField0_ |= 0x00000080;
              break;
            } // case 64
            case 72: {
              filterable_ = input.readBool();
              bitField0_ |= 0x00000100;
              break;
            } // case 72
            case 80: {
              faceted_ = input.readBool();
              bitField0_ |= 0x00000200;
              break;
            } // case 80
            case 88: {
              int tmpRaw = input.readEnum();
              ensureIndexedInScopesIsMutable();
              indexedInScopes_.add(tmpRaw);
              break;
            } // case 88
            case 90: {
              int length = input.readRawVarint32();
              int oldLimit = input.pushLimit(length);
              while(input.getBytesUntilLimit() > 0) {
                int tmpRaw = input.readEnum();
                ensureIndexedInScopesIsMutable();
                indexedInScopes_.add(tmpRaw);
              }
              input.popLimit(oldLimit);
              break;
            } // case 90
            case 96: {
              int tmpRaw = input.readEnum();
              ensureFacetedInScopesIsMutable();
              facetedInScopes_.add(tmpRaw);
              break;
            } // case 96
            case 98: {
              int length = input.readRawVarint32();
              int oldLimit = input.pushLimit(length);
              while(input.getBytesUntilLimit() > 0) {
                int tmpRaw = input.readEnum();
                ensureFacetedInScopesIsMutable();
                facetedInScopes_.add(tmpRaw);
              }
              input.popLimit(oldLimit);
              break;
            } // case 98
            case 106: {
              io.evitadb.externalApi.grpc.generated.GrpcScopedReferenceIndexType m =
                  input.readMessage(
                      io.evitadb.externalApi.grpc.generated.GrpcScopedReferenceIndexType.parser(),
                      extensionRegistry);
              if (scopedIndexTypesBuilder_ == null) {
                ensureScopedIndexTypesIsMutable();
                scopedIndexTypes_.add(m);
              } else {
                scopedIndexTypesBuilder_.addMessage(m);
              }
              break;
            } // case 106
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.lang.Object name_ = "";
    /**
     * <pre>
     * Name of the reference the mutation is targeting.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The name.
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Name of the reference the mutation is targeting.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Name of the reference the mutation is targeting.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @param value The name to set.
     * @return This builder for chaining.
     */
    public Builder setName(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      name_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Name of the reference the mutation is targeting.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearName() {
      name_ = getDefaultInstance().getName();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Name of the reference the mutation is targeting.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @param value The bytes for name to set.
     * @return This builder for chaining.
     */
    public Builder setNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      name_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private com.google.protobuf.StringValue description_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder> descriptionBuilder_;
    /**
     * <pre>
     * Contains description of the model is optional but helps authors of the schema / client API to better
     * explain the original purpose of the model to the consumers.
     * </pre>
     *
     * <code>.google.protobuf.StringValue description = 2;</code>
     * @return Whether the description field is set.
     */
    public boolean hasDescription() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Contains description of the model is optional but helps authors of the schema / client API to better
     * explain the original purpose of the model to the consumers.
     * </pre>
     *
     * <code>.google.protobuf.StringValue description = 2;</code>
     * @return The description.
     */
    public com.google.protobuf.StringValue getDescription() {
      if (descriptionBuilder_ == null) {
        return description_ == null ? com.google.protobuf.StringValue.getDefaultInstance() : description_;
      } else {
        return descriptionBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Contains description of the model is optional but helps authors of the schema / client API to better
     * explain the original purpose of the model to the consumers.
     * </pre>
     *
     * <code>.google.protobuf.StringValue description = 2;</code>
     */
    public Builder setDescription(com.google.protobuf.StringValue value) {
      if (descriptionBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        description_ = value;
      } else {
        descriptionBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Contains description of the model is optional but helps authors of the schema / client API to better
     * explain the original purpose of the model to the consumers.
     * </pre>
     *
     * <code>.google.protobuf.StringValue description = 2;</code>
     */
    public Builder setDescription(
        com.google.protobuf.StringValue.Builder builderForValue) {
      if (descriptionBuilder_ == null) {
        description_ = builderForValue.build();
      } else {
        descriptionBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Contains description of the model is optional but helps authors of the schema / client API to better
     * explain the original purpose of the model to the consumers.
     * </pre>
     *
     * <code>.google.protobuf.StringValue description = 2;</code>
     */
    public Builder mergeDescription(com.google.protobuf.StringValue value) {
      if (descriptionBuilder_ == null) {
        if (((bitField0_ & 0x00000002) != 0) &&
          description_ != null &&
          description_ != com.google.protobuf.StringValue.getDefaultInstance()) {
          getDescriptionBuilder().mergeFrom(value);
        } else {
          description_ = value;
        }
      } else {
        descriptionBuilder_.mergeFrom(value);
      }
      if (description_ != null) {
        bitField0_ |= 0x00000002;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * Contains description of the model is optional but helps authors of the schema / client API to better
     * explain the original purpose of the model to the consumers.
     * </pre>
     *
     * <code>.google.protobuf.StringValue description = 2;</code>
     */
    public Builder clearDescription() {
      bitField0_ = (bitField0_ & ~0x00000002);
      description_ = null;
      if (descriptionBuilder_ != null) {
        descriptionBuilder_.dispose();
        descriptionBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Contains description of the model is optional but helps authors of the schema / client API to better
     * explain the original purpose of the model to the consumers.
     * </pre>
     *
     * <code>.google.protobuf.StringValue description = 2;</code>
     */
    public com.google.protobuf.StringValue.Builder getDescriptionBuilder() {
      bitField0_ |= 0x00000002;
      onChanged();
      return getDescriptionFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Contains description of the model is optional but helps authors of the schema / client API to better
     * explain the original purpose of the model to the consumers.
     * </pre>
     *
     * <code>.google.protobuf.StringValue description = 2;</code>
     */
    public com.google.protobuf.StringValueOrBuilder getDescriptionOrBuilder() {
      if (descriptionBuilder_ != null) {
        return descriptionBuilder_.getMessageOrBuilder();
      } else {
        return description_ == null ?
            com.google.protobuf.StringValue.getDefaultInstance() : description_;
      }
    }
    /**
     * <pre>
     * Contains description of the model is optional but helps authors of the schema / client API to better
     * explain the original purpose of the model to the consumers.
     * </pre>
     *
     * <code>.google.protobuf.StringValue description = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder>
        getDescriptionFieldBuilder() {
      if (descriptionBuilder_ == null) {
        descriptionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder>(
                getDescription(),
                getParentForChildren(),
                isClean());
        description_ = null;
      }
      return descriptionBuilder_;
    }

    private com.google.protobuf.StringValue deprecationNotice_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder> deprecationNoticeBuilder_;
    /**
     * <pre>
     * Deprecation notice contains information about planned removal of this schema from the model / client API.
     * This allows to plan and evolve the schema allowing clients to adapt early to planned breaking changes.
     * </pre>
     *
     * <code>.google.protobuf.StringValue deprecationNotice = 3;</code>
     * @return Whether the deprecationNotice field is set.
     */
    public boolean hasDeprecationNotice() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Deprecation notice contains information about planned removal of this schema from the model / client API.
     * This allows to plan and evolve the schema allowing clients to adapt early to planned breaking changes.
     * </pre>
     *
     * <code>.google.protobuf.StringValue deprecationNotice = 3;</code>
     * @return The deprecationNotice.
     */
    public com.google.protobuf.StringValue getDeprecationNotice() {
      if (deprecationNoticeBuilder_ == null) {
        return deprecationNotice_ == null ? com.google.protobuf.StringValue.getDefaultInstance() : deprecationNotice_;
      } else {
        return deprecationNoticeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Deprecation notice contains information about planned removal of this schema from the model / client API.
     * This allows to plan and evolve the schema allowing clients to adapt early to planned breaking changes.
     * </pre>
     *
     * <code>.google.protobuf.StringValue deprecationNotice = 3;</code>
     */
    public Builder setDeprecationNotice(com.google.protobuf.StringValue value) {
      if (deprecationNoticeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        deprecationNotice_ = value;
      } else {
        deprecationNoticeBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Deprecation notice contains information about planned removal of this schema from the model / client API.
     * This allows to plan and evolve the schema allowing clients to adapt early to planned breaking changes.
     * </pre>
     *
     * <code>.google.protobuf.StringValue deprecationNotice = 3;</code>
     */
    public Builder setDeprecationNotice(
        com.google.protobuf.StringValue.Builder builderForValue) {
      if (deprecationNoticeBuilder_ == null) {
        deprecationNotice_ = builderForValue.build();
      } else {
        deprecationNoticeBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Deprecation notice contains information about planned removal of this schema from the model / client API.
     * This allows to plan and evolve the schema allowing clients to adapt early to planned breaking changes.
     * </pre>
     *
     * <code>.google.protobuf.StringValue deprecationNotice = 3;</code>
     */
    public Builder mergeDeprecationNotice(com.google.protobuf.StringValue value) {
      if (deprecationNoticeBuilder_ == null) {
        if (((bitField0_ & 0x00000004) != 0) &&
          deprecationNotice_ != null &&
          deprecationNotice_ != com.google.protobuf.StringValue.getDefaultInstance()) {
          getDeprecationNoticeBuilder().mergeFrom(value);
        } else {
          deprecationNotice_ = value;
        }
      } else {
        deprecationNoticeBuilder_.mergeFrom(value);
      }
      if (deprecationNotice_ != null) {
        bitField0_ |= 0x00000004;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * Deprecation notice contains information about planned removal of this schema from the model / client API.
     * This allows to plan and evolve the schema allowing clients to adapt early to planned breaking changes.
     * </pre>
     *
     * <code>.google.protobuf.StringValue deprecationNotice = 3;</code>
     */
    public Builder clearDeprecationNotice() {
      bitField0_ = (bitField0_ & ~0x00000004);
      deprecationNotice_ = null;
      if (deprecationNoticeBuilder_ != null) {
        deprecationNoticeBuilder_.dispose();
        deprecationNoticeBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Deprecation notice contains information about planned removal of this schema from the model / client API.
     * This allows to plan and evolve the schema allowing clients to adapt early to planned breaking changes.
     * </pre>
     *
     * <code>.google.protobuf.StringValue deprecationNotice = 3;</code>
     */
    public com.google.protobuf.StringValue.Builder getDeprecationNoticeBuilder() {
      bitField0_ |= 0x00000004;
      onChanged();
      return getDeprecationNoticeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Deprecation notice contains information about planned removal of this schema from the model / client API.
     * This allows to plan and evolve the schema allowing clients to adapt early to planned breaking changes.
     * </pre>
     *
     * <code>.google.protobuf.StringValue deprecationNotice = 3;</code>
     */
    public com.google.protobuf.StringValueOrBuilder getDeprecationNoticeOrBuilder() {
      if (deprecationNoticeBuilder_ != null) {
        return deprecationNoticeBuilder_.getMessageOrBuilder();
      } else {
        return deprecationNotice_ == null ?
            com.google.protobuf.StringValue.getDefaultInstance() : deprecationNotice_;
      }
    }
    /**
     * <pre>
     * Deprecation notice contains information about planned removal of this schema from the model / client API.
     * This allows to plan and evolve the schema allowing clients to adapt early to planned breaking changes.
     * </pre>
     *
     * <code>.google.protobuf.StringValue deprecationNotice = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder>
        getDeprecationNoticeFieldBuilder() {
      if (deprecationNoticeBuilder_ == null) {
        deprecationNoticeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder>(
                getDeprecationNotice(),
                getParentForChildren(),
                isClean());
        deprecationNotice_ = null;
      }
      return deprecationNoticeBuilder_;
    }

    private int cardinality_ = 0;
    /**
     * <pre>
     * Cardinality describes the expected count of relations of this type. In evitaDB we define only one-way
     * relationship from the perspective of the entity. We stick to the ERD modelling
     * [standards](https://www.gleek.io/blog/crows-foot-notation.html) here. Cardinality affect the design
     * of the client API (returning only single reference or collections) and also help us to protect the consistency
     * of the data so that conforms to the creator mental model.
     * </pre>
     *
     * <code>.io.evitadb.externalApi.grpc.generated.GrpcCardinality cardinality = 4;</code>
     * @return The enum numeric value on the wire for cardinality.
     */
    @java.lang.Override public int getCardinalityValue() {
      return cardinality_;
    }
    /**
     * <pre>
     * Cardinality describes the expected count of relations of this type. In evitaDB we define only one-way
     * relationship from the perspective of the entity. We stick to the ERD modelling
     * [standards](https://www.gleek.io/blog/crows-foot-notation.html) here. Cardinality affect the design
     * of the client API (returning only single reference or collections) and also help us to protect the consistency
     * of the data so that conforms to the creator mental model.
     * </pre>
     *
     * <code>.io.evitadb.externalApi.grpc.generated.GrpcCardinality cardinality = 4;</code>
     * @param value The enum numeric value on the wire for cardinality to set.
     * @return This builder for chaining.
     */
    public Builder setCardinalityValue(int value) {
      cardinality_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Cardinality describes the expected count of relations of this type. In evitaDB we define only one-way
     * relationship from the perspective of the entity. We stick to the ERD modelling
     * [standards](https://www.gleek.io/blog/crows-foot-notation.html) here. Cardinality affect the design
     * of the client API (returning only single reference or collections) and also help us to protect the consistency
     * of the data so that conforms to the creator mental model.
     * </pre>
     *
     * <code>.io.evitadb.externalApi.grpc.generated.GrpcCardinality cardinality = 4;</code>
     * @return The cardinality.
     */
    @java.lang.Override
    public io.evitadb.externalApi.grpc.generated.GrpcCardinality getCardinality() {
      io.evitadb.externalApi.grpc.generated.GrpcCardinality result = io.evitadb.externalApi.grpc.generated.GrpcCardinality.forNumber(cardinality_);
      return result == null ? io.evitadb.externalApi.grpc.generated.GrpcCardinality.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Cardinality describes the expected count of relations of this type. In evitaDB we define only one-way
     * relationship from the perspective of the entity. We stick to the ERD modelling
     * [standards](https://www.gleek.io/blog/crows-foot-notation.html) here. Cardinality affect the design
     * of the client API (returning only single reference or collections) and also help us to protect the consistency
     * of the data so that conforms to the creator mental model.
     * </pre>
     *
     * <code>.io.evitadb.externalApi.grpc.generated.GrpcCardinality cardinality = 4;</code>
     * @param value The cardinality to set.
     * @return This builder for chaining.
     */
    public Builder setCardinality(io.evitadb.externalApi.grpc.generated.GrpcCardinality value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000008;
      cardinality_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Cardinality describes the expected count of relations of this type. In evitaDB we define only one-way
     * relationship from the perspective of the entity. We stick to the ERD modelling
     * [standards](https://www.gleek.io/blog/crows-foot-notation.html) here. Cardinality affect the design
     * of the client API (returning only single reference or collections) and also help us to protect the consistency
     * of the data so that conforms to the creator mental model.
     * </pre>
     *
     * <code>.io.evitadb.externalApi.grpc.generated.GrpcCardinality cardinality = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearCardinality() {
      bitField0_ = (bitField0_ & ~0x00000008);
      cardinality_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object referencedEntityType_ = "";
    /**
     * <pre>
     * Reference to `EntitySchema.name` of the referenced entity. Might be also any `String`
     * that identifies type some external resource not maintained by Evita.
     * </pre>
     *
     * <code>string referencedEntityType = 5;</code>
     * @return The referencedEntityType.
     */
    public java.lang.String getReferencedEntityType() {
      java.lang.Object ref = referencedEntityType_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        referencedEntityType_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Reference to `EntitySchema.name` of the referenced entity. Might be also any `String`
     * that identifies type some external resource not maintained by Evita.
     * </pre>
     *
     * <code>string referencedEntityType = 5;</code>
     * @return The bytes for referencedEntityType.
     */
    public com.google.protobuf.ByteString
        getReferencedEntityTypeBytes() {
      java.lang.Object ref = referencedEntityType_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        referencedEntityType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Reference to `EntitySchema.name` of the referenced entity. Might be also any `String`
     * that identifies type some external resource not maintained by Evita.
     * </pre>
     *
     * <code>string referencedEntityType = 5;</code>
     * @param value The referencedEntityType to set.
     * @return This builder for chaining.
     */
    public Builder setReferencedEntityType(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      referencedEntityType_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Reference to `EntitySchema.name` of the referenced entity. Might be also any `String`
     * that identifies type some external resource not maintained by Evita.
     * </pre>
     *
     * <code>string referencedEntityType = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearReferencedEntityType() {
      referencedEntityType_ = getDefaultInstance().getReferencedEntityType();
      bitField0_ = (bitField0_ & ~0x00000010);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Reference to `EntitySchema.name` of the referenced entity. Might be also any `String`
     * that identifies type some external resource not maintained by Evita.
     * </pre>
     *
     * <code>string referencedEntityType = 5;</code>
     * @param value The bytes for referencedEntityType to set.
     * @return This builder for chaining.
     */
    public Builder setReferencedEntityTypeBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      referencedEntityType_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }

    private boolean referencedEntityTypeManaged_ ;
    /**
     * <pre>
     * Whether `referencedEntityType` refers to any existing `EntitySchema.name` that is
     * maintained by Evita.
     * </pre>
     *
     * <code>bool referencedEntityTypeManaged = 6;</code>
     * @return The referencedEntityTypeManaged.
     */
    @java.lang.Override
    public boolean getReferencedEntityTypeManaged() {
      return referencedEntityTypeManaged_;
    }
    /**
     * <pre>
     * Whether `referencedEntityType` refers to any existing `EntitySchema.name` that is
     * maintained by Evita.
     * </pre>
     *
     * <code>bool referencedEntityTypeManaged = 6;</code>
     * @param value The referencedEntityTypeManaged to set.
     * @return This builder for chaining.
     */
    public Builder setReferencedEntityTypeManaged(boolean value) {

      referencedEntityTypeManaged_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Whether `referencedEntityType` refers to any existing `EntitySchema.name` that is
     * maintained by Evita.
     * </pre>
     *
     * <code>bool referencedEntityTypeManaged = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearReferencedEntityTypeManaged() {
      bitField0_ = (bitField0_ & ~0x00000020);
      referencedEntityTypeManaged_ = false;
      onChanged();
      return this;
    }

    private com.google.protobuf.StringValue referencedGroupType_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder> referencedGroupTypeBuilder_;
    /**
     * <pre>
     * Reference to `EntitySchema.name` of the referenced group entity. Might be also any `String`
     * that identifies type some external resource not maintained by Evita.
     * </pre>
     *
     * <code>.google.protobuf.StringValue referencedGroupType = 7;</code>
     * @return Whether the referencedGroupType field is set.
     */
    public boolean hasReferencedGroupType() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <pre>
     * Reference to `EntitySchema.name` of the referenced group entity. Might be also any `String`
     * that identifies type some external resource not maintained by Evita.
     * </pre>
     *
     * <code>.google.protobuf.StringValue referencedGroupType = 7;</code>
     * @return The referencedGroupType.
     */
    public com.google.protobuf.StringValue getReferencedGroupType() {
      if (referencedGroupTypeBuilder_ == null) {
        return referencedGroupType_ == null ? com.google.protobuf.StringValue.getDefaultInstance() : referencedGroupType_;
      } else {
        return referencedGroupTypeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Reference to `EntitySchema.name` of the referenced group entity. Might be also any `String`
     * that identifies type some external resource not maintained by Evita.
     * </pre>
     *
     * <code>.google.protobuf.StringValue referencedGroupType = 7;</code>
     */
    public Builder setReferencedGroupType(com.google.protobuf.StringValue value) {
      if (referencedGroupTypeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        referencedGroupType_ = value;
      } else {
        referencedGroupTypeBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Reference to `EntitySchema.name` of the referenced group entity. Might be also any `String`
     * that identifies type some external resource not maintained by Evita.
     * </pre>
     *
     * <code>.google.protobuf.StringValue referencedGroupType = 7;</code>
     */
    public Builder setReferencedGroupType(
        com.google.protobuf.StringValue.Builder builderForValue) {
      if (referencedGroupTypeBuilder_ == null) {
        referencedGroupType_ = builderForValue.build();
      } else {
        referencedGroupTypeBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Reference to `EntitySchema.name` of the referenced group entity. Might be also any `String`
     * that identifies type some external resource not maintained by Evita.
     * </pre>
     *
     * <code>.google.protobuf.StringValue referencedGroupType = 7;</code>
     */
    public Builder mergeReferencedGroupType(com.google.protobuf.StringValue value) {
      if (referencedGroupTypeBuilder_ == null) {
        if (((bitField0_ & 0x00000040) != 0) &&
          referencedGroupType_ != null &&
          referencedGroupType_ != com.google.protobuf.StringValue.getDefaultInstance()) {
          getReferencedGroupTypeBuilder().mergeFrom(value);
        } else {
          referencedGroupType_ = value;
        }
      } else {
        referencedGroupTypeBuilder_.mergeFrom(value);
      }
      if (referencedGroupType_ != null) {
        bitField0_ |= 0x00000040;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * Reference to `EntitySchema.name` of the referenced group entity. Might be also any `String`
     * that identifies type some external resource not maintained by Evita.
     * </pre>
     *
     * <code>.google.protobuf.StringValue referencedGroupType = 7;</code>
     */
    public Builder clearReferencedGroupType() {
      bitField0_ = (bitField0_ & ~0x00000040);
      referencedGroupType_ = null;
      if (referencedGroupTypeBuilder_ != null) {
        referencedGroupTypeBuilder_.dispose();
        referencedGroupTypeBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Reference to `EntitySchema.name` of the referenced group entity. Might be also any `String`
     * that identifies type some external resource not maintained by Evita.
     * </pre>
     *
     * <code>.google.protobuf.StringValue referencedGroupType = 7;</code>
     */
    public com.google.protobuf.StringValue.Builder getReferencedGroupTypeBuilder() {
      bitField0_ |= 0x00000040;
      onChanged();
      return getReferencedGroupTypeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Reference to `EntitySchema.name` of the referenced group entity. Might be also any `String`
     * that identifies type some external resource not maintained by Evita.
     * </pre>
     *
     * <code>.google.protobuf.StringValue referencedGroupType = 7;</code>
     */
    public com.google.protobuf.StringValueOrBuilder getReferencedGroupTypeOrBuilder() {
      if (referencedGroupTypeBuilder_ != null) {
        return referencedGroupTypeBuilder_.getMessageOrBuilder();
      } else {
        return referencedGroupType_ == null ?
            com.google.protobuf.StringValue.getDefaultInstance() : referencedGroupType_;
      }
    }
    /**
     * <pre>
     * Reference to `EntitySchema.name` of the referenced group entity. Might be also any `String`
     * that identifies type some external resource not maintained by Evita.
     * </pre>
     *
     * <code>.google.protobuf.StringValue referencedGroupType = 7;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder>
        getReferencedGroupTypeFieldBuilder() {
      if (referencedGroupTypeBuilder_ == null) {
        referencedGroupTypeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder>(
                getReferencedGroupType(),
                getParentForChildren(),
                isClean());
        referencedGroupType_ = null;
      }
      return referencedGroupTypeBuilder_;
    }

    private boolean referencedGroupTypeManaged_ ;
    /**
     * <pre>
     * Whether `referencedGroupType` refers to any existing `EntitySchema.name` that is
     * maintained by Evita.
     * </pre>
     *
     * <code>bool referencedGroupTypeManaged = 8;</code>
     * @return The referencedGroupTypeManaged.
     */
    @java.lang.Override
    public boolean getReferencedGroupTypeManaged() {
      return referencedGroupTypeManaged_;
    }
    /**
     * <pre>
     * Whether `referencedGroupType` refers to any existing `EntitySchema.name` that is
     * maintained by Evita.
     * </pre>
     *
     * <code>bool referencedGroupTypeManaged = 8;</code>
     * @param value The referencedGroupTypeManaged to set.
     * @return This builder for chaining.
     */
    public Builder setReferencedGroupTypeManaged(boolean value) {

      referencedGroupTypeManaged_ = value;
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Whether `referencedGroupType` refers to any existing `EntitySchema.name` that is
     * maintained by Evita.
     * </pre>
     *
     * <code>bool referencedGroupTypeManaged = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearReferencedGroupTypeManaged() {
      bitField0_ = (bitField0_ & ~0x00000080);
      referencedGroupTypeManaged_ = false;
      onChanged();
      return this;
    }

    private boolean filterable_ ;
    /**
     * <pre>
     * Whether the index for this reference should be created and maintained allowing to filter by
     * `referenceHaving` filtering constraints. Index is also required when reference is
     * `faceted`.
     *
     * Do not mark reference as faceted unless you know that you'll need to filter/sort entities by this reference.
     * Each indexed reference occupies (memory/disk) space in the form of index. When reference is not indexed,
     * the entity cannot be looked up by reference attributes or relation existence itself, but the data is loaded
     * alongside other references if requested.
     * deprecated in favor of `indexedInScopes`
     * </pre>
     *
     * <code>bool filterable = 9 [deprecated = true];</code>
     * @deprecated io.evitadb.externalApi.grpc.generated.GrpcCreateReferenceSchemaMutation.filterable is deprecated.
     *     See GrpcReferenceSchemaMutations.proto;l=50
     * @return The filterable.
     */
    @java.lang.Override
    @java.lang.Deprecated public boolean getFilterable() {
      return filterable_;
    }
    /**
     * <pre>
     * Whether the index for this reference should be created and maintained allowing to filter by
     * `referenceHaving` filtering constraints. Index is also required when reference is
     * `faceted`.
     *
     * Do not mark reference as faceted unless you know that you'll need to filter/sort entities by this reference.
     * Each indexed reference occupies (memory/disk) space in the form of index. When reference is not indexed,
     * the entity cannot be looked up by reference attributes or relation existence itself, but the data is loaded
     * alongside other references if requested.
     * deprecated in favor of `indexedInScopes`
     * </pre>
     *
     * <code>bool filterable = 9 [deprecated = true];</code>
     * @deprecated io.evitadb.externalApi.grpc.generated.GrpcCreateReferenceSchemaMutation.filterable is deprecated.
     *     See GrpcReferenceSchemaMutations.proto;l=50
     * @param value The filterable to set.
     * @return This builder for chaining.
     */
    @java.lang.Deprecated public Builder setFilterable(boolean value) {

      filterable_ = value;
      bitField0_ |= 0x00000100;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Whether the index for this reference should be created and maintained allowing to filter by
     * `referenceHaving` filtering constraints. Index is also required when reference is
     * `faceted`.
     *
     * Do not mark reference as faceted unless you know that you'll need to filter/sort entities by this reference.
     * Each indexed reference occupies (memory/disk) space in the form of index. When reference is not indexed,
     * the entity cannot be looked up by reference attributes or relation existence itself, but the data is loaded
     * alongside other references if requested.
     * deprecated in favor of `indexedInScopes`
     * </pre>
     *
     * <code>bool filterable = 9 [deprecated = true];</code>
     * @deprecated io.evitadb.externalApi.grpc.generated.GrpcCreateReferenceSchemaMutation.filterable is deprecated.
     *     See GrpcReferenceSchemaMutations.proto;l=50
     * @return This builder for chaining.
     */
    @java.lang.Deprecated public Builder clearFilterable() {
      bitField0_ = (bitField0_ & ~0x00000100);
      filterable_ = false;
      onChanged();
      return this;
    }

    private boolean faceted_ ;
    /**
     * <pre>
     * Whether the statistics data for this reference should be maintained and this allowing to get
     * `facetSummary` for this reference or use `facetInSet`
     * filtering query.
     *
     * Do not mark reference as faceted unless you want it among `FacetStatistics`. Each faceted reference
     * occupies (memory/disk) space in the form of index.
     * Reference that was marked as faceted is called Facet.
     * deprecated in favor of `facetedInScopes`
     * </pre>
     *
     * <code>bool faceted = 10 [deprecated = true];</code>
     * @deprecated io.evitadb.externalApi.grpc.generated.GrpcCreateReferenceSchemaMutation.faceted is deprecated.
     *     See GrpcReferenceSchemaMutations.proto;l=59
     * @return The faceted.
     */
    @java.lang.Override
    @java.lang.Deprecated public boolean getFaceted() {
      return faceted_;
    }
    /**
     * <pre>
     * Whether the statistics data for this reference should be maintained and this allowing to get
     * `facetSummary` for this reference or use `facetInSet`
     * filtering query.
     *
     * Do not mark reference as faceted unless you want it among `FacetStatistics`. Each faceted reference
     * occupies (memory/disk) space in the form of index.
     * Reference that was marked as faceted is called Facet.
     * deprecated in favor of `facetedInScopes`
     * </pre>
     *
     * <code>bool faceted = 10 [deprecated = true];</code>
     * @deprecated io.evitadb.externalApi.grpc.generated.GrpcCreateReferenceSchemaMutation.faceted is deprecated.
     *     See GrpcReferenceSchemaMutations.proto;l=59
     * @param value The faceted to set.
     * @return This builder for chaining.
     */
    @java.lang.Deprecated public Builder setFaceted(boolean value) {

      faceted_ = value;
      bitField0_ |= 0x00000200;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Whether the statistics data for this reference should be maintained and this allowing to get
     * `facetSummary` for this reference or use `facetInSet`
     * filtering query.
     *
     * Do not mark reference as faceted unless you want it among `FacetStatistics`. Each faceted reference
     * occupies (memory/disk) space in the form of index.
     * Reference that was marked as faceted is called Facet.
     * deprecated in favor of `facetedInScopes`
     * </pre>
     *
     * <code>bool faceted = 10 [deprecated = true];</code>
     * @deprecated io.evitadb.externalApi.grpc.generated.GrpcCreateReferenceSchemaMutation.faceted is deprecated.
     *     See GrpcReferenceSchemaMutations.proto;l=59
     * @return This builder for chaining.
     */
    @java.lang.Deprecated public Builder clearFaceted() {
      bitField0_ = (bitField0_ & ~0x00000200);
      faceted_ = false;
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Integer> indexedInScopes_ =
      java.util.Collections.emptyList();
    private void ensureIndexedInScopesIsMutable() {
      if (!((bitField0_ & 0x00000400) != 0)) {
        indexedInScopes_ = new java.util.ArrayList<java.lang.Integer>(indexedInScopes_);
        bitField0_ |= 0x00000400;
      }
    }
    /**
     * <pre>
     * Whether the index for this reference should be created and maintained allowing to filter by
     * `referenceHaving` filtering constraints. Index is also required when reference is
     * `faceted`.
     *
     * Do not mark reference as faceted unless you know that you'll need to filter/sort entities by this reference.
     * Each indexed reference occupies (memory/disk) space in the form of index. When reference is not indexed,
     * the entity cannot be looked up by reference attributes or relation existence itself, but the data is loaded
     * alongside other references if requested.
     * deprecated in favor of `scopedIndexTypes`
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope indexedInScopes = 11 [deprecated = true];</code>
     * @deprecated io.evitadb.externalApi.grpc.generated.GrpcCreateReferenceSchemaMutation.indexedInScopes is deprecated.
     *     See GrpcReferenceSchemaMutations.proto;l=69
     * @return A list containing the indexedInScopes.
     */
    @java.lang.Deprecated public java.util.List<io.evitadb.externalApi.grpc.generated.GrpcEntityScope> getIndexedInScopesList() {
      return new com.google.protobuf.Internal.ListAdapter<
          java.lang.Integer, io.evitadb.externalApi.grpc.generated.GrpcEntityScope>(indexedInScopes_, indexedInScopes_converter_);
    }
    /**
     * <pre>
     * Whether the index for this reference should be created and maintained allowing to filter by
     * `referenceHaving` filtering constraints. Index is also required when reference is
     * `faceted`.
     *
     * Do not mark reference as faceted unless you know that you'll need to filter/sort entities by this reference.
     * Each indexed reference occupies (memory/disk) space in the form of index. When reference is not indexed,
     * the entity cannot be looked up by reference attributes or relation existence itself, but the data is loaded
     * alongside other references if requested.
     * deprecated in favor of `scopedIndexTypes`
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope indexedInScopes = 11 [deprecated = true];</code>
     * @deprecated io.evitadb.externalApi.grpc.generated.GrpcCreateReferenceSchemaMutation.indexedInScopes is deprecated.
     *     See GrpcReferenceSchemaMutations.proto;l=69
     * @return The count of indexedInScopes.
     */
    @java.lang.Deprecated public int getIndexedInScopesCount() {
      return indexedInScopes_.size();
    }
    /**
     * <pre>
     * Whether the index for this reference should be created and maintained allowing to filter by
     * `referenceHaving` filtering constraints. Index is also required when reference is
     * `faceted`.
     *
     * Do not mark reference as faceted unless you know that you'll need to filter/sort entities by this reference.
     * Each indexed reference occupies (memory/disk) space in the form of index. When reference is not indexed,
     * the entity cannot be looked up by reference attributes or relation existence itself, but the data is loaded
     * alongside other references if requested.
     * deprecated in favor of `scopedIndexTypes`
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope indexedInScopes = 11 [deprecated = true];</code>
     * @deprecated io.evitadb.externalApi.grpc.generated.GrpcCreateReferenceSchemaMutation.indexedInScopes is deprecated.
     *     See GrpcReferenceSchemaMutations.proto;l=69
     * @param index The index of the element to return.
     * @return The indexedInScopes at the given index.
     */
    @java.lang.Deprecated public io.evitadb.externalApi.grpc.generated.GrpcEntityScope getIndexedInScopes(int index) {
      return indexedInScopes_converter_.convert(indexedInScopes_.get(index));
    }
    /**
     * <pre>
     * Whether the index for this reference should be created and maintained allowing to filter by
     * `referenceHaving` filtering constraints. Index is also required when reference is
     * `faceted`.
     *
     * Do not mark reference as faceted unless you know that you'll need to filter/sort entities by this reference.
     * Each indexed reference occupies (memory/disk) space in the form of index. When reference is not indexed,
     * the entity cannot be looked up by reference attributes or relation existence itself, but the data is loaded
     * alongside other references if requested.
     * deprecated in favor of `scopedIndexTypes`
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope indexedInScopes = 11 [deprecated = true];</code>
     * @deprecated io.evitadb.externalApi.grpc.generated.GrpcCreateReferenceSchemaMutation.indexedInScopes is deprecated.
     *     See GrpcReferenceSchemaMutations.proto;l=69
     * @param index The index to set the value at.
     * @param value The indexedInScopes to set.
     * @return This builder for chaining.
     */
    @java.lang.Deprecated public Builder setIndexedInScopes(
        int index, io.evitadb.externalApi.grpc.generated.GrpcEntityScope value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureIndexedInScopesIsMutable();
      indexedInScopes_.set(index, value.getNumber());
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Whether the index for this reference should be created and maintained allowing to filter by
     * `referenceHaving` filtering constraints. Index is also required when reference is
     * `faceted`.
     *
     * Do not mark reference as faceted unless you know that you'll need to filter/sort entities by this reference.
     * Each indexed reference occupies (memory/disk) space in the form of index. When reference is not indexed,
     * the entity cannot be looked up by reference attributes or relation existence itself, but the data is loaded
     * alongside other references if requested.
     * deprecated in favor of `scopedIndexTypes`
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope indexedInScopes = 11 [deprecated = true];</code>
     * @deprecated io.evitadb.externalApi.grpc.generated.GrpcCreateReferenceSchemaMutation.indexedInScopes is deprecated.
     *     See GrpcReferenceSchemaMutations.proto;l=69
     * @param value The indexedInScopes to add.
     * @return This builder for chaining.
     */
    @java.lang.Deprecated public Builder addIndexedInScopes(io.evitadb.externalApi.grpc.generated.GrpcEntityScope value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureIndexedInScopesIsMutable();
      indexedInScopes_.add(value.getNumber());
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Whether the index for this reference should be created and maintained allowing to filter by
     * `referenceHaving` filtering constraints. Index is also required when reference is
     * `faceted`.
     *
     * Do not mark reference as faceted unless you know that you'll need to filter/sort entities by this reference.
     * Each indexed reference occupies (memory/disk) space in the form of index. When reference is not indexed,
     * the entity cannot be looked up by reference attributes or relation existence itself, but the data is loaded
     * alongside other references if requested.
     * deprecated in favor of `scopedIndexTypes`
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope indexedInScopes = 11 [deprecated = true];</code>
     * @deprecated io.evitadb.externalApi.grpc.generated.GrpcCreateReferenceSchemaMutation.indexedInScopes is deprecated.
     *     See GrpcReferenceSchemaMutations.proto;l=69
     * @param values The indexedInScopes to add.
     * @return This builder for chaining.
     */
    @java.lang.Deprecated public Builder addAllIndexedInScopes(
        java.lang.Iterable<? extends io.evitadb.externalApi.grpc.generated.GrpcEntityScope> values) {
      ensureIndexedInScopesIsMutable();
      for (io.evitadb.externalApi.grpc.generated.GrpcEntityScope value : values) {
        indexedInScopes_.add(value.getNumber());
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Whether the index for this reference should be created and maintained allowing to filter by
     * `referenceHaving` filtering constraints. Index is also required when reference is
     * `faceted`.
     *
     * Do not mark reference as faceted unless you know that you'll need to filter/sort entities by this reference.
     * Each indexed reference occupies (memory/disk) space in the form of index. When reference is not indexed,
     * the entity cannot be looked up by reference attributes or relation existence itself, but the data is loaded
     * alongside other references if requested.
     * deprecated in favor of `scopedIndexTypes`
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope indexedInScopes = 11 [deprecated = true];</code>
     * @deprecated io.evitadb.externalApi.grpc.generated.GrpcCreateReferenceSchemaMutation.indexedInScopes is deprecated.
     *     See GrpcReferenceSchemaMutations.proto;l=69
     * @return This builder for chaining.
     */
    @java.lang.Deprecated public Builder clearIndexedInScopes() {
      indexedInScopes_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000400);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Whether the index for this reference should be created and maintained allowing to filter by
     * `referenceHaving` filtering constraints. Index is also required when reference is
     * `faceted`.
     *
     * Do not mark reference as faceted unless you know that you'll need to filter/sort entities by this reference.
     * Each indexed reference occupies (memory/disk) space in the form of index. When reference is not indexed,
     * the entity cannot be looked up by reference attributes or relation existence itself, but the data is loaded
     * alongside other references if requested.
     * deprecated in favor of `scopedIndexTypes`
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope indexedInScopes = 11 [deprecated = true];</code>
     * @deprecated io.evitadb.externalApi.grpc.generated.GrpcCreateReferenceSchemaMutation.indexedInScopes is deprecated.
     *     See GrpcReferenceSchemaMutations.proto;l=69
     * @return A list containing the enum numeric values on the wire for indexedInScopes.
     */
    @java.lang.Deprecated public java.util.List<java.lang.Integer>
    getIndexedInScopesValueList() {
      return java.util.Collections.unmodifiableList(indexedInScopes_);
    }
    /**
     * <pre>
     * Whether the index for this reference should be created and maintained allowing to filter by
     * `referenceHaving` filtering constraints. Index is also required when reference is
     * `faceted`.
     *
     * Do not mark reference as faceted unless you know that you'll need to filter/sort entities by this reference.
     * Each indexed reference occupies (memory/disk) space in the form of index. When reference is not indexed,
     * the entity cannot be looked up by reference attributes or relation existence itself, but the data is loaded
     * alongside other references if requested.
     * deprecated in favor of `scopedIndexTypes`
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope indexedInScopes = 11 [deprecated = true];</code>
     * @deprecated io.evitadb.externalApi.grpc.generated.GrpcCreateReferenceSchemaMutation.indexedInScopes is deprecated.
     *     See GrpcReferenceSchemaMutations.proto;l=69
     * @param index The index of the value to return.
     * @return The enum numeric value on the wire of indexedInScopes at the given index.
     */
    @java.lang.Deprecated public int getIndexedInScopesValue(int index) {
      return indexedInScopes_.get(index);
    }
    /**
     * <pre>
     * Whether the index for this reference should be created and maintained allowing to filter by
     * `referenceHaving` filtering constraints. Index is also required when reference is
     * `faceted`.
     *
     * Do not mark reference as faceted unless you know that you'll need to filter/sort entities by this reference.
     * Each indexed reference occupies (memory/disk) space in the form of index. When reference is not indexed,
     * the entity cannot be looked up by reference attributes or relation existence itself, but the data is loaded
     * alongside other references if requested.
     * deprecated in favor of `scopedIndexTypes`
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope indexedInScopes = 11 [deprecated = true];</code>
     * @deprecated io.evitadb.externalApi.grpc.generated.GrpcCreateReferenceSchemaMutation.indexedInScopes is deprecated.
     *     See GrpcReferenceSchemaMutations.proto;l=69
     * @param index The index to set the value at.
     * @param value The enum numeric value on the wire for indexedInScopes to set.
     * @return This builder for chaining.
     */
    @java.lang.Deprecated public Builder setIndexedInScopesValue(
        int index, int value) {
      ensureIndexedInScopesIsMutable();
      indexedInScopes_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Whether the index for this reference should be created and maintained allowing to filter by
     * `referenceHaving` filtering constraints. Index is also required when reference is
     * `faceted`.
     *
     * Do not mark reference as faceted unless you know that you'll need to filter/sort entities by this reference.
     * Each indexed reference occupies (memory/disk) space in the form of index. When reference is not indexed,
     * the entity cannot be looked up by reference attributes or relation existence itself, but the data is loaded
     * alongside other references if requested.
     * deprecated in favor of `scopedIndexTypes`
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope indexedInScopes = 11 [deprecated = true];</code>
     * @deprecated io.evitadb.externalApi.grpc.generated.GrpcCreateReferenceSchemaMutation.indexedInScopes is deprecated.
     *     See GrpcReferenceSchemaMutations.proto;l=69
     * @param value The enum numeric value on the wire for indexedInScopes to add.
     * @return This builder for chaining.
     */
    @java.lang.Deprecated public Builder addIndexedInScopesValue(int value) {
      ensureIndexedInScopesIsMutable();
      indexedInScopes_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Whether the index for this reference should be created and maintained allowing to filter by
     * `referenceHaving` filtering constraints. Index is also required when reference is
     * `faceted`.
     *
     * Do not mark reference as faceted unless you know that you'll need to filter/sort entities by this reference.
     * Each indexed reference occupies (memory/disk) space in the form of index. When reference is not indexed,
     * the entity cannot be looked up by reference attributes or relation existence itself, but the data is loaded
     * alongside other references if requested.
     * deprecated in favor of `scopedIndexTypes`
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope indexedInScopes = 11 [deprecated = true];</code>
     * @deprecated io.evitadb.externalApi.grpc.generated.GrpcCreateReferenceSchemaMutation.indexedInScopes is deprecated.
     *     See GrpcReferenceSchemaMutations.proto;l=69
     * @param values The enum numeric values on the wire for indexedInScopes to add.
     * @return This builder for chaining.
     */
    @java.lang.Deprecated public Builder addAllIndexedInScopesValue(
        java.lang.Iterable<java.lang.Integer> values) {
      ensureIndexedInScopesIsMutable();
      for (int value : values) {
        indexedInScopes_.add(value);
      }
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Integer> facetedInScopes_ =
      java.util.Collections.emptyList();
    private void ensureFacetedInScopesIsMutable() {
      if (!((bitField0_ & 0x00000800) != 0)) {
        facetedInScopes_ = new java.util.ArrayList<java.lang.Integer>(facetedInScopes_);
        bitField0_ |= 0x00000800;
      }
    }
    /**
     * <pre>
     * Whether the statistics data for this reference should be maintained and this allowing to get
     * `facetSummary` for this reference or use `facetInSet`
     * filtering query.
     *
     * Do not mark reference as faceted unless you want it among `FacetStatistics`. Each faceted reference
     * occupies (memory/disk) space in the form of index.
     * Reference that was marked as faceted is called Facet.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope facetedInScopes = 12;</code>
     * @return A list containing the facetedInScopes.
     */
    public java.util.List<io.evitadb.externalApi.grpc.generated.GrpcEntityScope> getFacetedInScopesList() {
      return new com.google.protobuf.Internal.ListAdapter<
          java.lang.Integer, io.evitadb.externalApi.grpc.generated.GrpcEntityScope>(facetedInScopes_, facetedInScopes_converter_);
    }
    /**
     * <pre>
     * Whether the statistics data for this reference should be maintained and this allowing to get
     * `facetSummary` for this reference or use `facetInSet`
     * filtering query.
     *
     * Do not mark reference as faceted unless you want it among `FacetStatistics`. Each faceted reference
     * occupies (memory/disk) space in the form of index.
     * Reference that was marked as faceted is called Facet.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope facetedInScopes = 12;</code>
     * @return The count of facetedInScopes.
     */
    public int getFacetedInScopesCount() {
      return facetedInScopes_.size();
    }
    /**
     * <pre>
     * Whether the statistics data for this reference should be maintained and this allowing to get
     * `facetSummary` for this reference or use `facetInSet`
     * filtering query.
     *
     * Do not mark reference as faceted unless you want it among `FacetStatistics`. Each faceted reference
     * occupies (memory/disk) space in the form of index.
     * Reference that was marked as faceted is called Facet.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope facetedInScopes = 12;</code>
     * @param index The index of the element to return.
     * @return The facetedInScopes at the given index.
     */
    public io.evitadb.externalApi.grpc.generated.GrpcEntityScope getFacetedInScopes(int index) {
      return facetedInScopes_converter_.convert(facetedInScopes_.get(index));
    }
    /**
     * <pre>
     * Whether the statistics data for this reference should be maintained and this allowing to get
     * `facetSummary` for this reference or use `facetInSet`
     * filtering query.
     *
     * Do not mark reference as faceted unless you want it among `FacetStatistics`. Each faceted reference
     * occupies (memory/disk) space in the form of index.
     * Reference that was marked as faceted is called Facet.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope facetedInScopes = 12;</code>
     * @param index The index to set the value at.
     * @param value The facetedInScopes to set.
     * @return This builder for chaining.
     */
    public Builder setFacetedInScopes(
        int index, io.evitadb.externalApi.grpc.generated.GrpcEntityScope value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureFacetedInScopesIsMutable();
      facetedInScopes_.set(index, value.getNumber());
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Whether the statistics data for this reference should be maintained and this allowing to get
     * `facetSummary` for this reference or use `facetInSet`
     * filtering query.
     *
     * Do not mark reference as faceted unless you want it among `FacetStatistics`. Each faceted reference
     * occupies (memory/disk) space in the form of index.
     * Reference that was marked as faceted is called Facet.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope facetedInScopes = 12;</code>
     * @param value The facetedInScopes to add.
     * @return This builder for chaining.
     */
    public Builder addFacetedInScopes(io.evitadb.externalApi.grpc.generated.GrpcEntityScope value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureFacetedInScopesIsMutable();
      facetedInScopes_.add(value.getNumber());
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Whether the statistics data for this reference should be maintained and this allowing to get
     * `facetSummary` for this reference or use `facetInSet`
     * filtering query.
     *
     * Do not mark reference as faceted unless you want it among `FacetStatistics`. Each faceted reference
     * occupies (memory/disk) space in the form of index.
     * Reference that was marked as faceted is called Facet.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope facetedInScopes = 12;</code>
     * @param values The facetedInScopes to add.
     * @return This builder for chaining.
     */
    public Builder addAllFacetedInScopes(
        java.lang.Iterable<? extends io.evitadb.externalApi.grpc.generated.GrpcEntityScope> values) {
      ensureFacetedInScopesIsMutable();
      for (io.evitadb.externalApi.grpc.generated.GrpcEntityScope value : values) {
        facetedInScopes_.add(value.getNumber());
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Whether the statistics data for this reference should be maintained and this allowing to get
     * `facetSummary` for this reference or use `facetInSet`
     * filtering query.
     *
     * Do not mark reference as faceted unless you want it among `FacetStatistics`. Each faceted reference
     * occupies (memory/disk) space in the form of index.
     * Reference that was marked as faceted is called Facet.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope facetedInScopes = 12;</code>
     * @return This builder for chaining.
     */
    public Builder clearFacetedInScopes() {
      facetedInScopes_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000800);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Whether the statistics data for this reference should be maintained and this allowing to get
     * `facetSummary` for this reference or use `facetInSet`
     * filtering query.
     *
     * Do not mark reference as faceted unless you want it among `FacetStatistics`. Each faceted reference
     * occupies (memory/disk) space in the form of index.
     * Reference that was marked as faceted is called Facet.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope facetedInScopes = 12;</code>
     * @return A list containing the enum numeric values on the wire for facetedInScopes.
     */
    public java.util.List<java.lang.Integer>
    getFacetedInScopesValueList() {
      return java.util.Collections.unmodifiableList(facetedInScopes_);
    }
    /**
     * <pre>
     * Whether the statistics data for this reference should be maintained and this allowing to get
     * `facetSummary` for this reference or use `facetInSet`
     * filtering query.
     *
     * Do not mark reference as faceted unless you want it among `FacetStatistics`. Each faceted reference
     * occupies (memory/disk) space in the form of index.
     * Reference that was marked as faceted is called Facet.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope facetedInScopes = 12;</code>
     * @param index The index of the value to return.
     * @return The enum numeric value on the wire of facetedInScopes at the given index.
     */
    public int getFacetedInScopesValue(int index) {
      return facetedInScopes_.get(index);
    }
    /**
     * <pre>
     * Whether the statistics data for this reference should be maintained and this allowing to get
     * `facetSummary` for this reference or use `facetInSet`
     * filtering query.
     *
     * Do not mark reference as faceted unless you want it among `FacetStatistics`. Each faceted reference
     * occupies (memory/disk) space in the form of index.
     * Reference that was marked as faceted is called Facet.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope facetedInScopes = 12;</code>
     * @param index The index to set the value at.
     * @param value The enum numeric value on the wire for facetedInScopes to set.
     * @return This builder for chaining.
     */
    public Builder setFacetedInScopesValue(
        int index, int value) {
      ensureFacetedInScopesIsMutable();
      facetedInScopes_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Whether the statistics data for this reference should be maintained and this allowing to get
     * `facetSummary` for this reference or use `facetInSet`
     * filtering query.
     *
     * Do not mark reference as faceted unless you want it among `FacetStatistics`. Each faceted reference
     * occupies (memory/disk) space in the form of index.
     * Reference that was marked as faceted is called Facet.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope facetedInScopes = 12;</code>
     * @param value The enum numeric value on the wire for facetedInScopes to add.
     * @return This builder for chaining.
     */
    public Builder addFacetedInScopesValue(int value) {
      ensureFacetedInScopesIsMutable();
      facetedInScopes_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Whether the statistics data for this reference should be maintained and this allowing to get
     * `facetSummary` for this reference or use `facetInSet`
     * filtering query.
     *
     * Do not mark reference as faceted unless you want it among `FacetStatistics`. Each faceted reference
     * occupies (memory/disk) space in the form of index.
     * Reference that was marked as faceted is called Facet.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope facetedInScopes = 12;</code>
     * @param values The enum numeric values on the wire for facetedInScopes to add.
     * @return This builder for chaining.
     */
    public Builder addAllFacetedInScopesValue(
        java.lang.Iterable<java.lang.Integer> values) {
      ensureFacetedInScopesIsMutable();
      for (int value : values) {
        facetedInScopes_.add(value);
      }
      onChanged();
      return this;
    }

    private java.util.List<io.evitadb.externalApi.grpc.generated.GrpcScopedReferenceIndexType> scopedIndexTypes_ =
      java.util.Collections.emptyList();
    private void ensureScopedIndexTypesIsMutable() {
      if (!((bitField0_ & 0x00001000) != 0)) {
        scopedIndexTypes_ = new java.util.ArrayList<io.evitadb.externalApi.grpc.generated.GrpcScopedReferenceIndexType>(scopedIndexTypes_);
        bitField0_ |= 0x00001000;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.evitadb.externalApi.grpc.generated.GrpcScopedReferenceIndexType, io.evitadb.externalApi.grpc.generated.GrpcScopedReferenceIndexType.Builder, io.evitadb.externalApi.grpc.generated.GrpcScopedReferenceIndexTypeOrBuilder> scopedIndexTypesBuilder_;

    /**
     * <pre>
     * Scoped reference index types that define both the scope and the type of index for the reference.
     * This replaces the deprecated `indexedInScopes` field with more granular control over indexing.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcScopedReferenceIndexType scopedIndexTypes = 13;</code>
     */
    public java.util.List<io.evitadb.externalApi.grpc.generated.GrpcScopedReferenceIndexType> getScopedIndexTypesList() {
      if (scopedIndexTypesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(scopedIndexTypes_);
      } else {
        return scopedIndexTypesBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Scoped reference index types that define both the scope and the type of index for the reference.
     * This replaces the deprecated `indexedInScopes` field with more granular control over indexing.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcScopedReferenceIndexType scopedIndexTypes = 13;</code>
     */
    public int getScopedIndexTypesCount() {
      if (scopedIndexTypesBuilder_ == null) {
        return scopedIndexTypes_.size();
      } else {
        return scopedIndexTypesBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Scoped reference index types that define both the scope and the type of index for the reference.
     * This replaces the deprecated `indexedInScopes` field with more granular control over indexing.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcScopedReferenceIndexType scopedIndexTypes = 13;</code>
     */
    public io.evitadb.externalApi.grpc.generated.GrpcScopedReferenceIndexType getScopedIndexTypes(int index) {
      if (scopedIndexTypesBuilder_ == null) {
        return scopedIndexTypes_.get(index);
      } else {
        return scopedIndexTypesBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Scoped reference index types that define both the scope and the type of index for the reference.
     * This replaces the deprecated `indexedInScopes` field with more granular control over indexing.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcScopedReferenceIndexType scopedIndexTypes = 13;</code>
     */
    public Builder setScopedIndexTypes(
        int index, io.evitadb.externalApi.grpc.generated.GrpcScopedReferenceIndexType value) {
      if (scopedIndexTypesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureScopedIndexTypesIsMutable();
        scopedIndexTypes_.set(index, value);
        onChanged();
      } else {
        scopedIndexTypesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Scoped reference index types that define both the scope and the type of index for the reference.
     * This replaces the deprecated `indexedInScopes` field with more granular control over indexing.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcScopedReferenceIndexType scopedIndexTypes = 13;</code>
     */
    public Builder setScopedIndexTypes(
        int index, io.evitadb.externalApi.grpc.generated.GrpcScopedReferenceIndexType.Builder builderForValue) {
      if (scopedIndexTypesBuilder_ == null) {
        ensureScopedIndexTypesIsMutable();
        scopedIndexTypes_.set(index, builderForValue.build());
        onChanged();
      } else {
        scopedIndexTypesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Scoped reference index types that define both the scope and the type of index for the reference.
     * This replaces the deprecated `indexedInScopes` field with more granular control over indexing.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcScopedReferenceIndexType scopedIndexTypes = 13;</code>
     */
    public Builder addScopedIndexTypes(io.evitadb.externalApi.grpc.generated.GrpcScopedReferenceIndexType value) {
      if (scopedIndexTypesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureScopedIndexTypesIsMutable();
        scopedIndexTypes_.add(value);
        onChanged();
      } else {
        scopedIndexTypesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Scoped reference index types that define both the scope and the type of index for the reference.
     * This replaces the deprecated `indexedInScopes` field with more granular control over indexing.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcScopedReferenceIndexType scopedIndexTypes = 13;</code>
     */
    public Builder addScopedIndexTypes(
        int index, io.evitadb.externalApi.grpc.generated.GrpcScopedReferenceIndexType value) {
      if (scopedIndexTypesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureScopedIndexTypesIsMutable();
        scopedIndexTypes_.add(index, value);
        onChanged();
      } else {
        scopedIndexTypesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Scoped reference index types that define both the scope and the type of index for the reference.
     * This replaces the deprecated `indexedInScopes` field with more granular control over indexing.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcScopedReferenceIndexType scopedIndexTypes = 13;</code>
     */
    public Builder addScopedIndexTypes(
        io.evitadb.externalApi.grpc.generated.GrpcScopedReferenceIndexType.Builder builderForValue) {
      if (scopedIndexTypesBuilder_ == null) {
        ensureScopedIndexTypesIsMutable();
        scopedIndexTypes_.add(builderForValue.build());
        onChanged();
      } else {
        scopedIndexTypesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Scoped reference index types that define both the scope and the type of index for the reference.
     * This replaces the deprecated `indexedInScopes` field with more granular control over indexing.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcScopedReferenceIndexType scopedIndexTypes = 13;</code>
     */
    public Builder addScopedIndexTypes(
        int index, io.evitadb.externalApi.grpc.generated.GrpcScopedReferenceIndexType.Builder builderForValue) {
      if (scopedIndexTypesBuilder_ == null) {
        ensureScopedIndexTypesIsMutable();
        scopedIndexTypes_.add(index, builderForValue.build());
        onChanged();
      } else {
        scopedIndexTypesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Scoped reference index types that define both the scope and the type of index for the reference.
     * This replaces the deprecated `indexedInScopes` field with more granular control over indexing.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcScopedReferenceIndexType scopedIndexTypes = 13;</code>
     */
    public Builder addAllScopedIndexTypes(
        java.lang.Iterable<? extends io.evitadb.externalApi.grpc.generated.GrpcScopedReferenceIndexType> values) {
      if (scopedIndexTypesBuilder_ == null) {
        ensureScopedIndexTypesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, scopedIndexTypes_);
        onChanged();
      } else {
        scopedIndexTypesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Scoped reference index types that define both the scope and the type of index for the reference.
     * This replaces the deprecated `indexedInScopes` field with more granular control over indexing.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcScopedReferenceIndexType scopedIndexTypes = 13;</code>
     */
    public Builder clearScopedIndexTypes() {
      if (scopedIndexTypesBuilder_ == null) {
        scopedIndexTypes_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
        onChanged();
      } else {
        scopedIndexTypesBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Scoped reference index types that define both the scope and the type of index for the reference.
     * This replaces the deprecated `indexedInScopes` field with more granular control over indexing.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcScopedReferenceIndexType scopedIndexTypes = 13;</code>
     */
    public Builder removeScopedIndexTypes(int index) {
      if (scopedIndexTypesBuilder_ == null) {
        ensureScopedIndexTypesIsMutable();
        scopedIndexTypes_.remove(index);
        onChanged();
      } else {
        scopedIndexTypesBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Scoped reference index types that define both the scope and the type of index for the reference.
     * This replaces the deprecated `indexedInScopes` field with more granular control over indexing.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcScopedReferenceIndexType scopedIndexTypes = 13;</code>
     */
    public io.evitadb.externalApi.grpc.generated.GrpcScopedReferenceIndexType.Builder getScopedIndexTypesBuilder(
        int index) {
      return getScopedIndexTypesFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Scoped reference index types that define both the scope and the type of index for the reference.
     * This replaces the deprecated `indexedInScopes` field with more granular control over indexing.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcScopedReferenceIndexType scopedIndexTypes = 13;</code>
     */
    public io.evitadb.externalApi.grpc.generated.GrpcScopedReferenceIndexTypeOrBuilder getScopedIndexTypesOrBuilder(
        int index) {
      if (scopedIndexTypesBuilder_ == null) {
        return scopedIndexTypes_.get(index);  } else {
        return scopedIndexTypesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Scoped reference index types that define both the scope and the type of index for the reference.
     * This replaces the deprecated `indexedInScopes` field with more granular control over indexing.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcScopedReferenceIndexType scopedIndexTypes = 13;</code>
     */
    public java.util.List<? extends io.evitadb.externalApi.grpc.generated.GrpcScopedReferenceIndexTypeOrBuilder>
         getScopedIndexTypesOrBuilderList() {
      if (scopedIndexTypesBuilder_ != null) {
        return scopedIndexTypesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(scopedIndexTypes_);
      }
    }
    /**
     * <pre>
     * Scoped reference index types that define both the scope and the type of index for the reference.
     * This replaces the deprecated `indexedInScopes` field with more granular control over indexing.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcScopedReferenceIndexType scopedIndexTypes = 13;</code>
     */
    public io.evitadb.externalApi.grpc.generated.GrpcScopedReferenceIndexType.Builder addScopedIndexTypesBuilder() {
      return getScopedIndexTypesFieldBuilder().addBuilder(
          io.evitadb.externalApi.grpc.generated.GrpcScopedReferenceIndexType.getDefaultInstance());
    }
    /**
     * <pre>
     * Scoped reference index types that define both the scope and the type of index for the reference.
     * This replaces the deprecated `indexedInScopes` field with more granular control over indexing.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcScopedReferenceIndexType scopedIndexTypes = 13;</code>
     */
    public io.evitadb.externalApi.grpc.generated.GrpcScopedReferenceIndexType.Builder addScopedIndexTypesBuilder(
        int index) {
      return getScopedIndexTypesFieldBuilder().addBuilder(
          index, io.evitadb.externalApi.grpc.generated.GrpcScopedReferenceIndexType.getDefaultInstance());
    }
    /**
     * <pre>
     * Scoped reference index types that define both the scope and the type of index for the reference.
     * This replaces the deprecated `indexedInScopes` field with more granular control over indexing.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcScopedReferenceIndexType scopedIndexTypes = 13;</code>
     */
    public java.util.List<io.evitadb.externalApi.grpc.generated.GrpcScopedReferenceIndexType.Builder>
         getScopedIndexTypesBuilderList() {
      return getScopedIndexTypesFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.evitadb.externalApi.grpc.generated.GrpcScopedReferenceIndexType, io.evitadb.externalApi.grpc.generated.GrpcScopedReferenceIndexType.Builder, io.evitadb.externalApi.grpc.generated.GrpcScopedReferenceIndexTypeOrBuilder>
        getScopedIndexTypesFieldBuilder() {
      if (scopedIndexTypesBuilder_ == null) {
        scopedIndexTypesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            io.evitadb.externalApi.grpc.generated.GrpcScopedReferenceIndexType, io.evitadb.externalApi.grpc.generated.GrpcScopedReferenceIndexType.Builder, io.evitadb.externalApi.grpc.generated.GrpcScopedReferenceIndexTypeOrBuilder>(
                scopedIndexTypes_,
                ((bitField0_ & 0x00001000) != 0),
                getParentForChildren(),
                isClean());
        scopedIndexTypes_ = null;
      }
      return scopedIndexTypesBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:io.evitadb.externalApi.grpc.generated.GrpcCreateReferenceSchemaMutation)
  }

  // @@protoc_insertion_point(class_scope:io.evitadb.externalApi.grpc.generated.GrpcCreateReferenceSchemaMutation)
  private static final io.evitadb.externalApi.grpc.generated.GrpcCreateReferenceSchemaMutation DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.evitadb.externalApi.grpc.generated.GrpcCreateReferenceSchemaMutation();
  }

  public static io.evitadb.externalApi.grpc.generated.GrpcCreateReferenceSchemaMutation getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<GrpcCreateReferenceSchemaMutation>
      PARSER = new com.google.protobuf.AbstractParser<GrpcCreateReferenceSchemaMutation>() {
    @java.lang.Override
    public GrpcCreateReferenceSchemaMutation parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<GrpcCreateReferenceSchemaMutation> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<GrpcCreateReferenceSchemaMutation> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.evitadb.externalApi.grpc.generated.GrpcCreateReferenceSchemaMutation getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

