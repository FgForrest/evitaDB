/*
 *
 *                         _ _        ____  ____
 *               _____   _(_) |_ __ _|  _ \| __ )
 *              / _ \ \ / / | __/ _` | | | |  _ \
 *             |  __/\ V /| | || (_| | |_| | |_) |
 *              \___| \_/ |_|\__\__,_|____/|____/
 *
 *   Copyright (c) 2023-2025
 *
 *   Licensed under the Business Source License, Version 1.1 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *   https://github.com/FgForrest/evitaDB/blob/master/LICENSE
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GrpcEntitySchemaMutations.proto

package io.evitadb.externalApi.grpc.generated;

/**
 * <pre>
 * Mutation is responsible for setting a `EntitySchema.withPrice` in `EntitySchema`.
 * </pre>
 *
 * Protobuf type {@code io.evitadb.externalApi.grpc.generated.GrpcSetEntitySchemaWithPriceMutation}
 */
public final class GrpcSetEntitySchemaWithPriceMutation extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:io.evitadb.externalApi.grpc.generated.GrpcSetEntitySchemaWithPriceMutation)
    GrpcSetEntitySchemaWithPriceMutationOrBuilder {
private static final long serialVersionUID = 0L;
  // Use GrpcSetEntitySchemaWithPriceMutation.newBuilder() to construct.
  private GrpcSetEntitySchemaWithPriceMutation(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private GrpcSetEntitySchemaWithPriceMutation() {
    this.indexedInScopes_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new GrpcSetEntitySchemaWithPriceMutation();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private GrpcSetEntitySchemaWithPriceMutation(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {

            this.withPrice_ = input.readBool();
            break;
          }
          case 16: {

            this.indexedPricePlaces_ = input.readInt32();
            break;
          }
          case 24: {
            int rawValue = input.readEnum();
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              this.indexedInScopes_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField0_ |= 0x00000001;
            }
            this.indexedInScopes_.add(rawValue);
            break;
          }
          case 26: {
            int length = input.readRawVarint32();
            int oldLimit = input.pushLimit(length);
            while(input.getBytesUntilLimit() > 0) {
              int rawValue = input.readEnum();
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                this.indexedInScopes_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              this.indexedInScopes_.add(rawValue);
            }
            input.popLimit(oldLimit);
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        this.indexedInScopes_ = java.util.Collections.unmodifiableList(this.indexedInScopes_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.evitadb.externalApi.grpc.generated.GrpcEntitySchemaMutations.internal_static_io_evitadb_externalApi_grpc_generated_GrpcSetEntitySchemaWithPriceMutation_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.evitadb.externalApi.grpc.generated.GrpcEntitySchemaMutations.internal_static_io_evitadb_externalApi_grpc_generated_GrpcSetEntitySchemaWithPriceMutation_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.evitadb.externalApi.grpc.generated.GrpcSetEntitySchemaWithPriceMutation.class, io.evitadb.externalApi.grpc.generated.GrpcSetEntitySchemaWithPriceMutation.Builder.class);
  }

  public static final int WITHPRICE_FIELD_NUMBER = 1;
  private boolean withPrice_;
  /**
   * <pre>
   * Whether entities of this type holds price information.
   * Prices are specific to a very few entities, but because correct price computation is very complex in e-commerce
   * systems and highly affects performance of the entities filtering and sorting, they deserve first class support
   * in entity model. It is pretty common in B2B systems single product has assigned dozens of prices for the different
   * customers.
   * Specifying prices on entity allows usage of `priceValidIn`, `priceInCurrency`
   * `priceBetween`, and `priceInPriceLists` filtering constraints and also price
   * ordering of the entities. Additional requirements
   * `priceHistogram` and `priceType` can be used in query as well.
   * </pre>
   *
   * <code>bool withPrice = 1;</code>
   * @return The withPrice.
   */
  @java.lang.Override
  public boolean getWithPrice() {
    return this.withPrice_;
  }

  public static final int INDEXEDPRICEPLACES_FIELD_NUMBER = 2;
  private int indexedPricePlaces_;
  /**
   * <pre>
   * Determines how many fractional places are important when entities are compared during filtering or sorting. It is
   * important to know that all prices will be converted to `Integer`, so any of the price values
   * (either with or without tax) must not ever exceed maximum limits of `Integer` type when scaling
   * the number by the power of ten using `indexedPricePlaces` as exponent.
   * </pre>
   *
   * <code>int32 indexedPricePlaces = 2;</code>
   * @return The indexedPricePlaces.
   */
  @java.lang.Override
  public int getIndexedPricePlaces() {
    return this.indexedPricePlaces_;
  }

  public static final int INDEXEDINSCOPES_FIELD_NUMBER = 3;
  private java.util.List<java.lang.Integer> indexedInScopes_;
  private static final com.google.protobuf.Internal.ListAdapter.Converter<
      java.lang.Integer, io.evitadb.externalApi.grpc.generated.GrpcEntityScope> indexedInScopes_converter_ =
          new com.google.protobuf.Internal.ListAdapter.Converter<
              java.lang.Integer, io.evitadb.externalApi.grpc.generated.GrpcEntityScope>() {
            public io.evitadb.externalApi.grpc.generated.GrpcEntityScope convert(java.lang.Integer from) {
              @SuppressWarnings("deprecation")
              io.evitadb.externalApi.grpc.generated.GrpcEntityScope result = io.evitadb.externalApi.grpc.generated.GrpcEntityScope.valueOf(from);
              return result == null ? io.evitadb.externalApi.grpc.generated.GrpcEntityScope.UNRECOGNIZED : result;
            }
          };
  /**
   * <pre>
   * Contains set of all scopes the price information is indexed in and can be used for filtering entities and computation
   * of extra data. If the price information is not indexed, it is still available on the entity itself (i.e. entity
   * can define its price), but it is not possible to work with the price information in any other way (calculating
   * price histogram, filtering, sorting by price, etc.).
   * Prices can be also set as non-indexed individually by setting {&#64;link PriceContract#indexed()} to false.
   * </pre>
   *
   * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope indexedInScopes = 3;</code>
   * @return A list containing the indexedInScopes.
   */
  @java.lang.Override
  public java.util.List<io.evitadb.externalApi.grpc.generated.GrpcEntityScope> getIndexedInScopesList() {
    return new com.google.protobuf.Internal.ListAdapter<
        java.lang.Integer, io.evitadb.externalApi.grpc.generated.GrpcEntityScope>(this.indexedInScopes_, indexedInScopes_converter_);
  }
  /**
   * <pre>
   * Contains set of all scopes the price information is indexed in and can be used for filtering entities and computation
   * of extra data. If the price information is not indexed, it is still available on the entity itself (i.e. entity
   * can define its price), but it is not possible to work with the price information in any other way (calculating
   * price histogram, filtering, sorting by price, etc.).
   * Prices can be also set as non-indexed individually by setting {&#64;link PriceContract#indexed()} to false.
   * </pre>
   *
   * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope indexedInScopes = 3;</code>
   * @return The count of indexedInScopes.
   */
  @java.lang.Override
  public int getIndexedInScopesCount() {
    return this.indexedInScopes_.size();
  }
  /**
   * <pre>
   * Contains set of all scopes the price information is indexed in and can be used for filtering entities and computation
   * of extra data. If the price information is not indexed, it is still available on the entity itself (i.e. entity
   * can define its price), but it is not possible to work with the price information in any other way (calculating
   * price histogram, filtering, sorting by price, etc.).
   * Prices can be also set as non-indexed individually by setting {&#64;link PriceContract#indexed()} to false.
   * </pre>
   *
   * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope indexedInScopes = 3;</code>
   * @param index The index of the element to return.
   * @return The indexedInScopes at the given index.
   */
  @java.lang.Override
  public io.evitadb.externalApi.grpc.generated.GrpcEntityScope getIndexedInScopes(int index) {
    return indexedInScopes_converter_.convert(this.indexedInScopes_.get(index));
  }
  /**
   * <pre>
   * Contains set of all scopes the price information is indexed in and can be used for filtering entities and computation
   * of extra data. If the price information is not indexed, it is still available on the entity itself (i.e. entity
   * can define its price), but it is not possible to work with the price information in any other way (calculating
   * price histogram, filtering, sorting by price, etc.).
   * Prices can be also set as non-indexed individually by setting {&#64;link PriceContract#indexed()} to false.
   * </pre>
   *
   * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope indexedInScopes = 3;</code>
   * @return A list containing the enum numeric values on the wire for indexedInScopes.
   */
  @java.lang.Override
  public java.util.List<java.lang.Integer>
  getIndexedInScopesValueList() {
    return this.indexedInScopes_;
  }
  /**
   * <pre>
   * Contains set of all scopes the price information is indexed in and can be used for filtering entities and computation
   * of extra data. If the price information is not indexed, it is still available on the entity itself (i.e. entity
   * can define its price), but it is not possible to work with the price information in any other way (calculating
   * price histogram, filtering, sorting by price, etc.).
   * Prices can be also set as non-indexed individually by setting {&#64;link PriceContract#indexed()} to false.
   * </pre>
   *
   * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope indexedInScopes = 3;</code>
   * @param index The index of the value to return.
   * @return The enum numeric value on the wire of indexedInScopes at the given index.
   */
  @java.lang.Override
  public int getIndexedInScopesValue(int index) {
    return this.indexedInScopes_.get(index);
  }
  private int indexedInScopesMemoizedSerializedSize;

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = this.memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    this.memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    if (this.withPrice_ != false) {
      output.writeBool(1, this.withPrice_);
    }
    if (this.indexedPricePlaces_ != 0) {
      output.writeInt32(2, this.indexedPricePlaces_);
    }
    if (getIndexedInScopesList().size() > 0) {
      output.writeUInt32NoTag(26);
      output.writeUInt32NoTag(this.indexedInScopesMemoizedSerializedSize);
    }
    for (int i = 0; i < this.indexedInScopes_.size(); i++) {
      output.writeEnumNoTag(this.indexedInScopes_.get(i));
    }
    this.unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = this.memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (this.withPrice_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(1, this.withPrice_);
    }
    if (this.indexedPricePlaces_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(2, this.indexedPricePlaces_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < this.indexedInScopes_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeEnumSizeNoTag(this.indexedInScopes_.get(i));
      }
      size += dataSize;
      if (!getIndexedInScopesList().isEmpty()) {  size += 1;
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32SizeNoTag(dataSize);
      }this.indexedInScopesMemoizedSerializedSize = dataSize;
    }
    size += this.unknownFields.getSerializedSize();
    this.memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.evitadb.externalApi.grpc.generated.GrpcSetEntitySchemaWithPriceMutation)) {
      return super.equals(obj);
    }
    io.evitadb.externalApi.grpc.generated.GrpcSetEntitySchemaWithPriceMutation other = (io.evitadb.externalApi.grpc.generated.GrpcSetEntitySchemaWithPriceMutation) obj;

    if (getWithPrice()
        != other.getWithPrice()) return false;
    if (getIndexedPricePlaces()
        != other.getIndexedPricePlaces()) return false;
    if (!this.indexedInScopes_.equals(other.indexedInScopes_)) return false;
    if (!this.unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (this.memoizedHashCode != 0) {
      return this.memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + WITHPRICE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getWithPrice());
    hash = (37 * hash) + INDEXEDPRICEPLACES_FIELD_NUMBER;
    hash = (53 * hash) + getIndexedPricePlaces();
    if (getIndexedInScopesCount() > 0) {
      hash = (37 * hash) + INDEXEDINSCOPES_FIELD_NUMBER;
      hash = (53 * hash) + this.indexedInScopes_.hashCode();
    }
    hash = (29 * hash) + this.unknownFields.hashCode();
    this.memoizedHashCode = hash;
    return hash;
  }

  public static io.evitadb.externalApi.grpc.generated.GrpcSetEntitySchemaWithPriceMutation parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.evitadb.externalApi.grpc.generated.GrpcSetEntitySchemaWithPriceMutation parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.evitadb.externalApi.grpc.generated.GrpcSetEntitySchemaWithPriceMutation parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.evitadb.externalApi.grpc.generated.GrpcSetEntitySchemaWithPriceMutation parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.evitadb.externalApi.grpc.generated.GrpcSetEntitySchemaWithPriceMutation parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.evitadb.externalApi.grpc.generated.GrpcSetEntitySchemaWithPriceMutation parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.evitadb.externalApi.grpc.generated.GrpcSetEntitySchemaWithPriceMutation parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.evitadb.externalApi.grpc.generated.GrpcSetEntitySchemaWithPriceMutation parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.evitadb.externalApi.grpc.generated.GrpcSetEntitySchemaWithPriceMutation parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.evitadb.externalApi.grpc.generated.GrpcSetEntitySchemaWithPriceMutation parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.evitadb.externalApi.grpc.generated.GrpcSetEntitySchemaWithPriceMutation parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.evitadb.externalApi.grpc.generated.GrpcSetEntitySchemaWithPriceMutation parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.evitadb.externalApi.grpc.generated.GrpcSetEntitySchemaWithPriceMutation prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Mutation is responsible for setting a `EntitySchema.withPrice` in `EntitySchema`.
   * </pre>
   *
   * Protobuf type {@code io.evitadb.externalApi.grpc.generated.GrpcSetEntitySchemaWithPriceMutation}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:io.evitadb.externalApi.grpc.generated.GrpcSetEntitySchemaWithPriceMutation)
      io.evitadb.externalApi.grpc.generated.GrpcSetEntitySchemaWithPriceMutationOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.evitadb.externalApi.grpc.generated.GrpcEntitySchemaMutations.internal_static_io_evitadb_externalApi_grpc_generated_GrpcSetEntitySchemaWithPriceMutation_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.evitadb.externalApi.grpc.generated.GrpcEntitySchemaMutations.internal_static_io_evitadb_externalApi_grpc_generated_GrpcSetEntitySchemaWithPriceMutation_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.evitadb.externalApi.grpc.generated.GrpcSetEntitySchemaWithPriceMutation.class, io.evitadb.externalApi.grpc.generated.GrpcSetEntitySchemaWithPriceMutation.Builder.class);
    }

    // Construct using io.evitadb.externalApi.grpc.generated.GrpcSetEntitySchemaWithPriceMutation.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      this.withPrice_ = false;

      this.indexedPricePlaces_ = 0;

      this.indexedInScopes_ = java.util.Collections.emptyList();
      this.bitField0_ = (this.bitField0_ & ~0x00000001);
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.evitadb.externalApi.grpc.generated.GrpcEntitySchemaMutations.internal_static_io_evitadb_externalApi_grpc_generated_GrpcSetEntitySchemaWithPriceMutation_descriptor;
    }

    @java.lang.Override
    public io.evitadb.externalApi.grpc.generated.GrpcSetEntitySchemaWithPriceMutation getDefaultInstanceForType() {
      return io.evitadb.externalApi.grpc.generated.GrpcSetEntitySchemaWithPriceMutation.getDefaultInstance();
    }

    @java.lang.Override
    public io.evitadb.externalApi.grpc.generated.GrpcSetEntitySchemaWithPriceMutation build() {
      io.evitadb.externalApi.grpc.generated.GrpcSetEntitySchemaWithPriceMutation result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.evitadb.externalApi.grpc.generated.GrpcSetEntitySchemaWithPriceMutation buildPartial() {
      io.evitadb.externalApi.grpc.generated.GrpcSetEntitySchemaWithPriceMutation result = new io.evitadb.externalApi.grpc.generated.GrpcSetEntitySchemaWithPriceMutation(this);
      int from_bitField0_ = this.bitField0_;
      result.withPrice_ = this.withPrice_;
      result.indexedPricePlaces_ = this.indexedPricePlaces_;
      if (((this.bitField0_ & 0x00000001) != 0)) {
        this.indexedInScopes_ = java.util.Collections.unmodifiableList(this.indexedInScopes_);
        this.bitField0_ = (this.bitField0_ & ~0x00000001);
      }
      result.indexedInScopes_ = this.indexedInScopes_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.evitadb.externalApi.grpc.generated.GrpcSetEntitySchemaWithPriceMutation) {
        return mergeFrom((io.evitadb.externalApi.grpc.generated.GrpcSetEntitySchemaWithPriceMutation)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.evitadb.externalApi.grpc.generated.GrpcSetEntitySchemaWithPriceMutation other) {
      if (other == io.evitadb.externalApi.grpc.generated.GrpcSetEntitySchemaWithPriceMutation.getDefaultInstance()) return this;
      if (other.getWithPrice() != false) {
        setWithPrice(other.getWithPrice());
      }
      if (other.getIndexedPricePlaces() != 0) {
        setIndexedPricePlaces(other.getIndexedPricePlaces());
      }
      if (!other.indexedInScopes_.isEmpty()) {
        if (this.indexedInScopes_.isEmpty()) {
          this.indexedInScopes_ = other.indexedInScopes_;
          this.bitField0_ = (this.bitField0_ & ~0x00000001);
        } else {
          ensureIndexedInScopesIsMutable();
          this.indexedInScopes_.addAll(other.indexedInScopes_);
        }
        onChanged();
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      io.evitadb.externalApi.grpc.generated.GrpcSetEntitySchemaWithPriceMutation parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.evitadb.externalApi.grpc.generated.GrpcSetEntitySchemaWithPriceMutation) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private boolean withPrice_ ;
    /**
     * <pre>
     * Whether entities of this type holds price information.
     * Prices are specific to a very few entities, but because correct price computation is very complex in e-commerce
     * systems and highly affects performance of the entities filtering and sorting, they deserve first class support
     * in entity model. It is pretty common in B2B systems single product has assigned dozens of prices for the different
     * customers.
     * Specifying prices on entity allows usage of `priceValidIn`, `priceInCurrency`
     * `priceBetween`, and `priceInPriceLists` filtering constraints and also price
     * ordering of the entities. Additional requirements
     * `priceHistogram` and `priceType` can be used in query as well.
     * </pre>
     *
     * <code>bool withPrice = 1;</code>
     * @return The withPrice.
     */
    @java.lang.Override
    public boolean getWithPrice() {
      return this.withPrice_;
    }
    /**
     * <pre>
     * Whether entities of this type holds price information.
     * Prices are specific to a very few entities, but because correct price computation is very complex in e-commerce
     * systems and highly affects performance of the entities filtering and sorting, they deserve first class support
     * in entity model. It is pretty common in B2B systems single product has assigned dozens of prices for the different
     * customers.
     * Specifying prices on entity allows usage of `priceValidIn`, `priceInCurrency`
     * `priceBetween`, and `priceInPriceLists` filtering constraints and also price
     * ordering of the entities. Additional requirements
     * `priceHistogram` and `priceType` can be used in query as well.
     * </pre>
     *
     * <code>bool withPrice = 1;</code>
     * @param value The withPrice to set.
     * @return This builder for chaining.
     */
    public Builder setWithPrice(boolean value) {

      this.withPrice_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Whether entities of this type holds price information.
     * Prices are specific to a very few entities, but because correct price computation is very complex in e-commerce
     * systems and highly affects performance of the entities filtering and sorting, they deserve first class support
     * in entity model. It is pretty common in B2B systems single product has assigned dozens of prices for the different
     * customers.
     * Specifying prices on entity allows usage of `priceValidIn`, `priceInCurrency`
     * `priceBetween`, and `priceInPriceLists` filtering constraints and also price
     * ordering of the entities. Additional requirements
     * `priceHistogram` and `priceType` can be used in query as well.
     * </pre>
     *
     * <code>bool withPrice = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearWithPrice() {

      this.withPrice_ = false;
      onChanged();
      return this;
    }

    private int indexedPricePlaces_ ;
    /**
     * <pre>
     * Determines how many fractional places are important when entities are compared during filtering or sorting. It is
     * important to know that all prices will be converted to `Integer`, so any of the price values
     * (either with or without tax) must not ever exceed maximum limits of `Integer` type when scaling
     * the number by the power of ten using `indexedPricePlaces` as exponent.
     * </pre>
     *
     * <code>int32 indexedPricePlaces = 2;</code>
     * @return The indexedPricePlaces.
     */
    @java.lang.Override
    public int getIndexedPricePlaces() {
      return this.indexedPricePlaces_;
    }
    /**
     * <pre>
     * Determines how many fractional places are important when entities are compared during filtering or sorting. It is
     * important to know that all prices will be converted to `Integer`, so any of the price values
     * (either with or without tax) must not ever exceed maximum limits of `Integer` type when scaling
     * the number by the power of ten using `indexedPricePlaces` as exponent.
     * </pre>
     *
     * <code>int32 indexedPricePlaces = 2;</code>
     * @param value The indexedPricePlaces to set.
     * @return This builder for chaining.
     */
    public Builder setIndexedPricePlaces(int value) {

      this.indexedPricePlaces_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Determines how many fractional places are important when entities are compared during filtering or sorting. It is
     * important to know that all prices will be converted to `Integer`, so any of the price values
     * (either with or without tax) must not ever exceed maximum limits of `Integer` type when scaling
     * the number by the power of ten using `indexedPricePlaces` as exponent.
     * </pre>
     *
     * <code>int32 indexedPricePlaces = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearIndexedPricePlaces() {

      this.indexedPricePlaces_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Integer> indexedInScopes_ =
      java.util.Collections.emptyList();
    private void ensureIndexedInScopesIsMutable() {
      if (!((this.bitField0_ & 0x00000001) != 0)) {
        this.indexedInScopes_ = new java.util.ArrayList<java.lang.Integer>(this.indexedInScopes_);
        this.bitField0_ |= 0x00000001;
      }
    }
    /**
     * <pre>
     * Contains set of all scopes the price information is indexed in and can be used for filtering entities and computation
     * of extra data. If the price information is not indexed, it is still available on the entity itself (i.e. entity
     * can define its price), but it is not possible to work with the price information in any other way (calculating
     * price histogram, filtering, sorting by price, etc.).
     * Prices can be also set as non-indexed individually by setting {&#64;link PriceContract#indexed()} to false.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope indexedInScopes = 3;</code>
     * @return A list containing the indexedInScopes.
     */
    public java.util.List<io.evitadb.externalApi.grpc.generated.GrpcEntityScope> getIndexedInScopesList() {
      return new com.google.protobuf.Internal.ListAdapter<
          java.lang.Integer, io.evitadb.externalApi.grpc.generated.GrpcEntityScope>(this.indexedInScopes_, indexedInScopes_converter_);
    }
    /**
     * <pre>
     * Contains set of all scopes the price information is indexed in and can be used for filtering entities and computation
     * of extra data. If the price information is not indexed, it is still available on the entity itself (i.e. entity
     * can define its price), but it is not possible to work with the price information in any other way (calculating
     * price histogram, filtering, sorting by price, etc.).
     * Prices can be also set as non-indexed individually by setting {&#64;link PriceContract#indexed()} to false.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope indexedInScopes = 3;</code>
     * @return The count of indexedInScopes.
     */
    public int getIndexedInScopesCount() {
      return this.indexedInScopes_.size();
    }
    /**
     * <pre>
     * Contains set of all scopes the price information is indexed in and can be used for filtering entities and computation
     * of extra data. If the price information is not indexed, it is still available on the entity itself (i.e. entity
     * can define its price), but it is not possible to work with the price information in any other way (calculating
     * price histogram, filtering, sorting by price, etc.).
     * Prices can be also set as non-indexed individually by setting {&#64;link PriceContract#indexed()} to false.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope indexedInScopes = 3;</code>
     * @param index The index of the element to return.
     * @return The indexedInScopes at the given index.
     */
    public io.evitadb.externalApi.grpc.generated.GrpcEntityScope getIndexedInScopes(int index) {
      return indexedInScopes_converter_.convert(this.indexedInScopes_.get(index));
    }
    /**
     * <pre>
     * Contains set of all scopes the price information is indexed in and can be used for filtering entities and computation
     * of extra data. If the price information is not indexed, it is still available on the entity itself (i.e. entity
     * can define its price), but it is not possible to work with the price information in any other way (calculating
     * price histogram, filtering, sorting by price, etc.).
     * Prices can be also set as non-indexed individually by setting {&#64;link PriceContract#indexed()} to false.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope indexedInScopes = 3;</code>
     * @param index The index to set the value at.
     * @param value The indexedInScopes to set.
     * @return This builder for chaining.
     */
    public Builder setIndexedInScopes(
        int index, io.evitadb.externalApi.grpc.generated.GrpcEntityScope value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureIndexedInScopesIsMutable();
      this.indexedInScopes_.set(index, value.getNumber());
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Contains set of all scopes the price information is indexed in and can be used for filtering entities and computation
     * of extra data. If the price information is not indexed, it is still available on the entity itself (i.e. entity
     * can define its price), but it is not possible to work with the price information in any other way (calculating
     * price histogram, filtering, sorting by price, etc.).
     * Prices can be also set as non-indexed individually by setting {&#64;link PriceContract#indexed()} to false.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope indexedInScopes = 3;</code>
     * @param value The indexedInScopes to add.
     * @return This builder for chaining.
     */
    public Builder addIndexedInScopes(io.evitadb.externalApi.grpc.generated.GrpcEntityScope value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureIndexedInScopesIsMutable();
      this.indexedInScopes_.add(value.getNumber());
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Contains set of all scopes the price information is indexed in and can be used for filtering entities and computation
     * of extra data. If the price information is not indexed, it is still available on the entity itself (i.e. entity
     * can define its price), but it is not possible to work with the price information in any other way (calculating
     * price histogram, filtering, sorting by price, etc.).
     * Prices can be also set as non-indexed individually by setting {&#64;link PriceContract#indexed()} to false.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope indexedInScopes = 3;</code>
     * @param values The indexedInScopes to add.
     * @return This builder for chaining.
     */
    public Builder addAllIndexedInScopes(
        java.lang.Iterable<? extends io.evitadb.externalApi.grpc.generated.GrpcEntityScope> values) {
      ensureIndexedInScopesIsMutable();
      for (io.evitadb.externalApi.grpc.generated.GrpcEntityScope value : values) {
        this.indexedInScopes_.add(value.getNumber());
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Contains set of all scopes the price information is indexed in and can be used for filtering entities and computation
     * of extra data. If the price information is not indexed, it is still available on the entity itself (i.e. entity
     * can define its price), but it is not possible to work with the price information in any other way (calculating
     * price histogram, filtering, sorting by price, etc.).
     * Prices can be also set as non-indexed individually by setting {&#64;link PriceContract#indexed()} to false.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope indexedInScopes = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearIndexedInScopes() {
      this.indexedInScopes_ = java.util.Collections.emptyList();
      this.bitField0_ = (this.bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Contains set of all scopes the price information is indexed in and can be used for filtering entities and computation
     * of extra data. If the price information is not indexed, it is still available on the entity itself (i.e. entity
     * can define its price), but it is not possible to work with the price information in any other way (calculating
     * price histogram, filtering, sorting by price, etc.).
     * Prices can be also set as non-indexed individually by setting {&#64;link PriceContract#indexed()} to false.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope indexedInScopes = 3;</code>
     * @return A list containing the enum numeric values on the wire for indexedInScopes.
     */
    public java.util.List<java.lang.Integer>
    getIndexedInScopesValueList() {
      return java.util.Collections.unmodifiableList(this.indexedInScopes_);
    }
    /**
     * <pre>
     * Contains set of all scopes the price information is indexed in and can be used for filtering entities and computation
     * of extra data. If the price information is not indexed, it is still available on the entity itself (i.e. entity
     * can define its price), but it is not possible to work with the price information in any other way (calculating
     * price histogram, filtering, sorting by price, etc.).
     * Prices can be also set as non-indexed individually by setting {&#64;link PriceContract#indexed()} to false.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope indexedInScopes = 3;</code>
     * @param index The index of the value to return.
     * @return The enum numeric value on the wire of indexedInScopes at the given index.
     */
    public int getIndexedInScopesValue(int index) {
      return this.indexedInScopes_.get(index);
    }
    /**
     * <pre>
     * Contains set of all scopes the price information is indexed in and can be used for filtering entities and computation
     * of extra data. If the price information is not indexed, it is still available on the entity itself (i.e. entity
     * can define its price), but it is not possible to work with the price information in any other way (calculating
     * price histogram, filtering, sorting by price, etc.).
     * Prices can be also set as non-indexed individually by setting {&#64;link PriceContract#indexed()} to false.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope indexedInScopes = 3;</code>
     * @param index The index of the value to return.
     * @return The enum numeric value on the wire of indexedInScopes at the given index.
     * @return This builder for chaining.
     */
    public Builder setIndexedInScopesValue(
        int index, int value) {
      ensureIndexedInScopesIsMutable();
      this.indexedInScopes_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Contains set of all scopes the price information is indexed in and can be used for filtering entities and computation
     * of extra data. If the price information is not indexed, it is still available on the entity itself (i.e. entity
     * can define its price), but it is not possible to work with the price information in any other way (calculating
     * price histogram, filtering, sorting by price, etc.).
     * Prices can be also set as non-indexed individually by setting {&#64;link PriceContract#indexed()} to false.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope indexedInScopes = 3;</code>
     * @param value The enum numeric value on the wire for indexedInScopes to add.
     * @return This builder for chaining.
     */
    public Builder addIndexedInScopesValue(int value) {
      ensureIndexedInScopesIsMutable();
      this.indexedInScopes_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Contains set of all scopes the price information is indexed in and can be used for filtering entities and computation
     * of extra data. If the price information is not indexed, it is still available on the entity itself (i.e. entity
     * can define its price), but it is not possible to work with the price information in any other way (calculating
     * price histogram, filtering, sorting by price, etc.).
     * Prices can be also set as non-indexed individually by setting {&#64;link PriceContract#indexed()} to false.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope indexedInScopes = 3;</code>
     * @param values The enum numeric values on the wire for indexedInScopes to add.
     * @return This builder for chaining.
     */
    public Builder addAllIndexedInScopesValue(
        java.lang.Iterable<java.lang.Integer> values) {
      ensureIndexedInScopesIsMutable();
      for (int value : values) {
        this.indexedInScopes_.add(value);
      }
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:io.evitadb.externalApi.grpc.generated.GrpcSetEntitySchemaWithPriceMutation)
  }

  // @@protoc_insertion_point(class_scope:io.evitadb.externalApi.grpc.generated.GrpcSetEntitySchemaWithPriceMutation)
  private static final io.evitadb.externalApi.grpc.generated.GrpcSetEntitySchemaWithPriceMutation DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.evitadb.externalApi.grpc.generated.GrpcSetEntitySchemaWithPriceMutation();
  }

  public static io.evitadb.externalApi.grpc.generated.GrpcSetEntitySchemaWithPriceMutation getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<GrpcSetEntitySchemaWithPriceMutation>
      PARSER = new com.google.protobuf.AbstractParser<GrpcSetEntitySchemaWithPriceMutation>() {
    @java.lang.Override
    public GrpcSetEntitySchemaWithPriceMutation parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new GrpcSetEntitySchemaWithPriceMutation(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<GrpcSetEntitySchemaWithPriceMutation> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<GrpcSetEntitySchemaWithPriceMutation> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.evitadb.externalApi.grpc.generated.GrpcSetEntitySchemaWithPriceMutation getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

