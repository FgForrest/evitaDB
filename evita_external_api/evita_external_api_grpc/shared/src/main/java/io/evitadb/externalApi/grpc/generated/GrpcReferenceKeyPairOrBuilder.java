/*
 *
 *                         _ _        ____  ____
 *               _____   _(_) |_ __ _|  _ \| __ )
 *              / _ \ \ / / | __/ _` | | | |  _ \
 *             |  __/\ V /| | || (_| | |_| | |_) |
 *              \___| \_/ |_|\__\__,_|____/|____/
 *
 *   Copyright (c) 2023-2025
 *
 *   Licensed under the Business Source License, Version 1.1 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *   https://github.com/FgForrest/evitaDB/blob/master/LICENSE
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GrpcEntity.proto

// Protobuf Java Version: 3.25.8
package io.evitadb.externalApi.grpc.generated;

public interface GrpcReferenceKeyPairOrBuilder extends
    // @@protoc_insertion_point(interface_extends:io.evitadb.externalApi.grpc.generated.GrpcReferenceKeyPair)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Name of the reference (e.g., "category", "brand").
   * References the reference schema name that defines the type of relationship.
   * </pre>
   *
   * <code>string referenceName = 1;</code>
   * @return The referenceName.
   */
  java.lang.String getReferenceName();
  /**
   * <pre>
   * Name of the reference (e.g., "category", "brand").
   * References the reference schema name that defines the type of relationship.
   * </pre>
   *
   * <code>string referenceName = 1;</code>
   * @return The bytes for referenceName.
   */
  com.google.protobuf.ByteString
      getReferenceNameBytes();

  /**
   * <pre>
   * Primary key of the referenced entity.
   * May be either an evitaDB entity primary key or an external resource identifier.
   * </pre>
   *
   * <code>int32 primaryKey = 2;</code>
   * @return The primaryKey.
   */
  int getPrimaryKey();

  /**
   * <pre>
   * Original reference key with temporary internal primary key (negative number).
   * </pre>
   *
   * <code>int32 originalInternalPrimaryKey = 3;</code>
   * @return The originalInternalPrimaryKey.
   */
  int getOriginalInternalPrimaryKey();

  /**
   * <pre>
   * Reassigned reference key with permanent internal primary key (positive number) assigned by the server.
   * </pre>
   *
   * <code>int32 reassignedInternalPrimaryKey = 4;</code>
   * @return The reassignedInternalPrimaryKey.
   */
  int getReassignedInternalPrimaryKey();
}
