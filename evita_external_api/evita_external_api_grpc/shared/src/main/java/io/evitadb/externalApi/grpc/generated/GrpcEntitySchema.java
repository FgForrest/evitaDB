/*
 *
 *                         _ _        ____  ____
 *               _____   _(_) |_ __ _|  _ \| __ )
 *              / _ \ \ / / | __/ _` | | | |  _ \
 *             |  __/\ V /| | || (_| | |_| | |_) |
 *              \___| \_/ |_|\__\__,_|____/|____/
 *
 *   Copyright (c) 2023-2025
 *
 *   Licensed under the Business Source License, Version 1.1 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *   https://github.com/FgForrest/evitaDB/blob/master/LICENSE
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GrpcEntitySchema.proto

package io.evitadb.externalApi.grpc.generated;

/**
 * <pre>
 * This is the definition object for entity. Definition objects allow to describe the structure
 * of the entity type so that in any time everyone can consult complete structure of the entity type.
 * Based on our experience we've designed following data model for handling entities in evitaDB. Model is rather complex
 * but was designed to limit amount of data fetched from database and minimize an amount of data that are indexed and subject
 * to search.
 * Minimal entity definition consists of:
 * - entity type and
 * - primary key (even this is optional and may be autogenerated by the database).
 * Other entity data is purely optional and may not be used at all.
 * </pre>
 *
 * Protobuf type {@code io.evitadb.externalApi.grpc.generated.GrpcEntitySchema}
 */
public final class GrpcEntitySchema extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:io.evitadb.externalApi.grpc.generated.GrpcEntitySchema)
    GrpcEntitySchemaOrBuilder {
private static final long serialVersionUID = 0L;
  // Use GrpcEntitySchema.newBuilder() to construct.
  private GrpcEntitySchema(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private GrpcEntitySchema() {
    this.name_ = "";
    this.locales_ = java.util.Collections.emptyList();
    this.currencies_ = java.util.Collections.emptyList();
    this.evolutionMode_ = java.util.Collections.emptyList();
    this.nameVariant_ = java.util.Collections.emptyList();
    this.hierarchyIndexedInScopes_ = java.util.Collections.emptyList();
    this.priceIndexedInScopes_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new GrpcEntitySchema();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private GrpcEntitySchema(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            this.name_ = s;
            break;
          }
          case 16: {

            this.version_ = input.readInt32();
            break;
          }
          case 26: {
            com.google.protobuf.StringValue.Builder subBuilder = null;
            if (this.description_ != null) {
              subBuilder = this.description_.toBuilder();
            }
            this.description_ = input.readMessage(com.google.protobuf.StringValue.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(this.description_);
              this.description_ = subBuilder.buildPartial();
            }

            break;
          }
          case 34: {
            com.google.protobuf.StringValue.Builder subBuilder = null;
            if (this.deprecationNotice_ != null) {
              subBuilder = this.deprecationNotice_.toBuilder();
            }
            this.deprecationNotice_ = input.readMessage(com.google.protobuf.StringValue.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(this.deprecationNotice_);
              this.deprecationNotice_ = subBuilder.buildPartial();
            }

            break;
          }
          case 40: {

            this.withGeneratedPrimaryKey_ = input.readBool();
            break;
          }
          case 48: {

            this.withHierarchy_ = input.readBool();
            break;
          }
          case 56: {

            this.withPrice_ = input.readBool();
            break;
          }
          case 64: {

            this.indexedPricePlaces_ = input.readInt32();
            break;
          }
          case 74: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              this.locales_ = new java.util.ArrayList<io.evitadb.externalApi.grpc.generated.GrpcLocale>();
              mutable_bitField0_ |= 0x00000001;
            }
            this.locales_.add(
                input.readMessage(io.evitadb.externalApi.grpc.generated.GrpcLocale.parser(), extensionRegistry));
            break;
          }
          case 82: {
            if (!((mutable_bitField0_ & 0x00000002) != 0)) {
              this.currencies_ = new java.util.ArrayList<io.evitadb.externalApi.grpc.generated.GrpcCurrency>();
              mutable_bitField0_ |= 0x00000002;
            }
            this.currencies_.add(
                input.readMessage(io.evitadb.externalApi.grpc.generated.GrpcCurrency.parser(), extensionRegistry));
            break;
          }
          case 90: {
            if (!((mutable_bitField0_ & 0x00000004) != 0)) {
              this.attributes_ = com.google.protobuf.MapField.newMapField(
                  AttributesDefaultEntryHolder.defaultEntry);
              mutable_bitField0_ |= 0x00000004;
            }
            com.google.protobuf.MapEntry<java.lang.String, io.evitadb.externalApi.grpc.generated.GrpcAttributeSchema>
            attributes__ = input.readMessage(
                AttributesDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
            this.attributes_.getMutableMap().put(
                attributes__.getKey(), attributes__.getValue());
            break;
          }
          case 98: {
            if (!((mutable_bitField0_ & 0x00000008) != 0)) {
              this.associatedData_ = com.google.protobuf.MapField.newMapField(
                  AssociatedDataDefaultEntryHolder.defaultEntry);
              mutable_bitField0_ |= 0x00000008;
            }
            com.google.protobuf.MapEntry<java.lang.String, io.evitadb.externalApi.grpc.generated.GrpcAssociatedDataSchema>
            associatedData__ = input.readMessage(
                AssociatedDataDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
            this.associatedData_.getMutableMap().put(
                associatedData__.getKey(), associatedData__.getValue());
            break;
          }
          case 106: {
            if (!((mutable_bitField0_ & 0x00000010) != 0)) {
              this.references_ = com.google.protobuf.MapField.newMapField(
                  ReferencesDefaultEntryHolder.defaultEntry);
              mutable_bitField0_ |= 0x00000010;
            }
            com.google.protobuf.MapEntry<java.lang.String, io.evitadb.externalApi.grpc.generated.GrpcReferenceSchema>
            references__ = input.readMessage(
                ReferencesDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
            this.references_.getMutableMap().put(
                references__.getKey(), references__.getValue());
            break;
          }
          case 112: {
            int rawValue = input.readEnum();
            if (!((mutable_bitField0_ & 0x00000020) != 0)) {
              this.evolutionMode_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField0_ |= 0x00000020;
            }
            this.evolutionMode_.add(rawValue);
            break;
          }
          case 114: {
            int length = input.readRawVarint32();
            int oldLimit = input.pushLimit(length);
            while(input.getBytesUntilLimit() > 0) {
              int rawValue = input.readEnum();
              if (!((mutable_bitField0_ & 0x00000020) != 0)) {
                this.evolutionMode_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              this.evolutionMode_.add(rawValue);
            }
            input.popLimit(oldLimit);
            break;
          }
          case 122: {
            if (!((mutable_bitField0_ & 0x00000040) != 0)) {
              this.sortableAttributeCompounds_ = com.google.protobuf.MapField.newMapField(
                  SortableAttributeCompoundsDefaultEntryHolder.defaultEntry);
              mutable_bitField0_ |= 0x00000040;
            }
            com.google.protobuf.MapEntry<java.lang.String, io.evitadb.externalApi.grpc.generated.GrpcSortableAttributeCompoundSchema>
            sortableAttributeCompounds__ = input.readMessage(
                SortableAttributeCompoundsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
            this.sortableAttributeCompounds_.getMutableMap().put(
                sortableAttributeCompounds__.getKey(), sortableAttributeCompounds__.getValue());
            break;
          }
          case 130: {
            if (!((mutable_bitField0_ & 0x00000080) != 0)) {
              this.nameVariant_ = new java.util.ArrayList<io.evitadb.externalApi.grpc.generated.GrpcNameVariant>();
              mutable_bitField0_ |= 0x00000080;
            }
            this.nameVariant_.add(
                input.readMessage(io.evitadb.externalApi.grpc.generated.GrpcNameVariant.parser(), extensionRegistry));
            break;
          }
          case 136: {
            int rawValue = input.readEnum();
            if (!((mutable_bitField0_ & 0x00000100) != 0)) {
              this.hierarchyIndexedInScopes_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField0_ |= 0x00000100;
            }
            this.hierarchyIndexedInScopes_.add(rawValue);
            break;
          }
          case 138: {
            int length = input.readRawVarint32();
            int oldLimit = input.pushLimit(length);
            while(input.getBytesUntilLimit() > 0) {
              int rawValue = input.readEnum();
              if (!((mutable_bitField0_ & 0x00000100) != 0)) {
                this.hierarchyIndexedInScopes_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000100;
              }
              this.hierarchyIndexedInScopes_.add(rawValue);
            }
            input.popLimit(oldLimit);
            break;
          }
          case 144: {
            int rawValue = input.readEnum();
            if (!((mutable_bitField0_ & 0x00000200) != 0)) {
              this.priceIndexedInScopes_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField0_ |= 0x00000200;
            }
            this.priceIndexedInScopes_.add(rawValue);
            break;
          }
          case 146: {
            int length = input.readRawVarint32();
            int oldLimit = input.pushLimit(length);
            while(input.getBytesUntilLimit() > 0) {
              int rawValue = input.readEnum();
              if (!((mutable_bitField0_ & 0x00000200) != 0)) {
                this.priceIndexedInScopes_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000200;
              }
              this.priceIndexedInScopes_.add(rawValue);
            }
            input.popLimit(oldLimit);
            break;
          }
          case 152: {

            this.catalogSchemaVersion_ = input.readInt64();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        this.locales_ = java.util.Collections.unmodifiableList(this.locales_);
      }
      if (((mutable_bitField0_ & 0x00000002) != 0)) {
        this.currencies_ = java.util.Collections.unmodifiableList(this.currencies_);
      }
      if (((mutable_bitField0_ & 0x00000020) != 0)) {
        this.evolutionMode_ = java.util.Collections.unmodifiableList(this.evolutionMode_);
      }
      if (((mutable_bitField0_ & 0x00000080) != 0)) {
        this.nameVariant_ = java.util.Collections.unmodifiableList(this.nameVariant_);
      }
      if (((mutable_bitField0_ & 0x00000100) != 0)) {
        this.hierarchyIndexedInScopes_ = java.util.Collections.unmodifiableList(this.hierarchyIndexedInScopes_);
      }
      if (((mutable_bitField0_ & 0x00000200) != 0)) {
        this.priceIndexedInScopes_ = java.util.Collections.unmodifiableList(this.priceIndexedInScopes_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.evitadb.externalApi.grpc.generated.GrpcEntitySchemaOuterClass.internal_static_io_evitadb_externalApi_grpc_generated_GrpcEntitySchema_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  @java.lang.Override
  protected com.google.protobuf.MapField internalGetMapField(
      int number) {
    switch (number) {
      case 11:
        return internalGetAttributes();
      case 12:
        return internalGetAssociatedData();
      case 13:
        return internalGetReferences();
      case 15:
        return internalGetSortableAttributeCompounds();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.evitadb.externalApi.grpc.generated.GrpcEntitySchemaOuterClass.internal_static_io_evitadb_externalApi_grpc_generated_GrpcEntitySchema_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.evitadb.externalApi.grpc.generated.GrpcEntitySchema.class, io.evitadb.externalApi.grpc.generated.GrpcEntitySchema.Builder.class);
  }

  public static final int NAME_FIELD_NUMBER = 1;
  private volatile java.lang.Object name_;
  /**
   * <pre>
   * Contains unique name of the model. Case-sensitive. Distinguishes one model item from another
   * within single entity instance.
   * </pre>
   *
   * <code>string name = 1;</code>
   * @return The name.
   */
  @java.lang.Override
  public java.lang.String getName() {
    java.lang.Object ref = this.name_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs =
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      this.name_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Contains unique name of the model. Case-sensitive. Distinguishes one model item from another
   * within single entity instance.
   * </pre>
   *
   * <code>string name = 1;</code>
   * @return The bytes for name.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getNameBytes() {
    java.lang.Object ref = this.name_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      this.name_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int VERSION_FIELD_NUMBER = 2;
  private int version_;
  /**
   * <pre>
   * Contains version of this entity schema and gets increased with any entity type update. Allows to execute
   * optimistic locking i.e. avoiding parallel modifications.
   * </pre>
   *
   * <code>int32 version = 2;</code>
   * @return The version.
   */
  @java.lang.Override
  public int getVersion() {
    return this.version_;
  }

  public static final int DESCRIPTION_FIELD_NUMBER = 3;
  private com.google.protobuf.StringValue description_;
  /**
   * <pre>
   * Contains description of the model is optional but helps authors of the schema / client API to better
   * explain the original purpose of the model to the consumers.
   * </pre>
   *
   * <code>.google.protobuf.StringValue description = 3;</code>
   * @return Whether the description field is set.
   */
  @java.lang.Override
  public boolean hasDescription() {
    return this.description_ != null;
  }
  /**
   * <pre>
   * Contains description of the model is optional but helps authors of the schema / client API to better
   * explain the original purpose of the model to the consumers.
   * </pre>
   *
   * <code>.google.protobuf.StringValue description = 3;</code>
   * @return The description.
   */
  @java.lang.Override
  public com.google.protobuf.StringValue getDescription() {
    return this.description_ == null ? com.google.protobuf.StringValue.getDefaultInstance() : this.description_;
  }
  /**
   * <pre>
   * Contains description of the model is optional but helps authors of the schema / client API to better
   * explain the original purpose of the model to the consumers.
   * </pre>
   *
   * <code>.google.protobuf.StringValue description = 3;</code>
   */
  @java.lang.Override
  public com.google.protobuf.StringValueOrBuilder getDescriptionOrBuilder() {
    return getDescription();
  }

  public static final int DEPRECATIONNOTICE_FIELD_NUMBER = 4;
  private com.google.protobuf.StringValue deprecationNotice_;
  /**
   * <pre>
   * Deprecation notice contains information about planned removal of this entity from the model / client API.
   * This allows to plan and evolve the schema allowing clients to adapt early to planned breaking changes.
   * If notice is `null`, this schema is considered not deprecated.
   * </pre>
   *
   * <code>.google.protobuf.StringValue deprecationNotice = 4;</code>
   * @return Whether the deprecationNotice field is set.
   */
  @java.lang.Override
  public boolean hasDeprecationNotice() {
    return this.deprecationNotice_ != null;
  }
  /**
   * <pre>
   * Deprecation notice contains information about planned removal of this entity from the model / client API.
   * This allows to plan and evolve the schema allowing clients to adapt early to planned breaking changes.
   * If notice is `null`, this schema is considered not deprecated.
   * </pre>
   *
   * <code>.google.protobuf.StringValue deprecationNotice = 4;</code>
   * @return The deprecationNotice.
   */
  @java.lang.Override
  public com.google.protobuf.StringValue getDeprecationNotice() {
    return this.deprecationNotice_ == null ? com.google.protobuf.StringValue.getDefaultInstance() : this.deprecationNotice_;
  }
  /**
   * <pre>
   * Deprecation notice contains information about planned removal of this entity from the model / client API.
   * This allows to plan and evolve the schema allowing clients to adapt early to planned breaking changes.
   * If notice is `null`, this schema is considered not deprecated.
   * </pre>
   *
   * <code>.google.protobuf.StringValue deprecationNotice = 4;</code>
   */
  @java.lang.Override
  public com.google.protobuf.StringValueOrBuilder getDeprecationNoticeOrBuilder() {
    return getDeprecationNotice();
  }

  public static final int WITHGENERATEDPRIMARYKEY_FIELD_NUMBER = 5;
  private boolean withGeneratedPrimaryKey_;
  /**
   * <pre>
   * Contains `true` when primary keys of entities of this type will not be provided by the external systems and Evita
   * is responsible for generating unique primary keys for the entity on insertion.
   * Generated key is guaranteed to be unique, but may not represent continuous ascending series. Generated key
   * will be always greater than zero.
   * </pre>
   *
   * <code>bool withGeneratedPrimaryKey = 5;</code>
   * @return The withGeneratedPrimaryKey.
   */
  @java.lang.Override
  public boolean getWithGeneratedPrimaryKey() {
    return this.withGeneratedPrimaryKey_;
  }

  public static final int WITHHIERARCHY_FIELD_NUMBER = 6;
  private boolean withHierarchy_;
  /**
   * <pre>
   * Contains `true` when entities of this type are organized in a tree like structure (hierarchy) where certain entities
   * are subordinate of other entities.
   * Entities may be organized in hierarchical fashion. That means that entity may refer to single parent entity and may be
   * referred by multiple child entities. Hierarchy is always composed of entities of same type.
   * Each entity must be part of at most single hierarchy (tree).
   * Hierarchy can limit returned entities by using filtering constraints. It's also used for
   * computation of extra data - such as `hierarchyParentsOfSelf`. It can also invert type of returned entities in case extra result
   * `hierarchyOfSelf` is requested.
   * </pre>
   *
   * <code>bool withHierarchy = 6;</code>
   * @return The withHierarchy.
   */
  @java.lang.Override
  public boolean getWithHierarchy() {
    return this.withHierarchy_;
  }

  public static final int WITHPRICE_FIELD_NUMBER = 7;
  private boolean withPrice_;
  /**
   * <pre>
   * Contains `true` when entities of this type holds price information.
   * Prices are specific to a very few entities, but because correct price computation is very complex in e-commerce
   * systems and highly affects performance of the entities filtering and sorting, they deserve first class support
   * in entity model. It is pretty common in B2B systems single product has assigned dozens of prices for the different
   * customers.
   * Specifying prices on entity allows usage of `priceValidIn`, `priceInCurrency`
   * `priceBetween`, and `priceInPriceLists` filtering constraints and also `priceNatural`,
   * ordering of the entities. Additional extra result
   * `priceHistogram` and requirement `priceType` can be used in query as well.
   * </pre>
   *
   * <code>bool withPrice = 7;</code>
   * @return The withPrice.
   */
  @java.lang.Override
  public boolean getWithPrice() {
    return this.withPrice_;
  }

  public static final int INDEXEDPRICEPLACES_FIELD_NUMBER = 8;
  private int indexedPricePlaces_;
  /**
   * <pre>
   * Determines how many fractional places are important when entities are compared during filtering or sorting. It is
   * important to know that all prices will be converted to `Int`, so any of the price values
   * (either with or without tax) must not ever exceed maximum limits of `Int` type when scaling
   * the number by the power of ten using `indexedPricePlaces` as exponent.
   * </pre>
   *
   * <code>int32 indexedPricePlaces = 8;</code>
   * @return The indexedPricePlaces.
   */
  @java.lang.Override
  public int getIndexedPricePlaces() {
    return this.indexedPricePlaces_;
  }

  public static final int LOCALES_FIELD_NUMBER = 9;
  private java.util.List<io.evitadb.externalApi.grpc.generated.GrpcLocale> locales_;
  /**
   * <pre>
   * Contains set of all `Locale` that could be used for localized `AttributeSchema` or `AssociatedDataSchema`.
   * Enables using `entityLocaleEquals` filtering constraint in query.
   * </pre>
   *
   * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcLocale locales = 9;</code>
   */
  @java.lang.Override
  public java.util.List<io.evitadb.externalApi.grpc.generated.GrpcLocale> getLocalesList() {
    return this.locales_;
  }
  /**
   * <pre>
   * Contains set of all `Locale` that could be used for localized `AttributeSchema` or `AssociatedDataSchema`.
   * Enables using `entityLocaleEquals` filtering constraint in query.
   * </pre>
   *
   * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcLocale locales = 9;</code>
   */
  @java.lang.Override
  public java.util.List<? extends io.evitadb.externalApi.grpc.generated.GrpcLocaleOrBuilder>
      getLocalesOrBuilderList() {
    return this.locales_;
  }
  /**
   * <pre>
   * Contains set of all `Locale` that could be used for localized `AttributeSchema` or `AssociatedDataSchema`.
   * Enables using `entityLocaleEquals` filtering constraint in query.
   * </pre>
   *
   * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcLocale locales = 9;</code>
   */
  @java.lang.Override
  public int getLocalesCount() {
    return this.locales_.size();
  }
  /**
   * <pre>
   * Contains set of all `Locale` that could be used for localized `AttributeSchema` or `AssociatedDataSchema`.
   * Enables using `entityLocaleEquals` filtering constraint in query.
   * </pre>
   *
   * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcLocale locales = 9;</code>
   */
  @java.lang.Override
  public io.evitadb.externalApi.grpc.generated.GrpcLocale getLocales(int index) {
    return this.locales_.get(index);
  }
  /**
   * <pre>
   * Contains set of all `Locale` that could be used for localized `AttributeSchema` or `AssociatedDataSchema`.
   * Enables using `entityLocaleEquals` filtering constraint in query.
   * </pre>
   *
   * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcLocale locales = 9;</code>
   */
  @java.lang.Override
  public io.evitadb.externalApi.grpc.generated.GrpcLocaleOrBuilder getLocalesOrBuilder(
      int index) {
    return this.locales_.get(index);
  }

  public static final int CURRENCIES_FIELD_NUMBER = 10;
  private java.util.List<io.evitadb.externalApi.grpc.generated.GrpcCurrency> currencies_;
  /**
   * <pre>
   * Contains set of all `Currency` that could be used for `prices` in entities of this type.
   * </pre>
   *
   * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcCurrency currencies = 10;</code>
   */
  @java.lang.Override
  public java.util.List<io.evitadb.externalApi.grpc.generated.GrpcCurrency> getCurrenciesList() {
    return this.currencies_;
  }
  /**
   * <pre>
   * Contains set of all `Currency` that could be used for `prices` in entities of this type.
   * </pre>
   *
   * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcCurrency currencies = 10;</code>
   */
  @java.lang.Override
  public java.util.List<? extends io.evitadb.externalApi.grpc.generated.GrpcCurrencyOrBuilder>
      getCurrenciesOrBuilderList() {
    return this.currencies_;
  }
  /**
   * <pre>
   * Contains set of all `Currency` that could be used for `prices` in entities of this type.
   * </pre>
   *
   * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcCurrency currencies = 10;</code>
   */
  @java.lang.Override
  public int getCurrenciesCount() {
    return this.currencies_.size();
  }
  /**
   * <pre>
   * Contains set of all `Currency` that could be used for `prices` in entities of this type.
   * </pre>
   *
   * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcCurrency currencies = 10;</code>
   */
  @java.lang.Override
  public io.evitadb.externalApi.grpc.generated.GrpcCurrency getCurrencies(int index) {
    return this.currencies_.get(index);
  }
  /**
   * <pre>
   * Contains set of all `Currency` that could be used for `prices` in entities of this type.
   * </pre>
   *
   * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcCurrency currencies = 10;</code>
   */
  @java.lang.Override
  public io.evitadb.externalApi.grpc.generated.GrpcCurrencyOrBuilder getCurrenciesOrBuilder(
      int index) {
    return this.currencies_.get(index);
  }

  public static final int ATTRIBUTES_FIELD_NUMBER = 11;
  private static final class AttributesDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, io.evitadb.externalApi.grpc.generated.GrpcAttributeSchema> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, io.evitadb.externalApi.grpc.generated.GrpcAttributeSchema>newDefaultInstance(
                io.evitadb.externalApi.grpc.generated.GrpcEntitySchemaOuterClass.internal_static_io_evitadb_externalApi_grpc_generated_GrpcEntitySchema_AttributesEntry_descriptor,
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.MESSAGE,
                io.evitadb.externalApi.grpc.generated.GrpcAttributeSchema.getDefaultInstance());
  }
  private com.google.protobuf.MapField<
      java.lang.String, io.evitadb.externalApi.grpc.generated.GrpcAttributeSchema> attributes_;
  private com.google.protobuf.MapField<java.lang.String, io.evitadb.externalApi.grpc.generated.GrpcAttributeSchema>
  internalGetAttributes() {
    if (this.attributes_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          AttributesDefaultEntryHolder.defaultEntry);
    }
    return this.attributes_;
  }

  public int getAttributesCount() {
    return internalGetAttributes().getMap().size();
  }
  /**
   * <pre>
   * Contains index of all `AttributeSchema` that could be used as attributes of entity of this type.
   * Entity (global) attributes allows defining set of data that are fetched in bulk along with the entity body.
   * Attributes may be indexed for fast filtering (`AttributeSchema.filterable`) or can be used to sort along
   * (`AttributeSchema.sortable`). Attributes are not automatically indexed in order not to waste precious
   * memory space for data that will never be used in search queries.
   * Filtering in attributes is executed by using constraints like `and`,
   * `not`, `attributeEquals`, `attributeContains`
   * and many others. Sorting can be achieved with `attributeNatural` or others.
   * Attributes are not recommended for bigger data as they are all loaded at once requested.
   * Large data that are occasionally used store in `associatedData`.
   * </pre>
   *
   * <code>map&lt;string, .io.evitadb.externalApi.grpc.generated.GrpcAttributeSchema&gt; attributes = 11;</code>
   */

  @java.lang.Override
  public boolean containsAttributes(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    return internalGetAttributes().getMap().containsKey(key);
  }
  /**
   * Use {@link #getAttributesMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, io.evitadb.externalApi.grpc.generated.GrpcAttributeSchema> getAttributes() {
    return getAttributesMap();
  }
  /**
   * <pre>
   * Contains index of all `AttributeSchema` that could be used as attributes of entity of this type.
   * Entity (global) attributes allows defining set of data that are fetched in bulk along with the entity body.
   * Attributes may be indexed for fast filtering (`AttributeSchema.filterable`) or can be used to sort along
   * (`AttributeSchema.sortable`). Attributes are not automatically indexed in order not to waste precious
   * memory space for data that will never be used in search queries.
   * Filtering in attributes is executed by using constraints like `and`,
   * `not`, `attributeEquals`, `attributeContains`
   * and many others. Sorting can be achieved with `attributeNatural` or others.
   * Attributes are not recommended for bigger data as they are all loaded at once requested.
   * Large data that are occasionally used store in `associatedData`.
   * </pre>
   *
   * <code>map&lt;string, .io.evitadb.externalApi.grpc.generated.GrpcAttributeSchema&gt; attributes = 11;</code>
   */
  @java.lang.Override

  public java.util.Map<java.lang.String, io.evitadb.externalApi.grpc.generated.GrpcAttributeSchema> getAttributesMap() {
    return internalGetAttributes().getMap();
  }
  /**
   * <pre>
   * Contains index of all `AttributeSchema` that could be used as attributes of entity of this type.
   * Entity (global) attributes allows defining set of data that are fetched in bulk along with the entity body.
   * Attributes may be indexed for fast filtering (`AttributeSchema.filterable`) or can be used to sort along
   * (`AttributeSchema.sortable`). Attributes are not automatically indexed in order not to waste precious
   * memory space for data that will never be used in search queries.
   * Filtering in attributes is executed by using constraints like `and`,
   * `not`, `attributeEquals`, `attributeContains`
   * and many others. Sorting can be achieved with `attributeNatural` or others.
   * Attributes are not recommended for bigger data as they are all loaded at once requested.
   * Large data that are occasionally used store in `associatedData`.
   * </pre>
   *
   * <code>map&lt;string, .io.evitadb.externalApi.grpc.generated.GrpcAttributeSchema&gt; attributes = 11;</code>
   */
  @java.lang.Override

  public io.evitadb.externalApi.grpc.generated.GrpcAttributeSchema getAttributesOrDefault(
      java.lang.String key,
      io.evitadb.externalApi.grpc.generated.GrpcAttributeSchema defaultValue) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, io.evitadb.externalApi.grpc.generated.GrpcAttributeSchema> map =
        internalGetAttributes().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <pre>
   * Contains index of all `AttributeSchema` that could be used as attributes of entity of this type.
   * Entity (global) attributes allows defining set of data that are fetched in bulk along with the entity body.
   * Attributes may be indexed for fast filtering (`AttributeSchema.filterable`) or can be used to sort along
   * (`AttributeSchema.sortable`). Attributes are not automatically indexed in order not to waste precious
   * memory space for data that will never be used in search queries.
   * Filtering in attributes is executed by using constraints like `and`,
   * `not`, `attributeEquals`, `attributeContains`
   * and many others. Sorting can be achieved with `attributeNatural` or others.
   * Attributes are not recommended for bigger data as they are all loaded at once requested.
   * Large data that are occasionally used store in `associatedData`.
   * </pre>
   *
   * <code>map&lt;string, .io.evitadb.externalApi.grpc.generated.GrpcAttributeSchema&gt; attributes = 11;</code>
   */
  @java.lang.Override

  public io.evitadb.externalApi.grpc.generated.GrpcAttributeSchema getAttributesOrThrow(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, io.evitadb.externalApi.grpc.generated.GrpcAttributeSchema> map =
        internalGetAttributes().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int ASSOCIATEDDATA_FIELD_NUMBER = 12;
  private static final class AssociatedDataDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, io.evitadb.externalApi.grpc.generated.GrpcAssociatedDataSchema> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, io.evitadb.externalApi.grpc.generated.GrpcAssociatedDataSchema>newDefaultInstance(
                io.evitadb.externalApi.grpc.generated.GrpcEntitySchemaOuterClass.internal_static_io_evitadb_externalApi_grpc_generated_GrpcEntitySchema_AssociatedDataEntry_descriptor,
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.MESSAGE,
                io.evitadb.externalApi.grpc.generated.GrpcAssociatedDataSchema.getDefaultInstance());
  }
  private com.google.protobuf.MapField<
      java.lang.String, io.evitadb.externalApi.grpc.generated.GrpcAssociatedDataSchema> associatedData_;
  private com.google.protobuf.MapField<java.lang.String, io.evitadb.externalApi.grpc.generated.GrpcAssociatedDataSchema>
  internalGetAssociatedData() {
    if (this.associatedData_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          AssociatedDataDefaultEntryHolder.defaultEntry);
    }
    return this.associatedData_;
  }

  public int getAssociatedDataCount() {
    return internalGetAssociatedData().getMap().size();
  }
  /**
   * <pre>
   * Contains index of all `AssociatedDataSchema` that could be used as associated data of entity of this type.
   * Associated data carry additional data entries that are never used for filtering / sorting but may be needed to be fetched
   * along with entity in order to present data to the target consumer (i.e. user / API / bot). Associated data may be stored
   * in slower storage and may contain wide range of data types - from small ones (i.e. numbers, strings, dates) up to large
   * binary arrays representing entire files (i.e. pictures, documents).
   * The search query must contain specific associated data fields in order
   * associated data are fetched along with the entity. Associated data are stored and fetched separately by their name.
   * </pre>
   *
   * <code>map&lt;string, .io.evitadb.externalApi.grpc.generated.GrpcAssociatedDataSchema&gt; associatedData = 12;</code>
   */

  @java.lang.Override
  public boolean containsAssociatedData(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    return internalGetAssociatedData().getMap().containsKey(key);
  }
  /**
   * Use {@link #getAssociatedDataMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, io.evitadb.externalApi.grpc.generated.GrpcAssociatedDataSchema> getAssociatedData() {
    return getAssociatedDataMap();
  }
  /**
   * <pre>
   * Contains index of all `AssociatedDataSchema` that could be used as associated data of entity of this type.
   * Associated data carry additional data entries that are never used for filtering / sorting but may be needed to be fetched
   * along with entity in order to present data to the target consumer (i.e. user / API / bot). Associated data may be stored
   * in slower storage and may contain wide range of data types - from small ones (i.e. numbers, strings, dates) up to large
   * binary arrays representing entire files (i.e. pictures, documents).
   * The search query must contain specific associated data fields in order
   * associated data are fetched along with the entity. Associated data are stored and fetched separately by their name.
   * </pre>
   *
   * <code>map&lt;string, .io.evitadb.externalApi.grpc.generated.GrpcAssociatedDataSchema&gt; associatedData = 12;</code>
   */
  @java.lang.Override

  public java.util.Map<java.lang.String, io.evitadb.externalApi.grpc.generated.GrpcAssociatedDataSchema> getAssociatedDataMap() {
    return internalGetAssociatedData().getMap();
  }
  /**
   * <pre>
   * Contains index of all `AssociatedDataSchema` that could be used as associated data of entity of this type.
   * Associated data carry additional data entries that are never used for filtering / sorting but may be needed to be fetched
   * along with entity in order to present data to the target consumer (i.e. user / API / bot). Associated data may be stored
   * in slower storage and may contain wide range of data types - from small ones (i.e. numbers, strings, dates) up to large
   * binary arrays representing entire files (i.e. pictures, documents).
   * The search query must contain specific associated data fields in order
   * associated data are fetched along with the entity. Associated data are stored and fetched separately by their name.
   * </pre>
   *
   * <code>map&lt;string, .io.evitadb.externalApi.grpc.generated.GrpcAssociatedDataSchema&gt; associatedData = 12;</code>
   */
  @java.lang.Override

  public io.evitadb.externalApi.grpc.generated.GrpcAssociatedDataSchema getAssociatedDataOrDefault(
      java.lang.String key,
      io.evitadb.externalApi.grpc.generated.GrpcAssociatedDataSchema defaultValue) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, io.evitadb.externalApi.grpc.generated.GrpcAssociatedDataSchema> map =
        internalGetAssociatedData().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <pre>
   * Contains index of all `AssociatedDataSchema` that could be used as associated data of entity of this type.
   * Associated data carry additional data entries that are never used for filtering / sorting but may be needed to be fetched
   * along with entity in order to present data to the target consumer (i.e. user / API / bot). Associated data may be stored
   * in slower storage and may contain wide range of data types - from small ones (i.e. numbers, strings, dates) up to large
   * binary arrays representing entire files (i.e. pictures, documents).
   * The search query must contain specific associated data fields in order
   * associated data are fetched along with the entity. Associated data are stored and fetched separately by their name.
   * </pre>
   *
   * <code>map&lt;string, .io.evitadb.externalApi.grpc.generated.GrpcAssociatedDataSchema&gt; associatedData = 12;</code>
   */
  @java.lang.Override

  public io.evitadb.externalApi.grpc.generated.GrpcAssociatedDataSchema getAssociatedDataOrThrow(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, io.evitadb.externalApi.grpc.generated.GrpcAssociatedDataSchema> map =
        internalGetAssociatedData().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int REFERENCES_FIELD_NUMBER = 13;
  private static final class ReferencesDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, io.evitadb.externalApi.grpc.generated.GrpcReferenceSchema> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, io.evitadb.externalApi.grpc.generated.GrpcReferenceSchema>newDefaultInstance(
                io.evitadb.externalApi.grpc.generated.GrpcEntitySchemaOuterClass.internal_static_io_evitadb_externalApi_grpc_generated_GrpcEntitySchema_ReferencesEntry_descriptor,
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.MESSAGE,
                io.evitadb.externalApi.grpc.generated.GrpcReferenceSchema.getDefaultInstance());
  }
  private com.google.protobuf.MapField<
      java.lang.String, io.evitadb.externalApi.grpc.generated.GrpcReferenceSchema> references_;
  private com.google.protobuf.MapField<java.lang.String, io.evitadb.externalApi.grpc.generated.GrpcReferenceSchema>
  internalGetReferences() {
    if (this.references_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          ReferencesDefaultEntryHolder.defaultEntry);
    }
    return this.references_;
  }

  public int getReferencesCount() {
    return internalGetReferences().getMap().size();
  }
  /**
   * <pre>
   * Contains index of all `ReferenceSchema` that could be used as references of entity of this type.
   * References refer to other entities (of same or different entity type).
   * Allows entity filtering (but not sorting) of the entities by using `facetInSet` constraint
   * and statistics computation when `facetStatistics` extra result is requested. Reference
   * is uniquely represented by int positive number (max. (2^63)-1) and entity type and can be
   * part of multiple reference groups, that are also represented by int and entity type.
   * Reference id in one entity is unique and belongs to single reference group id. Among multiple entities reference may be part
   * of different reference groups. Referenced entity type may represent type of another Evita entity or may refer
   * to anything unknown to Evita that posses unique int key and is maintained by external systems (fe. tag assignment,
   * group assignment, category assignment, stock assignment and so on). Not all these data needs to be present in
   * Evita.
   * References may carry additional key-value data linked to this entity relation (fe. item count present on certain stock).
   * The search query must contain specific `referenceContent` requirement in order
   * references are fetched along with the entity.
   * </pre>
   *
   * <code>map&lt;string, .io.evitadb.externalApi.grpc.generated.GrpcReferenceSchema&gt; references = 13;</code>
   */

  @java.lang.Override
  public boolean containsReferences(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    return internalGetReferences().getMap().containsKey(key);
  }
  /**
   * Use {@link #getReferencesMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, io.evitadb.externalApi.grpc.generated.GrpcReferenceSchema> getReferences() {
    return getReferencesMap();
  }
  /**
   * <pre>
   * Contains index of all `ReferenceSchema` that could be used as references of entity of this type.
   * References refer to other entities (of same or different entity type).
   * Allows entity filtering (but not sorting) of the entities by using `facetInSet` constraint
   * and statistics computation when `facetStatistics` extra result is requested. Reference
   * is uniquely represented by int positive number (max. (2^63)-1) and entity type and can be
   * part of multiple reference groups, that are also represented by int and entity type.
   * Reference id in one entity is unique and belongs to single reference group id. Among multiple entities reference may be part
   * of different reference groups. Referenced entity type may represent type of another Evita entity or may refer
   * to anything unknown to Evita that posses unique int key and is maintained by external systems (fe. tag assignment,
   * group assignment, category assignment, stock assignment and so on). Not all these data needs to be present in
   * Evita.
   * References may carry additional key-value data linked to this entity relation (fe. item count present on certain stock).
   * The search query must contain specific `referenceContent` requirement in order
   * references are fetched along with the entity.
   * </pre>
   *
   * <code>map&lt;string, .io.evitadb.externalApi.grpc.generated.GrpcReferenceSchema&gt; references = 13;</code>
   */
  @java.lang.Override

  public java.util.Map<java.lang.String, io.evitadb.externalApi.grpc.generated.GrpcReferenceSchema> getReferencesMap() {
    return internalGetReferences().getMap();
  }
  /**
   * <pre>
   * Contains index of all `ReferenceSchema` that could be used as references of entity of this type.
   * References refer to other entities (of same or different entity type).
   * Allows entity filtering (but not sorting) of the entities by using `facetInSet` constraint
   * and statistics computation when `facetStatistics` extra result is requested. Reference
   * is uniquely represented by int positive number (max. (2^63)-1) and entity type and can be
   * part of multiple reference groups, that are also represented by int and entity type.
   * Reference id in one entity is unique and belongs to single reference group id. Among multiple entities reference may be part
   * of different reference groups. Referenced entity type may represent type of another Evita entity or may refer
   * to anything unknown to Evita that posses unique int key and is maintained by external systems (fe. tag assignment,
   * group assignment, category assignment, stock assignment and so on). Not all these data needs to be present in
   * Evita.
   * References may carry additional key-value data linked to this entity relation (fe. item count present on certain stock).
   * The search query must contain specific `referenceContent` requirement in order
   * references are fetched along with the entity.
   * </pre>
   *
   * <code>map&lt;string, .io.evitadb.externalApi.grpc.generated.GrpcReferenceSchema&gt; references = 13;</code>
   */
  @java.lang.Override

  public io.evitadb.externalApi.grpc.generated.GrpcReferenceSchema getReferencesOrDefault(
      java.lang.String key,
      io.evitadb.externalApi.grpc.generated.GrpcReferenceSchema defaultValue) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, io.evitadb.externalApi.grpc.generated.GrpcReferenceSchema> map =
        internalGetReferences().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <pre>
   * Contains index of all `ReferenceSchema` that could be used as references of entity of this type.
   * References refer to other entities (of same or different entity type).
   * Allows entity filtering (but not sorting) of the entities by using `facetInSet` constraint
   * and statistics computation when `facetStatistics` extra result is requested. Reference
   * is uniquely represented by int positive number (max. (2^63)-1) and entity type and can be
   * part of multiple reference groups, that are also represented by int and entity type.
   * Reference id in one entity is unique and belongs to single reference group id. Among multiple entities reference may be part
   * of different reference groups. Referenced entity type may represent type of another Evita entity or may refer
   * to anything unknown to Evita that posses unique int key and is maintained by external systems (fe. tag assignment,
   * group assignment, category assignment, stock assignment and so on). Not all these data needs to be present in
   * Evita.
   * References may carry additional key-value data linked to this entity relation (fe. item count present on certain stock).
   * The search query must contain specific `referenceContent` requirement in order
   * references are fetched along with the entity.
   * </pre>
   *
   * <code>map&lt;string, .io.evitadb.externalApi.grpc.generated.GrpcReferenceSchema&gt; references = 13;</code>
   */
  @java.lang.Override

  public io.evitadb.externalApi.grpc.generated.GrpcReferenceSchema getReferencesOrThrow(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, io.evitadb.externalApi.grpc.generated.GrpcReferenceSchema> map =
        internalGetReferences().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int EVOLUTIONMODE_FIELD_NUMBER = 14;
  private java.util.List<java.lang.Integer> evolutionMode_;
  private static final com.google.protobuf.Internal.ListAdapter.Converter<
      java.lang.Integer, io.evitadb.externalApi.grpc.generated.GrpcEvolutionMode> evolutionMode_converter_ =
          new com.google.protobuf.Internal.ListAdapter.Converter<
              java.lang.Integer, io.evitadb.externalApi.grpc.generated.GrpcEvolutionMode>() {
            public io.evitadb.externalApi.grpc.generated.GrpcEvolutionMode convert(java.lang.Integer from) {
              @SuppressWarnings("deprecation")
              io.evitadb.externalApi.grpc.generated.GrpcEvolutionMode result = io.evitadb.externalApi.grpc.generated.GrpcEvolutionMode.valueOf(from);
              return result == null ? io.evitadb.externalApi.grpc.generated.GrpcEvolutionMode.UNRECOGNIZED : result;
            }
          };
  /**
   * <pre>
   * Evolution mode allows to specify how strict is evitaDB when unknown information is presented to her for the first
   * time. When no evolution mode is set, each violation of the `EntitySchema` is
   * reported by an exception. This behaviour can be changed by this evolution mode however.
   * </pre>
   *
   * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEvolutionMode evolutionMode = 14;</code>
   * @return A list containing the evolutionMode.
   */
  @java.lang.Override
  public java.util.List<io.evitadb.externalApi.grpc.generated.GrpcEvolutionMode> getEvolutionModeList() {
    return new com.google.protobuf.Internal.ListAdapter<
        java.lang.Integer, io.evitadb.externalApi.grpc.generated.GrpcEvolutionMode>(this.evolutionMode_, evolutionMode_converter_);
  }
  /**
   * <pre>
   * Evolution mode allows to specify how strict is evitaDB when unknown information is presented to her for the first
   * time. When no evolution mode is set, each violation of the `EntitySchema` is
   * reported by an exception. This behaviour can be changed by this evolution mode however.
   * </pre>
   *
   * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEvolutionMode evolutionMode = 14;</code>
   * @return The count of evolutionMode.
   */
  @java.lang.Override
  public int getEvolutionModeCount() {
    return this.evolutionMode_.size();
  }
  /**
   * <pre>
   * Evolution mode allows to specify how strict is evitaDB when unknown information is presented to her for the first
   * time. When no evolution mode is set, each violation of the `EntitySchema` is
   * reported by an exception. This behaviour can be changed by this evolution mode however.
   * </pre>
   *
   * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEvolutionMode evolutionMode = 14;</code>
   * @param index The index of the element to return.
   * @return The evolutionMode at the given index.
   */
  @java.lang.Override
  public io.evitadb.externalApi.grpc.generated.GrpcEvolutionMode getEvolutionMode(int index) {
    return evolutionMode_converter_.convert(this.evolutionMode_.get(index));
  }
  /**
   * <pre>
   * Evolution mode allows to specify how strict is evitaDB when unknown information is presented to her for the first
   * time. When no evolution mode is set, each violation of the `EntitySchema` is
   * reported by an exception. This behaviour can be changed by this evolution mode however.
   * </pre>
   *
   * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEvolutionMode evolutionMode = 14;</code>
   * @return A list containing the enum numeric values on the wire for evolutionMode.
   */
  @java.lang.Override
  public java.util.List<java.lang.Integer>
  getEvolutionModeValueList() {
    return this.evolutionMode_;
  }
  /**
   * <pre>
   * Evolution mode allows to specify how strict is evitaDB when unknown information is presented to her for the first
   * time. When no evolution mode is set, each violation of the `EntitySchema` is
   * reported by an exception. This behaviour can be changed by this evolution mode however.
   * </pre>
   *
   * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEvolutionMode evolutionMode = 14;</code>
   * @param index The index of the value to return.
   * @return The enum numeric value on the wire of evolutionMode at the given index.
   */
  @java.lang.Override
  public int getEvolutionModeValue(int index) {
    return this.evolutionMode_.get(index);
  }
  private int evolutionModeMemoizedSerializedSize;

  public static final int SORTABLEATTRIBUTECOMPOUNDS_FIELD_NUMBER = 15;
  private static final class SortableAttributeCompoundsDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, io.evitadb.externalApi.grpc.generated.GrpcSortableAttributeCompoundSchema> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, io.evitadb.externalApi.grpc.generated.GrpcSortableAttributeCompoundSchema>newDefaultInstance(
                io.evitadb.externalApi.grpc.generated.GrpcEntitySchemaOuterClass.internal_static_io_evitadb_externalApi_grpc_generated_GrpcEntitySchema_SortableAttributeCompoundsEntry_descriptor,
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.MESSAGE,
                io.evitadb.externalApi.grpc.generated.GrpcSortableAttributeCompoundSchema.getDefaultInstance());
  }
  private com.google.protobuf.MapField<
      java.lang.String, io.evitadb.externalApi.grpc.generated.GrpcSortableAttributeCompoundSchema> sortableAttributeCompounds_;
  private com.google.protobuf.MapField<java.lang.String, io.evitadb.externalApi.grpc.generated.GrpcSortableAttributeCompoundSchema>
  internalGetSortableAttributeCompounds() {
    if (this.sortableAttributeCompounds_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          SortableAttributeCompoundsDefaultEntryHolder.defaultEntry);
    }
    return this.sortableAttributeCompounds_;
  }

  public int getSortableAttributeCompoundsCount() {
    return internalGetSortableAttributeCompounds().getMap().size();
  }
  /**
   * <pre>
   * Contains index of definitions of all sortable attribute compounds defined in this schema.
   * </pre>
   *
   * <code>map&lt;string, .io.evitadb.externalApi.grpc.generated.GrpcSortableAttributeCompoundSchema&gt; sortableAttributeCompounds = 15;</code>
   */

  @java.lang.Override
  public boolean containsSortableAttributeCompounds(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    return internalGetSortableAttributeCompounds().getMap().containsKey(key);
  }
  /**
   * Use {@link #getSortableAttributeCompoundsMap()} instead.
   */
  @java.lang.Override
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, io.evitadb.externalApi.grpc.generated.GrpcSortableAttributeCompoundSchema> getSortableAttributeCompounds() {
    return getSortableAttributeCompoundsMap();
  }
  /**
   * <pre>
   * Contains index of definitions of all sortable attribute compounds defined in this schema.
   * </pre>
   *
   * <code>map&lt;string, .io.evitadb.externalApi.grpc.generated.GrpcSortableAttributeCompoundSchema&gt; sortableAttributeCompounds = 15;</code>
   */
  @java.lang.Override

  public java.util.Map<java.lang.String, io.evitadb.externalApi.grpc.generated.GrpcSortableAttributeCompoundSchema> getSortableAttributeCompoundsMap() {
    return internalGetSortableAttributeCompounds().getMap();
  }
  /**
   * <pre>
   * Contains index of definitions of all sortable attribute compounds defined in this schema.
   * </pre>
   *
   * <code>map&lt;string, .io.evitadb.externalApi.grpc.generated.GrpcSortableAttributeCompoundSchema&gt; sortableAttributeCompounds = 15;</code>
   */
  @java.lang.Override

  public io.evitadb.externalApi.grpc.generated.GrpcSortableAttributeCompoundSchema getSortableAttributeCompoundsOrDefault(
      java.lang.String key,
      io.evitadb.externalApi.grpc.generated.GrpcSortableAttributeCompoundSchema defaultValue) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, io.evitadb.externalApi.grpc.generated.GrpcSortableAttributeCompoundSchema> map =
        internalGetSortableAttributeCompounds().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <pre>
   * Contains index of definitions of all sortable attribute compounds defined in this schema.
   * </pre>
   *
   * <code>map&lt;string, .io.evitadb.externalApi.grpc.generated.GrpcSortableAttributeCompoundSchema&gt; sortableAttributeCompounds = 15;</code>
   */
  @java.lang.Override

  public io.evitadb.externalApi.grpc.generated.GrpcSortableAttributeCompoundSchema getSortableAttributeCompoundsOrThrow(
      java.lang.String key) {
    if (key == null) { throw new NullPointerException("map key"); }
    java.util.Map<java.lang.String, io.evitadb.externalApi.grpc.generated.GrpcSortableAttributeCompoundSchema> map =
        internalGetSortableAttributeCompounds().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int NAMEVARIANT_FIELD_NUMBER = 16;
  private java.util.List<io.evitadb.externalApi.grpc.generated.GrpcNameVariant> nameVariant_;
  /**
   * <pre>
   * Contains entity type converted to different naming conventions.
   * </pre>
   *
   * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcNameVariant nameVariant = 16;</code>
   */
  @java.lang.Override
  public java.util.List<io.evitadb.externalApi.grpc.generated.GrpcNameVariant> getNameVariantList() {
    return this.nameVariant_;
  }
  /**
   * <pre>
   * Contains entity type converted to different naming conventions.
   * </pre>
   *
   * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcNameVariant nameVariant = 16;</code>
   */
  @java.lang.Override
  public java.util.List<? extends io.evitadb.externalApi.grpc.generated.GrpcNameVariantOrBuilder>
      getNameVariantOrBuilderList() {
    return this.nameVariant_;
  }
  /**
   * <pre>
   * Contains entity type converted to different naming conventions.
   * </pre>
   *
   * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcNameVariant nameVariant = 16;</code>
   */
  @java.lang.Override
  public int getNameVariantCount() {
    return this.nameVariant_.size();
  }
  /**
   * <pre>
   * Contains entity type converted to different naming conventions.
   * </pre>
   *
   * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcNameVariant nameVariant = 16;</code>
   */
  @java.lang.Override
  public io.evitadb.externalApi.grpc.generated.GrpcNameVariant getNameVariant(int index) {
    return this.nameVariant_.get(index);
  }
  /**
   * <pre>
   * Contains entity type converted to different naming conventions.
   * </pre>
   *
   * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcNameVariant nameVariant = 16;</code>
   */
  @java.lang.Override
  public io.evitadb.externalApi.grpc.generated.GrpcNameVariantOrBuilder getNameVariantOrBuilder(
      int index) {
    return this.nameVariant_.get(index);
  }

  public static final int HIERARCHYINDEXEDINSCOPES_FIELD_NUMBER = 17;
  private java.util.List<java.lang.Integer> hierarchyIndexedInScopes_;
  private static final com.google.protobuf.Internal.ListAdapter.Converter<
      java.lang.Integer, io.evitadb.externalApi.grpc.generated.GrpcEntityScope> hierarchyIndexedInScopes_converter_ =
          new com.google.protobuf.Internal.ListAdapter.Converter<
              java.lang.Integer, io.evitadb.externalApi.grpc.generated.GrpcEntityScope>() {
            public io.evitadb.externalApi.grpc.generated.GrpcEntityScope convert(java.lang.Integer from) {
              @SuppressWarnings("deprecation")
              io.evitadb.externalApi.grpc.generated.GrpcEntityScope result = io.evitadb.externalApi.grpc.generated.GrpcEntityScope.valueOf(from);
              return result == null ? io.evitadb.externalApi.grpc.generated.GrpcEntityScope.UNRECOGNIZED : result;
            }
          };
  /**
   * <pre>
   * Contains set of all scopes the entity is indexed in and can be used for filtering entities and computation of
   * extra data. If the hierarchy information is not indexed, it is still available on the entity itself (i.e. entity
   * can define its parent entity), but it is not possible to work with the hierarchy information in any other way
   * (calculating parent chain, children, siblings, etc.).
   * </pre>
   *
   * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope hierarchyIndexedInScopes = 17;</code>
   * @return A list containing the hierarchyIndexedInScopes.
   */
  @java.lang.Override
  public java.util.List<io.evitadb.externalApi.grpc.generated.GrpcEntityScope> getHierarchyIndexedInScopesList() {
    return new com.google.protobuf.Internal.ListAdapter<
        java.lang.Integer, io.evitadb.externalApi.grpc.generated.GrpcEntityScope>(this.hierarchyIndexedInScopes_, hierarchyIndexedInScopes_converter_);
  }
  /**
   * <pre>
   * Contains set of all scopes the entity is indexed in and can be used for filtering entities and computation of
   * extra data. If the hierarchy information is not indexed, it is still available on the entity itself (i.e. entity
   * can define its parent entity), but it is not possible to work with the hierarchy information in any other way
   * (calculating parent chain, children, siblings, etc.).
   * </pre>
   *
   * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope hierarchyIndexedInScopes = 17;</code>
   * @return The count of hierarchyIndexedInScopes.
   */
  @java.lang.Override
  public int getHierarchyIndexedInScopesCount() {
    return this.hierarchyIndexedInScopes_.size();
  }
  /**
   * <pre>
   * Contains set of all scopes the entity is indexed in and can be used for filtering entities and computation of
   * extra data. If the hierarchy information is not indexed, it is still available on the entity itself (i.e. entity
   * can define its parent entity), but it is not possible to work with the hierarchy information in any other way
   * (calculating parent chain, children, siblings, etc.).
   * </pre>
   *
   * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope hierarchyIndexedInScopes = 17;</code>
   * @param index The index of the element to return.
   * @return The hierarchyIndexedInScopes at the given index.
   */
  @java.lang.Override
  public io.evitadb.externalApi.grpc.generated.GrpcEntityScope getHierarchyIndexedInScopes(int index) {
    return hierarchyIndexedInScopes_converter_.convert(this.hierarchyIndexedInScopes_.get(index));
  }
  /**
   * <pre>
   * Contains set of all scopes the entity is indexed in and can be used for filtering entities and computation of
   * extra data. If the hierarchy information is not indexed, it is still available on the entity itself (i.e. entity
   * can define its parent entity), but it is not possible to work with the hierarchy information in any other way
   * (calculating parent chain, children, siblings, etc.).
   * </pre>
   *
   * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope hierarchyIndexedInScopes = 17;</code>
   * @return A list containing the enum numeric values on the wire for hierarchyIndexedInScopes.
   */
  @java.lang.Override
  public java.util.List<java.lang.Integer>
  getHierarchyIndexedInScopesValueList() {
    return this.hierarchyIndexedInScopes_;
  }
  /**
   * <pre>
   * Contains set of all scopes the entity is indexed in and can be used for filtering entities and computation of
   * extra data. If the hierarchy information is not indexed, it is still available on the entity itself (i.e. entity
   * can define its parent entity), but it is not possible to work with the hierarchy information in any other way
   * (calculating parent chain, children, siblings, etc.).
   * </pre>
   *
   * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope hierarchyIndexedInScopes = 17;</code>
   * @param index The index of the value to return.
   * @return The enum numeric value on the wire of hierarchyIndexedInScopes at the given index.
   */
  @java.lang.Override
  public int getHierarchyIndexedInScopesValue(int index) {
    return this.hierarchyIndexedInScopes_.get(index);
  }
  private int hierarchyIndexedInScopesMemoizedSerializedSize;

  public static final int PRICEINDEXEDINSCOPES_FIELD_NUMBER = 18;
  private java.util.List<java.lang.Integer> priceIndexedInScopes_;
  private static final com.google.protobuf.Internal.ListAdapter.Converter<
      java.lang.Integer, io.evitadb.externalApi.grpc.generated.GrpcEntityScope> priceIndexedInScopes_converter_ =
          new com.google.protobuf.Internal.ListAdapter.Converter<
              java.lang.Integer, io.evitadb.externalApi.grpc.generated.GrpcEntityScope>() {
            public io.evitadb.externalApi.grpc.generated.GrpcEntityScope convert(java.lang.Integer from) {
              @SuppressWarnings("deprecation")
              io.evitadb.externalApi.grpc.generated.GrpcEntityScope result = io.evitadb.externalApi.grpc.generated.GrpcEntityScope.valueOf(from);
              return result == null ? io.evitadb.externalApi.grpc.generated.GrpcEntityScope.UNRECOGNIZED : result;
            }
          };
  /**
   * <pre>
   * Contains set of all scopes the price information is indexed in and can be used for filtering entities and computation
   * of extra data. If the price information is not indexed, it is still available on the entity itself (i.e. entity
   * can define its price), but it is not possible to work with the price information in any other way (calculating
   * price histogram, filtering, sorting by price, etc.).
   * Prices can be also set as non-indexed individually by setting {&#64;link PriceContract#indexed()} to false.
   * </pre>
   *
   * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope priceIndexedInScopes = 18;</code>
   * @return A list containing the priceIndexedInScopes.
   */
  @java.lang.Override
  public java.util.List<io.evitadb.externalApi.grpc.generated.GrpcEntityScope> getPriceIndexedInScopesList() {
    return new com.google.protobuf.Internal.ListAdapter<
        java.lang.Integer, io.evitadb.externalApi.grpc.generated.GrpcEntityScope>(this.priceIndexedInScopes_, priceIndexedInScopes_converter_);
  }
  /**
   * <pre>
   * Contains set of all scopes the price information is indexed in and can be used for filtering entities and computation
   * of extra data. If the price information is not indexed, it is still available on the entity itself (i.e. entity
   * can define its price), but it is not possible to work with the price information in any other way (calculating
   * price histogram, filtering, sorting by price, etc.).
   * Prices can be also set as non-indexed individually by setting {&#64;link PriceContract#indexed()} to false.
   * </pre>
   *
   * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope priceIndexedInScopes = 18;</code>
   * @return The count of priceIndexedInScopes.
   */
  @java.lang.Override
  public int getPriceIndexedInScopesCount() {
    return this.priceIndexedInScopes_.size();
  }
  /**
   * <pre>
   * Contains set of all scopes the price information is indexed in and can be used for filtering entities and computation
   * of extra data. If the price information is not indexed, it is still available on the entity itself (i.e. entity
   * can define its price), but it is not possible to work with the price information in any other way (calculating
   * price histogram, filtering, sorting by price, etc.).
   * Prices can be also set as non-indexed individually by setting {&#64;link PriceContract#indexed()} to false.
   * </pre>
   *
   * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope priceIndexedInScopes = 18;</code>
   * @param index The index of the element to return.
   * @return The priceIndexedInScopes at the given index.
   */
  @java.lang.Override
  public io.evitadb.externalApi.grpc.generated.GrpcEntityScope getPriceIndexedInScopes(int index) {
    return priceIndexedInScopes_converter_.convert(this.priceIndexedInScopes_.get(index));
  }
  /**
   * <pre>
   * Contains set of all scopes the price information is indexed in and can be used for filtering entities and computation
   * of extra data. If the price information is not indexed, it is still available on the entity itself (i.e. entity
   * can define its price), but it is not possible to work with the price information in any other way (calculating
   * price histogram, filtering, sorting by price, etc.).
   * Prices can be also set as non-indexed individually by setting {&#64;link PriceContract#indexed()} to false.
   * </pre>
   *
   * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope priceIndexedInScopes = 18;</code>
   * @return A list containing the enum numeric values on the wire for priceIndexedInScopes.
   */
  @java.lang.Override
  public java.util.List<java.lang.Integer>
  getPriceIndexedInScopesValueList() {
    return this.priceIndexedInScopes_;
  }
  /**
   * <pre>
   * Contains set of all scopes the price information is indexed in and can be used for filtering entities and computation
   * of extra data. If the price information is not indexed, it is still available on the entity itself (i.e. entity
   * can define its price), but it is not possible to work with the price information in any other way (calculating
   * price histogram, filtering, sorting by price, etc.).
   * Prices can be also set as non-indexed individually by setting {&#64;link PriceContract#indexed()} to false.
   * </pre>
   *
   * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope priceIndexedInScopes = 18;</code>
   * @param index The index of the value to return.
   * @return The enum numeric value on the wire of priceIndexedInScopes at the given index.
   */
  @java.lang.Override
  public int getPriceIndexedInScopesValue(int index) {
    return this.priceIndexedInScopes_.get(index);
  }
  private int priceIndexedInScopesMemoizedSerializedSize;

  public static final int CATALOGSCHEMAVERSION_FIELD_NUMBER = 19;
  private long catalogSchemaVersion_;
  /**
   * <pre>
   * Contains current version of the catalog schema this entity schema belongs to.
   * </pre>
   *
   * <code>int64 catalogSchemaVersion = 19;</code>
   * @return The catalogSchemaVersion.
   */
  @java.lang.Override
  public long getCatalogSchemaVersion() {
    return this.catalogSchemaVersion_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = this.memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    this.memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(this.name_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, this.name_);
    }
    if (this.version_ != 0) {
      output.writeInt32(2, this.version_);
    }
    if (this.description_ != null) {
      output.writeMessage(3, getDescription());
    }
    if (this.deprecationNotice_ != null) {
      output.writeMessage(4, getDeprecationNotice());
    }
    if (this.withGeneratedPrimaryKey_ != false) {
      output.writeBool(5, this.withGeneratedPrimaryKey_);
    }
    if (this.withHierarchy_ != false) {
      output.writeBool(6, this.withHierarchy_);
    }
    if (this.withPrice_ != false) {
      output.writeBool(7, this.withPrice_);
    }
    if (this.indexedPricePlaces_ != 0) {
      output.writeInt32(8, this.indexedPricePlaces_);
    }
    for (int i = 0; i < this.locales_.size(); i++) {
      output.writeMessage(9, this.locales_.get(i));
    }
    for (int i = 0; i < this.currencies_.size(); i++) {
      output.writeMessage(10, this.currencies_.get(i));
    }
    com.google.protobuf.GeneratedMessageV3
      .serializeStringMapTo(
        output,
        internalGetAttributes(),
        AttributesDefaultEntryHolder.defaultEntry,
        11);
    com.google.protobuf.GeneratedMessageV3
      .serializeStringMapTo(
        output,
        internalGetAssociatedData(),
        AssociatedDataDefaultEntryHolder.defaultEntry,
        12);
    com.google.protobuf.GeneratedMessageV3
      .serializeStringMapTo(
        output,
        internalGetReferences(),
        ReferencesDefaultEntryHolder.defaultEntry,
        13);
    if (getEvolutionModeList().size() > 0) {
      output.writeUInt32NoTag(114);
      output.writeUInt32NoTag(this.evolutionModeMemoizedSerializedSize);
    }
    for (int i = 0; i < this.evolutionMode_.size(); i++) {
      output.writeEnumNoTag(this.evolutionMode_.get(i));
    }
    com.google.protobuf.GeneratedMessageV3
      .serializeStringMapTo(
        output,
        internalGetSortableAttributeCompounds(),
        SortableAttributeCompoundsDefaultEntryHolder.defaultEntry,
        15);
    for (int i = 0; i < this.nameVariant_.size(); i++) {
      output.writeMessage(16, this.nameVariant_.get(i));
    }
    if (getHierarchyIndexedInScopesList().size() > 0) {
      output.writeUInt32NoTag(138);
      output.writeUInt32NoTag(this.hierarchyIndexedInScopesMemoizedSerializedSize);
    }
    for (int i = 0; i < this.hierarchyIndexedInScopes_.size(); i++) {
      output.writeEnumNoTag(this.hierarchyIndexedInScopes_.get(i));
    }
    if (getPriceIndexedInScopesList().size() > 0) {
      output.writeUInt32NoTag(146);
      output.writeUInt32NoTag(this.priceIndexedInScopesMemoizedSerializedSize);
    }
    for (int i = 0; i < this.priceIndexedInScopes_.size(); i++) {
      output.writeEnumNoTag(this.priceIndexedInScopes_.get(i));
    }
    if (this.catalogSchemaVersion_ != 0L) {
      output.writeInt64(19, this.catalogSchemaVersion_);
    }
    this.unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = this.memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(this.name_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, this.name_);
    }
    if (this.version_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(2, this.version_);
    }
    if (this.description_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getDescription());
    }
    if (this.deprecationNotice_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getDeprecationNotice());
    }
    if (this.withGeneratedPrimaryKey_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(5, this.withGeneratedPrimaryKey_);
    }
    if (this.withHierarchy_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(6, this.withHierarchy_);
    }
    if (this.withPrice_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(7, this.withPrice_);
    }
    if (this.indexedPricePlaces_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(8, this.indexedPricePlaces_);
    }
    for (int i = 0; i < this.locales_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(9, this.locales_.get(i));
    }
    for (int i = 0; i < this.currencies_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(10, this.currencies_.get(i));
    }
    for (java.util.Map.Entry<java.lang.String, io.evitadb.externalApi.grpc.generated.GrpcAttributeSchema> entry
         : internalGetAttributes().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, io.evitadb.externalApi.grpc.generated.GrpcAttributeSchema>
      attributes__ = AttributesDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, attributes__);
    }
    for (java.util.Map.Entry<java.lang.String, io.evitadb.externalApi.grpc.generated.GrpcAssociatedDataSchema> entry
         : internalGetAssociatedData().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, io.evitadb.externalApi.grpc.generated.GrpcAssociatedDataSchema>
      associatedData__ = AssociatedDataDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, associatedData__);
    }
    for (java.util.Map.Entry<java.lang.String, io.evitadb.externalApi.grpc.generated.GrpcReferenceSchema> entry
         : internalGetReferences().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, io.evitadb.externalApi.grpc.generated.GrpcReferenceSchema>
      references__ = ReferencesDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(13, references__);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < this.evolutionMode_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeEnumSizeNoTag(this.evolutionMode_.get(i));
      }
      size += dataSize;
      if (!getEvolutionModeList().isEmpty()) {  size += 1;
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32SizeNoTag(dataSize);
      }this.evolutionModeMemoizedSerializedSize = dataSize;
    }
    for (java.util.Map.Entry<java.lang.String, io.evitadb.externalApi.grpc.generated.GrpcSortableAttributeCompoundSchema> entry
         : internalGetSortableAttributeCompounds().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, io.evitadb.externalApi.grpc.generated.GrpcSortableAttributeCompoundSchema>
      sortableAttributeCompounds__ = SortableAttributeCompoundsDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(15, sortableAttributeCompounds__);
    }
    for (int i = 0; i < this.nameVariant_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(16, this.nameVariant_.get(i));
    }
    {
      int dataSize = 0;
      for (int i = 0; i < this.hierarchyIndexedInScopes_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeEnumSizeNoTag(this.hierarchyIndexedInScopes_.get(i));
      }
      size += dataSize;
      if (!getHierarchyIndexedInScopesList().isEmpty()) {  size += 2;
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32SizeNoTag(dataSize);
      }this.hierarchyIndexedInScopesMemoizedSerializedSize = dataSize;
    }
    {
      int dataSize = 0;
      for (int i = 0; i < this.priceIndexedInScopes_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeEnumSizeNoTag(this.priceIndexedInScopes_.get(i));
      }
      size += dataSize;
      if (!getPriceIndexedInScopesList().isEmpty()) {  size += 2;
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32SizeNoTag(dataSize);
      }this.priceIndexedInScopesMemoizedSerializedSize = dataSize;
    }
    if (this.catalogSchemaVersion_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(19, this.catalogSchemaVersion_);
    }
    size += this.unknownFields.getSerializedSize();
    this.memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.evitadb.externalApi.grpc.generated.GrpcEntitySchema)) {
      return super.equals(obj);
    }
    io.evitadb.externalApi.grpc.generated.GrpcEntitySchema other = (io.evitadb.externalApi.grpc.generated.GrpcEntitySchema) obj;

    if (!getName()
        .equals(other.getName())) return false;
    if (getVersion()
        != other.getVersion()) return false;
    if (hasDescription() != other.hasDescription()) return false;
    if (hasDescription()) {
      if (!getDescription()
          .equals(other.getDescription())) return false;
    }
    if (hasDeprecationNotice() != other.hasDeprecationNotice()) return false;
    if (hasDeprecationNotice()) {
      if (!getDeprecationNotice()
          .equals(other.getDeprecationNotice())) return false;
    }
    if (getWithGeneratedPrimaryKey()
        != other.getWithGeneratedPrimaryKey()) return false;
    if (getWithHierarchy()
        != other.getWithHierarchy()) return false;
    if (getWithPrice()
        != other.getWithPrice()) return false;
    if (getIndexedPricePlaces()
        != other.getIndexedPricePlaces()) return false;
    if (!getLocalesList()
        .equals(other.getLocalesList())) return false;
    if (!getCurrenciesList()
        .equals(other.getCurrenciesList())) return false;
    if (!internalGetAttributes().equals(
        other.internalGetAttributes())) return false;
    if (!internalGetAssociatedData().equals(
        other.internalGetAssociatedData())) return false;
    if (!internalGetReferences().equals(
        other.internalGetReferences())) return false;
    if (!this.evolutionMode_.equals(other.evolutionMode_)) return false;
    if (!internalGetSortableAttributeCompounds().equals(
        other.internalGetSortableAttributeCompounds())) return false;
    if (!getNameVariantList()
        .equals(other.getNameVariantList())) return false;
    if (!this.hierarchyIndexedInScopes_.equals(other.hierarchyIndexedInScopes_)) return false;
    if (!this.priceIndexedInScopes_.equals(other.priceIndexedInScopes_)) return false;
    if (getCatalogSchemaVersion()
        != other.getCatalogSchemaVersion()) return false;
    if (!this.unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (this.memoizedHashCode != 0) {
      return this.memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + NAME_FIELD_NUMBER;
    hash = (53 * hash) + getName().hashCode();
    hash = (37 * hash) + VERSION_FIELD_NUMBER;
    hash = (53 * hash) + getVersion();
    if (hasDescription()) {
      hash = (37 * hash) + DESCRIPTION_FIELD_NUMBER;
      hash = (53 * hash) + getDescription().hashCode();
    }
    if (hasDeprecationNotice()) {
      hash = (37 * hash) + DEPRECATIONNOTICE_FIELD_NUMBER;
      hash = (53 * hash) + getDeprecationNotice().hashCode();
    }
    hash = (37 * hash) + WITHGENERATEDPRIMARYKEY_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getWithGeneratedPrimaryKey());
    hash = (37 * hash) + WITHHIERARCHY_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getWithHierarchy());
    hash = (37 * hash) + WITHPRICE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getWithPrice());
    hash = (37 * hash) + INDEXEDPRICEPLACES_FIELD_NUMBER;
    hash = (53 * hash) + getIndexedPricePlaces();
    if (getLocalesCount() > 0) {
      hash = (37 * hash) + LOCALES_FIELD_NUMBER;
      hash = (53 * hash) + getLocalesList().hashCode();
    }
    if (getCurrenciesCount() > 0) {
      hash = (37 * hash) + CURRENCIES_FIELD_NUMBER;
      hash = (53 * hash) + getCurrenciesList().hashCode();
    }
    if (!internalGetAttributes().getMap().isEmpty()) {
      hash = (37 * hash) + ATTRIBUTES_FIELD_NUMBER;
      hash = (53 * hash) + internalGetAttributes().hashCode();
    }
    if (!internalGetAssociatedData().getMap().isEmpty()) {
      hash = (37 * hash) + ASSOCIATEDDATA_FIELD_NUMBER;
      hash = (53 * hash) + internalGetAssociatedData().hashCode();
    }
    if (!internalGetReferences().getMap().isEmpty()) {
      hash = (37 * hash) + REFERENCES_FIELD_NUMBER;
      hash = (53 * hash) + internalGetReferences().hashCode();
    }
    if (getEvolutionModeCount() > 0) {
      hash = (37 * hash) + EVOLUTIONMODE_FIELD_NUMBER;
      hash = (53 * hash) + this.evolutionMode_.hashCode();
    }
    if (!internalGetSortableAttributeCompounds().getMap().isEmpty()) {
      hash = (37 * hash) + SORTABLEATTRIBUTECOMPOUNDS_FIELD_NUMBER;
      hash = (53 * hash) + internalGetSortableAttributeCompounds().hashCode();
    }
    if (getNameVariantCount() > 0) {
      hash = (37 * hash) + NAMEVARIANT_FIELD_NUMBER;
      hash = (53 * hash) + getNameVariantList().hashCode();
    }
    if (getHierarchyIndexedInScopesCount() > 0) {
      hash = (37 * hash) + HIERARCHYINDEXEDINSCOPES_FIELD_NUMBER;
      hash = (53 * hash) + this.hierarchyIndexedInScopes_.hashCode();
    }
    if (getPriceIndexedInScopesCount() > 0) {
      hash = (37 * hash) + PRICEINDEXEDINSCOPES_FIELD_NUMBER;
      hash = (53 * hash) + this.priceIndexedInScopes_.hashCode();
    }
    hash = (37 * hash) + CATALOGSCHEMAVERSION_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getCatalogSchemaVersion());
    hash = (29 * hash) + this.unknownFields.hashCode();
    this.memoizedHashCode = hash;
    return hash;
  }

  public static io.evitadb.externalApi.grpc.generated.GrpcEntitySchema parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.evitadb.externalApi.grpc.generated.GrpcEntitySchema parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.evitadb.externalApi.grpc.generated.GrpcEntitySchema parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.evitadb.externalApi.grpc.generated.GrpcEntitySchema parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.evitadb.externalApi.grpc.generated.GrpcEntitySchema parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.evitadb.externalApi.grpc.generated.GrpcEntitySchema parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.evitadb.externalApi.grpc.generated.GrpcEntitySchema parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.evitadb.externalApi.grpc.generated.GrpcEntitySchema parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.evitadb.externalApi.grpc.generated.GrpcEntitySchema parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.evitadb.externalApi.grpc.generated.GrpcEntitySchema parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.evitadb.externalApi.grpc.generated.GrpcEntitySchema parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.evitadb.externalApi.grpc.generated.GrpcEntitySchema parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.evitadb.externalApi.grpc.generated.GrpcEntitySchema prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * This is the definition object for entity. Definition objects allow to describe the structure
   * of the entity type so that in any time everyone can consult complete structure of the entity type.
   * Based on our experience we've designed following data model for handling entities in evitaDB. Model is rather complex
   * but was designed to limit amount of data fetched from database and minimize an amount of data that are indexed and subject
   * to search.
   * Minimal entity definition consists of:
   * - entity type and
   * - primary key (even this is optional and may be autogenerated by the database).
   * Other entity data is purely optional and may not be used at all.
   * </pre>
   *
   * Protobuf type {@code io.evitadb.externalApi.grpc.generated.GrpcEntitySchema}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:io.evitadb.externalApi.grpc.generated.GrpcEntitySchema)
      io.evitadb.externalApi.grpc.generated.GrpcEntitySchemaOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.evitadb.externalApi.grpc.generated.GrpcEntitySchemaOuterClass.internal_static_io_evitadb_externalApi_grpc_generated_GrpcEntitySchema_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 11:
          return internalGetAttributes();
        case 12:
          return internalGetAssociatedData();
        case 13:
          return internalGetReferences();
        case 15:
          return internalGetSortableAttributeCompounds();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMutableMapField(
        int number) {
      switch (number) {
        case 11:
          return internalGetMutableAttributes();
        case 12:
          return internalGetMutableAssociatedData();
        case 13:
          return internalGetMutableReferences();
        case 15:
          return internalGetMutableSortableAttributeCompounds();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.evitadb.externalApi.grpc.generated.GrpcEntitySchemaOuterClass.internal_static_io_evitadb_externalApi_grpc_generated_GrpcEntitySchema_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.evitadb.externalApi.grpc.generated.GrpcEntitySchema.class, io.evitadb.externalApi.grpc.generated.GrpcEntitySchema.Builder.class);
    }

    // Construct using io.evitadb.externalApi.grpc.generated.GrpcEntitySchema.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getLocalesFieldBuilder();
        getCurrenciesFieldBuilder();
        getNameVariantFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      this.name_ = "";

      this.version_ = 0;

      if (this.descriptionBuilder_ == null) {
        this.description_ = null;
      } else {
        this.description_ = null;
        this.descriptionBuilder_ = null;
      }
      if (this.deprecationNoticeBuilder_ == null) {
        this.deprecationNotice_ = null;
      } else {
        this.deprecationNotice_ = null;
        this.deprecationNoticeBuilder_ = null;
      }
      this.withGeneratedPrimaryKey_ = false;

      this.withHierarchy_ = false;

      this.withPrice_ = false;

      this.indexedPricePlaces_ = 0;

      if (this.localesBuilder_ == null) {
        this.locales_ = java.util.Collections.emptyList();
        this.bitField0_ = (this.bitField0_ & ~0x00000001);
      } else {
        this.localesBuilder_.clear();
      }
      if (this.currenciesBuilder_ == null) {
        this.currencies_ = java.util.Collections.emptyList();
        this.bitField0_ = (this.bitField0_ & ~0x00000002);
      } else {
        this.currenciesBuilder_.clear();
      }
      internalGetMutableAttributes().clear();
      internalGetMutableAssociatedData().clear();
      internalGetMutableReferences().clear();
      this.evolutionMode_ = java.util.Collections.emptyList();
      this.bitField0_ = (this.bitField0_ & ~0x00000020);
      internalGetMutableSortableAttributeCompounds().clear();
      if (this.nameVariantBuilder_ == null) {
        this.nameVariant_ = java.util.Collections.emptyList();
        this.bitField0_ = (this.bitField0_ & ~0x00000080);
      } else {
        this.nameVariantBuilder_.clear();
      }
      this.hierarchyIndexedInScopes_ = java.util.Collections.emptyList();
      this.bitField0_ = (this.bitField0_ & ~0x00000100);
      this.priceIndexedInScopes_ = java.util.Collections.emptyList();
      this.bitField0_ = (this.bitField0_ & ~0x00000200);
      this.catalogSchemaVersion_ = 0L;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.evitadb.externalApi.grpc.generated.GrpcEntitySchemaOuterClass.internal_static_io_evitadb_externalApi_grpc_generated_GrpcEntitySchema_descriptor;
    }

    @java.lang.Override
    public io.evitadb.externalApi.grpc.generated.GrpcEntitySchema getDefaultInstanceForType() {
      return io.evitadb.externalApi.grpc.generated.GrpcEntitySchema.getDefaultInstance();
    }

    @java.lang.Override
    public io.evitadb.externalApi.grpc.generated.GrpcEntitySchema build() {
      io.evitadb.externalApi.grpc.generated.GrpcEntitySchema result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.evitadb.externalApi.grpc.generated.GrpcEntitySchema buildPartial() {
      io.evitadb.externalApi.grpc.generated.GrpcEntitySchema result = new io.evitadb.externalApi.grpc.generated.GrpcEntitySchema(this);
      int from_bitField0_ = this.bitField0_;
      result.name_ = this.name_;
      result.version_ = this.version_;
      if (this.descriptionBuilder_ == null) {
        result.description_ = this.description_;
      } else {
        result.description_ = this.descriptionBuilder_.build();
      }
      if (this.deprecationNoticeBuilder_ == null) {
        result.deprecationNotice_ = this.deprecationNotice_;
      } else {
        result.deprecationNotice_ = this.deprecationNoticeBuilder_.build();
      }
      result.withGeneratedPrimaryKey_ = this.withGeneratedPrimaryKey_;
      result.withHierarchy_ = this.withHierarchy_;
      result.withPrice_ = this.withPrice_;
      result.indexedPricePlaces_ = this.indexedPricePlaces_;
      if (this.localesBuilder_ == null) {
        if (((this.bitField0_ & 0x00000001) != 0)) {
          this.locales_ = java.util.Collections.unmodifiableList(this.locales_);
          this.bitField0_ = (this.bitField0_ & ~0x00000001);
        }
        result.locales_ = this.locales_;
      } else {
        result.locales_ = this.localesBuilder_.build();
      }
      if (this.currenciesBuilder_ == null) {
        if (((this.bitField0_ & 0x00000002) != 0)) {
          this.currencies_ = java.util.Collections.unmodifiableList(this.currencies_);
          this.bitField0_ = (this.bitField0_ & ~0x00000002);
        }
        result.currencies_ = this.currencies_;
      } else {
        result.currencies_ = this.currenciesBuilder_.build();
      }
      result.attributes_ = internalGetAttributes();
      result.attributes_.makeImmutable();
      result.associatedData_ = internalGetAssociatedData();
      result.associatedData_.makeImmutable();
      result.references_ = internalGetReferences();
      result.references_.makeImmutable();
      if (((this.bitField0_ & 0x00000020) != 0)) {
        this.evolutionMode_ = java.util.Collections.unmodifiableList(this.evolutionMode_);
        this.bitField0_ = (this.bitField0_ & ~0x00000020);
      }
      result.evolutionMode_ = this.evolutionMode_;
      result.sortableAttributeCompounds_ = internalGetSortableAttributeCompounds();
      result.sortableAttributeCompounds_.makeImmutable();
      if (this.nameVariantBuilder_ == null) {
        if (((this.bitField0_ & 0x00000080) != 0)) {
          this.nameVariant_ = java.util.Collections.unmodifiableList(this.nameVariant_);
          this.bitField0_ = (this.bitField0_ & ~0x00000080);
        }
        result.nameVariant_ = this.nameVariant_;
      } else {
        result.nameVariant_ = this.nameVariantBuilder_.build();
      }
      if (((this.bitField0_ & 0x00000100) != 0)) {
        this.hierarchyIndexedInScopes_ = java.util.Collections.unmodifiableList(this.hierarchyIndexedInScopes_);
        this.bitField0_ = (this.bitField0_ & ~0x00000100);
      }
      result.hierarchyIndexedInScopes_ = this.hierarchyIndexedInScopes_;
      if (((this.bitField0_ & 0x00000200) != 0)) {
        this.priceIndexedInScopes_ = java.util.Collections.unmodifiableList(this.priceIndexedInScopes_);
        this.bitField0_ = (this.bitField0_ & ~0x00000200);
      }
      result.priceIndexedInScopes_ = this.priceIndexedInScopes_;
      result.catalogSchemaVersion_ = this.catalogSchemaVersion_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.evitadb.externalApi.grpc.generated.GrpcEntitySchema) {
        return mergeFrom((io.evitadb.externalApi.grpc.generated.GrpcEntitySchema)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.evitadb.externalApi.grpc.generated.GrpcEntitySchema other) {
      if (other == io.evitadb.externalApi.grpc.generated.GrpcEntitySchema.getDefaultInstance()) return this;
      if (!other.getName().isEmpty()) {
        this.name_ = other.name_;
        onChanged();
      }
      if (other.getVersion() != 0) {
        setVersion(other.getVersion());
      }
      if (other.hasDescription()) {
        mergeDescription(other.getDescription());
      }
      if (other.hasDeprecationNotice()) {
        mergeDeprecationNotice(other.getDeprecationNotice());
      }
      if (other.getWithGeneratedPrimaryKey() != false) {
        setWithGeneratedPrimaryKey(other.getWithGeneratedPrimaryKey());
      }
      if (other.getWithHierarchy() != false) {
        setWithHierarchy(other.getWithHierarchy());
      }
      if (other.getWithPrice() != false) {
        setWithPrice(other.getWithPrice());
      }
      if (other.getIndexedPricePlaces() != 0) {
        setIndexedPricePlaces(other.getIndexedPricePlaces());
      }
      if (this.localesBuilder_ == null) {
        if (!other.locales_.isEmpty()) {
          if (this.locales_.isEmpty()) {
            this.locales_ = other.locales_;
            this.bitField0_ = (this.bitField0_ & ~0x00000001);
          } else {
            ensureLocalesIsMutable();
            this.locales_.addAll(other.locales_);
          }
          onChanged();
        }
      } else {
        if (!other.locales_.isEmpty()) {
          if (this.localesBuilder_.isEmpty()) {
            this.localesBuilder_.dispose();
            this.localesBuilder_ = null;
            this.locales_ = other.locales_;
            this.bitField0_ = (this.bitField0_ & ~0x00000001);
            this.localesBuilder_ =
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getLocalesFieldBuilder() : null;
          } else {
            this.localesBuilder_.addAllMessages(other.locales_);
          }
        }
      }
      if (this.currenciesBuilder_ == null) {
        if (!other.currencies_.isEmpty()) {
          if (this.currencies_.isEmpty()) {
            this.currencies_ = other.currencies_;
            this.bitField0_ = (this.bitField0_ & ~0x00000002);
          } else {
            ensureCurrenciesIsMutable();
            this.currencies_.addAll(other.currencies_);
          }
          onChanged();
        }
      } else {
        if (!other.currencies_.isEmpty()) {
          if (this.currenciesBuilder_.isEmpty()) {
            this.currenciesBuilder_.dispose();
            this.currenciesBuilder_ = null;
            this.currencies_ = other.currencies_;
            this.bitField0_ = (this.bitField0_ & ~0x00000002);
            this.currenciesBuilder_ =
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getCurrenciesFieldBuilder() : null;
          } else {
            this.currenciesBuilder_.addAllMessages(other.currencies_);
          }
        }
      }
      internalGetMutableAttributes().mergeFrom(
          other.internalGetAttributes());
      internalGetMutableAssociatedData().mergeFrom(
          other.internalGetAssociatedData());
      internalGetMutableReferences().mergeFrom(
          other.internalGetReferences());
      if (!other.evolutionMode_.isEmpty()) {
        if (this.evolutionMode_.isEmpty()) {
          this.evolutionMode_ = other.evolutionMode_;
          this.bitField0_ = (this.bitField0_ & ~0x00000020);
        } else {
          ensureEvolutionModeIsMutable();
          this.evolutionMode_.addAll(other.evolutionMode_);
        }
        onChanged();
      }
      internalGetMutableSortableAttributeCompounds().mergeFrom(
          other.internalGetSortableAttributeCompounds());
      if (this.nameVariantBuilder_ == null) {
        if (!other.nameVariant_.isEmpty()) {
          if (this.nameVariant_.isEmpty()) {
            this.nameVariant_ = other.nameVariant_;
            this.bitField0_ = (this.bitField0_ & ~0x00000080);
          } else {
            ensureNameVariantIsMutable();
            this.nameVariant_.addAll(other.nameVariant_);
          }
          onChanged();
        }
      } else {
        if (!other.nameVariant_.isEmpty()) {
          if (this.nameVariantBuilder_.isEmpty()) {
            this.nameVariantBuilder_.dispose();
            this.nameVariantBuilder_ = null;
            this.nameVariant_ = other.nameVariant_;
            this.bitField0_ = (this.bitField0_ & ~0x00000080);
            this.nameVariantBuilder_ =
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getNameVariantFieldBuilder() : null;
          } else {
            this.nameVariantBuilder_.addAllMessages(other.nameVariant_);
          }
        }
      }
      if (!other.hierarchyIndexedInScopes_.isEmpty()) {
        if (this.hierarchyIndexedInScopes_.isEmpty()) {
          this.hierarchyIndexedInScopes_ = other.hierarchyIndexedInScopes_;
          this.bitField0_ = (this.bitField0_ & ~0x00000100);
        } else {
          ensureHierarchyIndexedInScopesIsMutable();
          this.hierarchyIndexedInScopes_.addAll(other.hierarchyIndexedInScopes_);
        }
        onChanged();
      }
      if (!other.priceIndexedInScopes_.isEmpty()) {
        if (this.priceIndexedInScopes_.isEmpty()) {
          this.priceIndexedInScopes_ = other.priceIndexedInScopes_;
          this.bitField0_ = (this.bitField0_ & ~0x00000200);
        } else {
          ensurePriceIndexedInScopesIsMutable();
          this.priceIndexedInScopes_.addAll(other.priceIndexedInScopes_);
        }
        onChanged();
      }
      if (other.getCatalogSchemaVersion() != 0L) {
        setCatalogSchemaVersion(other.getCatalogSchemaVersion());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      io.evitadb.externalApi.grpc.generated.GrpcEntitySchema parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.evitadb.externalApi.grpc.generated.GrpcEntitySchema) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.lang.Object name_ = "";
    /**
     * <pre>
     * Contains unique name of the model. Case-sensitive. Distinguishes one model item from another
     * within single entity instance.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The name.
     */
    public java.lang.String getName() {
      java.lang.Object ref = this.name_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        this.name_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Contains unique name of the model. Case-sensitive. Distinguishes one model item from another
     * within single entity instance.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = this.name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        this.name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Contains unique name of the model. Case-sensitive. Distinguishes one model item from another
     * within single entity instance.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @param value The name to set.
     * @return This builder for chaining.
     */
    public Builder setName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }

      this.name_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Contains unique name of the model. Case-sensitive. Distinguishes one model item from another
     * within single entity instance.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearName() {

      this.name_ = getDefaultInstance().getName();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Contains unique name of the model. Case-sensitive. Distinguishes one model item from another
     * within single entity instance.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @param value The bytes for name to set.
     * @return This builder for chaining.
     */
    public Builder setNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

      this.name_ = value;
      onChanged();
      return this;
    }

    private int version_ ;
    /**
     * <pre>
     * Contains version of this entity schema and gets increased with any entity type update. Allows to execute
     * optimistic locking i.e. avoiding parallel modifications.
     * </pre>
     *
     * <code>int32 version = 2;</code>
     * @return The version.
     */
    @java.lang.Override
    public int getVersion() {
      return this.version_;
    }
    /**
     * <pre>
     * Contains version of this entity schema and gets increased with any entity type update. Allows to execute
     * optimistic locking i.e. avoiding parallel modifications.
     * </pre>
     *
     * <code>int32 version = 2;</code>
     * @param value The version to set.
     * @return This builder for chaining.
     */
    public Builder setVersion(int value) {

      this.version_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Contains version of this entity schema and gets increased with any entity type update. Allows to execute
     * optimistic locking i.e. avoiding parallel modifications.
     * </pre>
     *
     * <code>int32 version = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearVersion() {

      this.version_ = 0;
      onChanged();
      return this;
    }

    private com.google.protobuf.StringValue description_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder> descriptionBuilder_;
    /**
     * <pre>
     * Contains description of the model is optional but helps authors of the schema / client API to better
     * explain the original purpose of the model to the consumers.
     * </pre>
     *
     * <code>.google.protobuf.StringValue description = 3;</code>
     * @return Whether the description field is set.
     */
    public boolean hasDescription() {
      return this.descriptionBuilder_ != null || this.description_ != null;
    }
    /**
     * <pre>
     * Contains description of the model is optional but helps authors of the schema / client API to better
     * explain the original purpose of the model to the consumers.
     * </pre>
     *
     * <code>.google.protobuf.StringValue description = 3;</code>
     * @return The description.
     */
    public com.google.protobuf.StringValue getDescription() {
      if (this.descriptionBuilder_ == null) {
        return this.description_ == null ? com.google.protobuf.StringValue.getDefaultInstance() : this.description_;
      } else {
        return this.descriptionBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Contains description of the model is optional but helps authors of the schema / client API to better
     * explain the original purpose of the model to the consumers.
     * </pre>
     *
     * <code>.google.protobuf.StringValue description = 3;</code>
     */
    public Builder setDescription(com.google.protobuf.StringValue value) {
      if (this.descriptionBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        this.description_ = value;
        onChanged();
      } else {
        this.descriptionBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Contains description of the model is optional but helps authors of the schema / client API to better
     * explain the original purpose of the model to the consumers.
     * </pre>
     *
     * <code>.google.protobuf.StringValue description = 3;</code>
     */
    public Builder setDescription(
        com.google.protobuf.StringValue.Builder builderForValue) {
      if (this.descriptionBuilder_ == null) {
        this.description_ = builderForValue.build();
        onChanged();
      } else {
        this.descriptionBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Contains description of the model is optional but helps authors of the schema / client API to better
     * explain the original purpose of the model to the consumers.
     * </pre>
     *
     * <code>.google.protobuf.StringValue description = 3;</code>
     */
    public Builder mergeDescription(com.google.protobuf.StringValue value) {
      if (this.descriptionBuilder_ == null) {
        if (this.description_ != null) {
          this.description_ =
            com.google.protobuf.StringValue.newBuilder(this.description_).mergeFrom(value).buildPartial();
        } else {
          this.description_ = value;
        }
        onChanged();
      } else {
        this.descriptionBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Contains description of the model is optional but helps authors of the schema / client API to better
     * explain the original purpose of the model to the consumers.
     * </pre>
     *
     * <code>.google.protobuf.StringValue description = 3;</code>
     */
    public Builder clearDescription() {
      if (this.descriptionBuilder_ == null) {
        this.description_ = null;
        onChanged();
      } else {
        this.description_ = null;
        this.descriptionBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Contains description of the model is optional but helps authors of the schema / client API to better
     * explain the original purpose of the model to the consumers.
     * </pre>
     *
     * <code>.google.protobuf.StringValue description = 3;</code>
     */
    public com.google.protobuf.StringValue.Builder getDescriptionBuilder() {

      onChanged();
      return getDescriptionFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Contains description of the model is optional but helps authors of the schema / client API to better
     * explain the original purpose of the model to the consumers.
     * </pre>
     *
     * <code>.google.protobuf.StringValue description = 3;</code>
     */
    public com.google.protobuf.StringValueOrBuilder getDescriptionOrBuilder() {
      if (this.descriptionBuilder_ != null) {
        return this.descriptionBuilder_.getMessageOrBuilder();
      } else {
        return this.description_ == null ?
            com.google.protobuf.StringValue.getDefaultInstance() : this.description_;
      }
    }
    /**
     * <pre>
     * Contains description of the model is optional but helps authors of the schema / client API to better
     * explain the original purpose of the model to the consumers.
     * </pre>
     *
     * <code>.google.protobuf.StringValue description = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder>
        getDescriptionFieldBuilder() {
      if (this.descriptionBuilder_ == null) {
        this.descriptionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder>(
                getDescription(),
                getParentForChildren(),
                isClean());
        this.description_ = null;
      }
      return this.descriptionBuilder_;
    }

    private com.google.protobuf.StringValue deprecationNotice_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder> deprecationNoticeBuilder_;
    /**
     * <pre>
     * Deprecation notice contains information about planned removal of this entity from the model / client API.
     * This allows to plan and evolve the schema allowing clients to adapt early to planned breaking changes.
     * If notice is `null`, this schema is considered not deprecated.
     * </pre>
     *
     * <code>.google.protobuf.StringValue deprecationNotice = 4;</code>
     * @return Whether the deprecationNotice field is set.
     */
    public boolean hasDeprecationNotice() {
      return this.deprecationNoticeBuilder_ != null || this.deprecationNotice_ != null;
    }
    /**
     * <pre>
     * Deprecation notice contains information about planned removal of this entity from the model / client API.
     * This allows to plan and evolve the schema allowing clients to adapt early to planned breaking changes.
     * If notice is `null`, this schema is considered not deprecated.
     * </pre>
     *
     * <code>.google.protobuf.StringValue deprecationNotice = 4;</code>
     * @return The deprecationNotice.
     */
    public com.google.protobuf.StringValue getDeprecationNotice() {
      if (this.deprecationNoticeBuilder_ == null) {
        return this.deprecationNotice_ == null ? com.google.protobuf.StringValue.getDefaultInstance() : this.deprecationNotice_;
      } else {
        return this.deprecationNoticeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Deprecation notice contains information about planned removal of this entity from the model / client API.
     * This allows to plan and evolve the schema allowing clients to adapt early to planned breaking changes.
     * If notice is `null`, this schema is considered not deprecated.
     * </pre>
     *
     * <code>.google.protobuf.StringValue deprecationNotice = 4;</code>
     */
    public Builder setDeprecationNotice(com.google.protobuf.StringValue value) {
      if (this.deprecationNoticeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        this.deprecationNotice_ = value;
        onChanged();
      } else {
        this.deprecationNoticeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Deprecation notice contains information about planned removal of this entity from the model / client API.
     * This allows to plan and evolve the schema allowing clients to adapt early to planned breaking changes.
     * If notice is `null`, this schema is considered not deprecated.
     * </pre>
     *
     * <code>.google.protobuf.StringValue deprecationNotice = 4;</code>
     */
    public Builder setDeprecationNotice(
        com.google.protobuf.StringValue.Builder builderForValue) {
      if (this.deprecationNoticeBuilder_ == null) {
        this.deprecationNotice_ = builderForValue.build();
        onChanged();
      } else {
        this.deprecationNoticeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Deprecation notice contains information about planned removal of this entity from the model / client API.
     * This allows to plan and evolve the schema allowing clients to adapt early to planned breaking changes.
     * If notice is `null`, this schema is considered not deprecated.
     * </pre>
     *
     * <code>.google.protobuf.StringValue deprecationNotice = 4;</code>
     */
    public Builder mergeDeprecationNotice(com.google.protobuf.StringValue value) {
      if (this.deprecationNoticeBuilder_ == null) {
        if (this.deprecationNotice_ != null) {
          this.deprecationNotice_ =
            com.google.protobuf.StringValue.newBuilder(this.deprecationNotice_).mergeFrom(value).buildPartial();
        } else {
          this.deprecationNotice_ = value;
        }
        onChanged();
      } else {
        this.deprecationNoticeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Deprecation notice contains information about planned removal of this entity from the model / client API.
     * This allows to plan and evolve the schema allowing clients to adapt early to planned breaking changes.
     * If notice is `null`, this schema is considered not deprecated.
     * </pre>
     *
     * <code>.google.protobuf.StringValue deprecationNotice = 4;</code>
     */
    public Builder clearDeprecationNotice() {
      if (this.deprecationNoticeBuilder_ == null) {
        this.deprecationNotice_ = null;
        onChanged();
      } else {
        this.deprecationNotice_ = null;
        this.deprecationNoticeBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Deprecation notice contains information about planned removal of this entity from the model / client API.
     * This allows to plan and evolve the schema allowing clients to adapt early to planned breaking changes.
     * If notice is `null`, this schema is considered not deprecated.
     * </pre>
     *
     * <code>.google.protobuf.StringValue deprecationNotice = 4;</code>
     */
    public com.google.protobuf.StringValue.Builder getDeprecationNoticeBuilder() {

      onChanged();
      return getDeprecationNoticeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Deprecation notice contains information about planned removal of this entity from the model / client API.
     * This allows to plan and evolve the schema allowing clients to adapt early to planned breaking changes.
     * If notice is `null`, this schema is considered not deprecated.
     * </pre>
     *
     * <code>.google.protobuf.StringValue deprecationNotice = 4;</code>
     */
    public com.google.protobuf.StringValueOrBuilder getDeprecationNoticeOrBuilder() {
      if (this.deprecationNoticeBuilder_ != null) {
        return this.deprecationNoticeBuilder_.getMessageOrBuilder();
      } else {
        return this.deprecationNotice_ == null ?
            com.google.protobuf.StringValue.getDefaultInstance() : this.deprecationNotice_;
      }
    }
    /**
     * <pre>
     * Deprecation notice contains information about planned removal of this entity from the model / client API.
     * This allows to plan and evolve the schema allowing clients to adapt early to planned breaking changes.
     * If notice is `null`, this schema is considered not deprecated.
     * </pre>
     *
     * <code>.google.protobuf.StringValue deprecationNotice = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder>
        getDeprecationNoticeFieldBuilder() {
      if (this.deprecationNoticeBuilder_ == null) {
        this.deprecationNoticeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.StringValue, com.google.protobuf.StringValue.Builder, com.google.protobuf.StringValueOrBuilder>(
                getDeprecationNotice(),
                getParentForChildren(),
                isClean());
        this.deprecationNotice_ = null;
      }
      return this.deprecationNoticeBuilder_;
    }

    private boolean withGeneratedPrimaryKey_ ;
    /**
     * <pre>
     * Contains `true` when primary keys of entities of this type will not be provided by the external systems and Evita
     * is responsible for generating unique primary keys for the entity on insertion.
     * Generated key is guaranteed to be unique, but may not represent continuous ascending series. Generated key
     * will be always greater than zero.
     * </pre>
     *
     * <code>bool withGeneratedPrimaryKey = 5;</code>
     * @return The withGeneratedPrimaryKey.
     */
    @java.lang.Override
    public boolean getWithGeneratedPrimaryKey() {
      return this.withGeneratedPrimaryKey_;
    }
    /**
     * <pre>
     * Contains `true` when primary keys of entities of this type will not be provided by the external systems and Evita
     * is responsible for generating unique primary keys for the entity on insertion.
     * Generated key is guaranteed to be unique, but may not represent continuous ascending series. Generated key
     * will be always greater than zero.
     * </pre>
     *
     * <code>bool withGeneratedPrimaryKey = 5;</code>
     * @param value The withGeneratedPrimaryKey to set.
     * @return This builder for chaining.
     */
    public Builder setWithGeneratedPrimaryKey(boolean value) {

      this.withGeneratedPrimaryKey_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Contains `true` when primary keys of entities of this type will not be provided by the external systems and Evita
     * is responsible for generating unique primary keys for the entity on insertion.
     * Generated key is guaranteed to be unique, but may not represent continuous ascending series. Generated key
     * will be always greater than zero.
     * </pre>
     *
     * <code>bool withGeneratedPrimaryKey = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearWithGeneratedPrimaryKey() {

      this.withGeneratedPrimaryKey_ = false;
      onChanged();
      return this;
    }

    private boolean withHierarchy_ ;
    /**
     * <pre>
     * Contains `true` when entities of this type are organized in a tree like structure (hierarchy) where certain entities
     * are subordinate of other entities.
     * Entities may be organized in hierarchical fashion. That means that entity may refer to single parent entity and may be
     * referred by multiple child entities. Hierarchy is always composed of entities of same type.
     * Each entity must be part of at most single hierarchy (tree).
     * Hierarchy can limit returned entities by using filtering constraints. It's also used for
     * computation of extra data - such as `hierarchyParentsOfSelf`. It can also invert type of returned entities in case extra result
     * `hierarchyOfSelf` is requested.
     * </pre>
     *
     * <code>bool withHierarchy = 6;</code>
     * @return The withHierarchy.
     */
    @java.lang.Override
    public boolean getWithHierarchy() {
      return this.withHierarchy_;
    }
    /**
     * <pre>
     * Contains `true` when entities of this type are organized in a tree like structure (hierarchy) where certain entities
     * are subordinate of other entities.
     * Entities may be organized in hierarchical fashion. That means that entity may refer to single parent entity and may be
     * referred by multiple child entities. Hierarchy is always composed of entities of same type.
     * Each entity must be part of at most single hierarchy (tree).
     * Hierarchy can limit returned entities by using filtering constraints. It's also used for
     * computation of extra data - such as `hierarchyParentsOfSelf`. It can also invert type of returned entities in case extra result
     * `hierarchyOfSelf` is requested.
     * </pre>
     *
     * <code>bool withHierarchy = 6;</code>
     * @param value The withHierarchy to set.
     * @return This builder for chaining.
     */
    public Builder setWithHierarchy(boolean value) {

      this.withHierarchy_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Contains `true` when entities of this type are organized in a tree like structure (hierarchy) where certain entities
     * are subordinate of other entities.
     * Entities may be organized in hierarchical fashion. That means that entity may refer to single parent entity and may be
     * referred by multiple child entities. Hierarchy is always composed of entities of same type.
     * Each entity must be part of at most single hierarchy (tree).
     * Hierarchy can limit returned entities by using filtering constraints. It's also used for
     * computation of extra data - such as `hierarchyParentsOfSelf`. It can also invert type of returned entities in case extra result
     * `hierarchyOfSelf` is requested.
     * </pre>
     *
     * <code>bool withHierarchy = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearWithHierarchy() {

      this.withHierarchy_ = false;
      onChanged();
      return this;
    }

    private boolean withPrice_ ;
    /**
     * <pre>
     * Contains `true` when entities of this type holds price information.
     * Prices are specific to a very few entities, but because correct price computation is very complex in e-commerce
     * systems and highly affects performance of the entities filtering and sorting, they deserve first class support
     * in entity model. It is pretty common in B2B systems single product has assigned dozens of prices for the different
     * customers.
     * Specifying prices on entity allows usage of `priceValidIn`, `priceInCurrency`
     * `priceBetween`, and `priceInPriceLists` filtering constraints and also `priceNatural`,
     * ordering of the entities. Additional extra result
     * `priceHistogram` and requirement `priceType` can be used in query as well.
     * </pre>
     *
     * <code>bool withPrice = 7;</code>
     * @return The withPrice.
     */
    @java.lang.Override
    public boolean getWithPrice() {
      return this.withPrice_;
    }
    /**
     * <pre>
     * Contains `true` when entities of this type holds price information.
     * Prices are specific to a very few entities, but because correct price computation is very complex in e-commerce
     * systems and highly affects performance of the entities filtering and sorting, they deserve first class support
     * in entity model. It is pretty common in B2B systems single product has assigned dozens of prices for the different
     * customers.
     * Specifying prices on entity allows usage of `priceValidIn`, `priceInCurrency`
     * `priceBetween`, and `priceInPriceLists` filtering constraints and also `priceNatural`,
     * ordering of the entities. Additional extra result
     * `priceHistogram` and requirement `priceType` can be used in query as well.
     * </pre>
     *
     * <code>bool withPrice = 7;</code>
     * @param value The withPrice to set.
     * @return This builder for chaining.
     */
    public Builder setWithPrice(boolean value) {

      this.withPrice_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Contains `true` when entities of this type holds price information.
     * Prices are specific to a very few entities, but because correct price computation is very complex in e-commerce
     * systems and highly affects performance of the entities filtering and sorting, they deserve first class support
     * in entity model. It is pretty common in B2B systems single product has assigned dozens of prices for the different
     * customers.
     * Specifying prices on entity allows usage of `priceValidIn`, `priceInCurrency`
     * `priceBetween`, and `priceInPriceLists` filtering constraints and also `priceNatural`,
     * ordering of the entities. Additional extra result
     * `priceHistogram` and requirement `priceType` can be used in query as well.
     * </pre>
     *
     * <code>bool withPrice = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearWithPrice() {

      this.withPrice_ = false;
      onChanged();
      return this;
    }

    private int indexedPricePlaces_ ;
    /**
     * <pre>
     * Determines how many fractional places are important when entities are compared during filtering or sorting. It is
     * important to know that all prices will be converted to `Int`, so any of the price values
     * (either with or without tax) must not ever exceed maximum limits of `Int` type when scaling
     * the number by the power of ten using `indexedPricePlaces` as exponent.
     * </pre>
     *
     * <code>int32 indexedPricePlaces = 8;</code>
     * @return The indexedPricePlaces.
     */
    @java.lang.Override
    public int getIndexedPricePlaces() {
      return this.indexedPricePlaces_;
    }
    /**
     * <pre>
     * Determines how many fractional places are important when entities are compared during filtering or sorting. It is
     * important to know that all prices will be converted to `Int`, so any of the price values
     * (either with or without tax) must not ever exceed maximum limits of `Int` type when scaling
     * the number by the power of ten using `indexedPricePlaces` as exponent.
     * </pre>
     *
     * <code>int32 indexedPricePlaces = 8;</code>
     * @param value The indexedPricePlaces to set.
     * @return This builder for chaining.
     */
    public Builder setIndexedPricePlaces(int value) {

      this.indexedPricePlaces_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Determines how many fractional places are important when entities are compared during filtering or sorting. It is
     * important to know that all prices will be converted to `Int`, so any of the price values
     * (either with or without tax) must not ever exceed maximum limits of `Int` type when scaling
     * the number by the power of ten using `indexedPricePlaces` as exponent.
     * </pre>
     *
     * <code>int32 indexedPricePlaces = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearIndexedPricePlaces() {

      this.indexedPricePlaces_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<io.evitadb.externalApi.grpc.generated.GrpcLocale> locales_ =
      java.util.Collections.emptyList();
    private void ensureLocalesIsMutable() {
      if (!((this.bitField0_ & 0x00000001) != 0)) {
        this.locales_ = new java.util.ArrayList<io.evitadb.externalApi.grpc.generated.GrpcLocale>(this.locales_);
        this.bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.evitadb.externalApi.grpc.generated.GrpcLocale, io.evitadb.externalApi.grpc.generated.GrpcLocale.Builder, io.evitadb.externalApi.grpc.generated.GrpcLocaleOrBuilder> localesBuilder_;

    /**
     * <pre>
     * Contains set of all `Locale` that could be used for localized `AttributeSchema` or `AssociatedDataSchema`.
     * Enables using `entityLocaleEquals` filtering constraint in query.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcLocale locales = 9;</code>
     */
    public java.util.List<io.evitadb.externalApi.grpc.generated.GrpcLocale> getLocalesList() {
      if (this.localesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(this.locales_);
      } else {
        return this.localesBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Contains set of all `Locale` that could be used for localized `AttributeSchema` or `AssociatedDataSchema`.
     * Enables using `entityLocaleEquals` filtering constraint in query.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcLocale locales = 9;</code>
     */
    public int getLocalesCount() {
      if (this.localesBuilder_ == null) {
        return this.locales_.size();
      } else {
        return this.localesBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Contains set of all `Locale` that could be used for localized `AttributeSchema` or `AssociatedDataSchema`.
     * Enables using `entityLocaleEquals` filtering constraint in query.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcLocale locales = 9;</code>
     */
    public io.evitadb.externalApi.grpc.generated.GrpcLocale getLocales(int index) {
      if (this.localesBuilder_ == null) {
        return this.locales_.get(index);
      } else {
        return this.localesBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Contains set of all `Locale` that could be used for localized `AttributeSchema` or `AssociatedDataSchema`.
     * Enables using `entityLocaleEquals` filtering constraint in query.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcLocale locales = 9;</code>
     */
    public Builder setLocales(
        int index, io.evitadb.externalApi.grpc.generated.GrpcLocale value) {
      if (this.localesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureLocalesIsMutable();
        this.locales_.set(index, value);
        onChanged();
      } else {
        this.localesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Contains set of all `Locale` that could be used for localized `AttributeSchema` or `AssociatedDataSchema`.
     * Enables using `entityLocaleEquals` filtering constraint in query.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcLocale locales = 9;</code>
     */
    public Builder setLocales(
        int index, io.evitadb.externalApi.grpc.generated.GrpcLocale.Builder builderForValue) {
      if (this.localesBuilder_ == null) {
        ensureLocalesIsMutable();
        this.locales_.set(index, builderForValue.build());
        onChanged();
      } else {
        this.localesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Contains set of all `Locale` that could be used for localized `AttributeSchema` or `AssociatedDataSchema`.
     * Enables using `entityLocaleEquals` filtering constraint in query.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcLocale locales = 9;</code>
     */
    public Builder addLocales(io.evitadb.externalApi.grpc.generated.GrpcLocale value) {
      if (this.localesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureLocalesIsMutable();
        this.locales_.add(value);
        onChanged();
      } else {
        this.localesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Contains set of all `Locale` that could be used for localized `AttributeSchema` or `AssociatedDataSchema`.
     * Enables using `entityLocaleEquals` filtering constraint in query.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcLocale locales = 9;</code>
     */
    public Builder addLocales(
        int index, io.evitadb.externalApi.grpc.generated.GrpcLocale value) {
      if (this.localesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureLocalesIsMutable();
        this.locales_.add(index, value);
        onChanged();
      } else {
        this.localesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Contains set of all `Locale` that could be used for localized `AttributeSchema` or `AssociatedDataSchema`.
     * Enables using `entityLocaleEquals` filtering constraint in query.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcLocale locales = 9;</code>
     */
    public Builder addLocales(
        io.evitadb.externalApi.grpc.generated.GrpcLocale.Builder builderForValue) {
      if (this.localesBuilder_ == null) {
        ensureLocalesIsMutable();
        this.locales_.add(builderForValue.build());
        onChanged();
      } else {
        this.localesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Contains set of all `Locale` that could be used for localized `AttributeSchema` or `AssociatedDataSchema`.
     * Enables using `entityLocaleEquals` filtering constraint in query.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcLocale locales = 9;</code>
     */
    public Builder addLocales(
        int index, io.evitadb.externalApi.grpc.generated.GrpcLocale.Builder builderForValue) {
      if (this.localesBuilder_ == null) {
        ensureLocalesIsMutable();
        this.locales_.add(index, builderForValue.build());
        onChanged();
      } else {
        this.localesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Contains set of all `Locale` that could be used for localized `AttributeSchema` or `AssociatedDataSchema`.
     * Enables using `entityLocaleEquals` filtering constraint in query.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcLocale locales = 9;</code>
     */
    public Builder addAllLocales(
        java.lang.Iterable<? extends io.evitadb.externalApi.grpc.generated.GrpcLocale> values) {
      if (this.localesBuilder_ == null) {
        ensureLocalesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, this.locales_);
        onChanged();
      } else {
        this.localesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Contains set of all `Locale` that could be used for localized `AttributeSchema` or `AssociatedDataSchema`.
     * Enables using `entityLocaleEquals` filtering constraint in query.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcLocale locales = 9;</code>
     */
    public Builder clearLocales() {
      if (this.localesBuilder_ == null) {
        this.locales_ = java.util.Collections.emptyList();
        this.bitField0_ = (this.bitField0_ & ~0x00000001);
        onChanged();
      } else {
        this.localesBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Contains set of all `Locale` that could be used for localized `AttributeSchema` or `AssociatedDataSchema`.
     * Enables using `entityLocaleEquals` filtering constraint in query.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcLocale locales = 9;</code>
     */
    public Builder removeLocales(int index) {
      if (this.localesBuilder_ == null) {
        ensureLocalesIsMutable();
        this.locales_.remove(index);
        onChanged();
      } else {
        this.localesBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Contains set of all `Locale` that could be used for localized `AttributeSchema` or `AssociatedDataSchema`.
     * Enables using `entityLocaleEquals` filtering constraint in query.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcLocale locales = 9;</code>
     */
    public io.evitadb.externalApi.grpc.generated.GrpcLocale.Builder getLocalesBuilder(
        int index) {
      return getLocalesFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Contains set of all `Locale` that could be used for localized `AttributeSchema` or `AssociatedDataSchema`.
     * Enables using `entityLocaleEquals` filtering constraint in query.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcLocale locales = 9;</code>
     */
    public io.evitadb.externalApi.grpc.generated.GrpcLocaleOrBuilder getLocalesOrBuilder(
        int index) {
      if (this.localesBuilder_ == null) {
        return this.locales_.get(index);  } else {
        return this.localesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Contains set of all `Locale` that could be used for localized `AttributeSchema` or `AssociatedDataSchema`.
     * Enables using `entityLocaleEquals` filtering constraint in query.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcLocale locales = 9;</code>
     */
    public java.util.List<? extends io.evitadb.externalApi.grpc.generated.GrpcLocaleOrBuilder>
         getLocalesOrBuilderList() {
      if (this.localesBuilder_ != null) {
        return this.localesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(this.locales_);
      }
    }
    /**
     * <pre>
     * Contains set of all `Locale` that could be used for localized `AttributeSchema` or `AssociatedDataSchema`.
     * Enables using `entityLocaleEquals` filtering constraint in query.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcLocale locales = 9;</code>
     */
    public io.evitadb.externalApi.grpc.generated.GrpcLocale.Builder addLocalesBuilder() {
      return getLocalesFieldBuilder().addBuilder(
          io.evitadb.externalApi.grpc.generated.GrpcLocale.getDefaultInstance());
    }
    /**
     * <pre>
     * Contains set of all `Locale` that could be used for localized `AttributeSchema` or `AssociatedDataSchema`.
     * Enables using `entityLocaleEquals` filtering constraint in query.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcLocale locales = 9;</code>
     */
    public io.evitadb.externalApi.grpc.generated.GrpcLocale.Builder addLocalesBuilder(
        int index) {
      return getLocalesFieldBuilder().addBuilder(
          index, io.evitadb.externalApi.grpc.generated.GrpcLocale.getDefaultInstance());
    }
    /**
     * <pre>
     * Contains set of all `Locale` that could be used for localized `AttributeSchema` or `AssociatedDataSchema`.
     * Enables using `entityLocaleEquals` filtering constraint in query.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcLocale locales = 9;</code>
     */
    public java.util.List<io.evitadb.externalApi.grpc.generated.GrpcLocale.Builder>
         getLocalesBuilderList() {
      return getLocalesFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.evitadb.externalApi.grpc.generated.GrpcLocale, io.evitadb.externalApi.grpc.generated.GrpcLocale.Builder, io.evitadb.externalApi.grpc.generated.GrpcLocaleOrBuilder>
        getLocalesFieldBuilder() {
      if (this.localesBuilder_ == null) {
        this.localesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            io.evitadb.externalApi.grpc.generated.GrpcLocale, io.evitadb.externalApi.grpc.generated.GrpcLocale.Builder, io.evitadb.externalApi.grpc.generated.GrpcLocaleOrBuilder>(
                this.locales_,
                ((this.bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        this.locales_ = null;
      }
      return this.localesBuilder_;
    }

    private java.util.List<io.evitadb.externalApi.grpc.generated.GrpcCurrency> currencies_ =
      java.util.Collections.emptyList();
    private void ensureCurrenciesIsMutable() {
      if (!((this.bitField0_ & 0x00000002) != 0)) {
        this.currencies_ = new java.util.ArrayList<io.evitadb.externalApi.grpc.generated.GrpcCurrency>(this.currencies_);
        this.bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.evitadb.externalApi.grpc.generated.GrpcCurrency, io.evitadb.externalApi.grpc.generated.GrpcCurrency.Builder, io.evitadb.externalApi.grpc.generated.GrpcCurrencyOrBuilder> currenciesBuilder_;

    /**
     * <pre>
     * Contains set of all `Currency` that could be used for `prices` in entities of this type.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcCurrency currencies = 10;</code>
     */
    public java.util.List<io.evitadb.externalApi.grpc.generated.GrpcCurrency> getCurrenciesList() {
      if (this.currenciesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(this.currencies_);
      } else {
        return this.currenciesBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Contains set of all `Currency` that could be used for `prices` in entities of this type.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcCurrency currencies = 10;</code>
     */
    public int getCurrenciesCount() {
      if (this.currenciesBuilder_ == null) {
        return this.currencies_.size();
      } else {
        return this.currenciesBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Contains set of all `Currency` that could be used for `prices` in entities of this type.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcCurrency currencies = 10;</code>
     */
    public io.evitadb.externalApi.grpc.generated.GrpcCurrency getCurrencies(int index) {
      if (this.currenciesBuilder_ == null) {
        return this.currencies_.get(index);
      } else {
        return this.currenciesBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Contains set of all `Currency` that could be used for `prices` in entities of this type.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcCurrency currencies = 10;</code>
     */
    public Builder setCurrencies(
        int index, io.evitadb.externalApi.grpc.generated.GrpcCurrency value) {
      if (this.currenciesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCurrenciesIsMutable();
        this.currencies_.set(index, value);
        onChanged();
      } else {
        this.currenciesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Contains set of all `Currency` that could be used for `prices` in entities of this type.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcCurrency currencies = 10;</code>
     */
    public Builder setCurrencies(
        int index, io.evitadb.externalApi.grpc.generated.GrpcCurrency.Builder builderForValue) {
      if (this.currenciesBuilder_ == null) {
        ensureCurrenciesIsMutable();
        this.currencies_.set(index, builderForValue.build());
        onChanged();
      } else {
        this.currenciesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Contains set of all `Currency` that could be used for `prices` in entities of this type.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcCurrency currencies = 10;</code>
     */
    public Builder addCurrencies(io.evitadb.externalApi.grpc.generated.GrpcCurrency value) {
      if (this.currenciesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCurrenciesIsMutable();
        this.currencies_.add(value);
        onChanged();
      } else {
        this.currenciesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Contains set of all `Currency` that could be used for `prices` in entities of this type.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcCurrency currencies = 10;</code>
     */
    public Builder addCurrencies(
        int index, io.evitadb.externalApi.grpc.generated.GrpcCurrency value) {
      if (this.currenciesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureCurrenciesIsMutable();
        this.currencies_.add(index, value);
        onChanged();
      } else {
        this.currenciesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Contains set of all `Currency` that could be used for `prices` in entities of this type.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcCurrency currencies = 10;</code>
     */
    public Builder addCurrencies(
        io.evitadb.externalApi.grpc.generated.GrpcCurrency.Builder builderForValue) {
      if (this.currenciesBuilder_ == null) {
        ensureCurrenciesIsMutable();
        this.currencies_.add(builderForValue.build());
        onChanged();
      } else {
        this.currenciesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Contains set of all `Currency` that could be used for `prices` in entities of this type.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcCurrency currencies = 10;</code>
     */
    public Builder addCurrencies(
        int index, io.evitadb.externalApi.grpc.generated.GrpcCurrency.Builder builderForValue) {
      if (this.currenciesBuilder_ == null) {
        ensureCurrenciesIsMutable();
        this.currencies_.add(index, builderForValue.build());
        onChanged();
      } else {
        this.currenciesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Contains set of all `Currency` that could be used for `prices` in entities of this type.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcCurrency currencies = 10;</code>
     */
    public Builder addAllCurrencies(
        java.lang.Iterable<? extends io.evitadb.externalApi.grpc.generated.GrpcCurrency> values) {
      if (this.currenciesBuilder_ == null) {
        ensureCurrenciesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, this.currencies_);
        onChanged();
      } else {
        this.currenciesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Contains set of all `Currency` that could be used for `prices` in entities of this type.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcCurrency currencies = 10;</code>
     */
    public Builder clearCurrencies() {
      if (this.currenciesBuilder_ == null) {
        this.currencies_ = java.util.Collections.emptyList();
        this.bitField0_ = (this.bitField0_ & ~0x00000002);
        onChanged();
      } else {
        this.currenciesBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Contains set of all `Currency` that could be used for `prices` in entities of this type.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcCurrency currencies = 10;</code>
     */
    public Builder removeCurrencies(int index) {
      if (this.currenciesBuilder_ == null) {
        ensureCurrenciesIsMutable();
        this.currencies_.remove(index);
        onChanged();
      } else {
        this.currenciesBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Contains set of all `Currency` that could be used for `prices` in entities of this type.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcCurrency currencies = 10;</code>
     */
    public io.evitadb.externalApi.grpc.generated.GrpcCurrency.Builder getCurrenciesBuilder(
        int index) {
      return getCurrenciesFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Contains set of all `Currency` that could be used for `prices` in entities of this type.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcCurrency currencies = 10;</code>
     */
    public io.evitadb.externalApi.grpc.generated.GrpcCurrencyOrBuilder getCurrenciesOrBuilder(
        int index) {
      if (this.currenciesBuilder_ == null) {
        return this.currencies_.get(index);  } else {
        return this.currenciesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Contains set of all `Currency` that could be used for `prices` in entities of this type.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcCurrency currencies = 10;</code>
     */
    public java.util.List<? extends io.evitadb.externalApi.grpc.generated.GrpcCurrencyOrBuilder>
         getCurrenciesOrBuilderList() {
      if (this.currenciesBuilder_ != null) {
        return this.currenciesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(this.currencies_);
      }
    }
    /**
     * <pre>
     * Contains set of all `Currency` that could be used for `prices` in entities of this type.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcCurrency currencies = 10;</code>
     */
    public io.evitadb.externalApi.grpc.generated.GrpcCurrency.Builder addCurrenciesBuilder() {
      return getCurrenciesFieldBuilder().addBuilder(
          io.evitadb.externalApi.grpc.generated.GrpcCurrency.getDefaultInstance());
    }
    /**
     * <pre>
     * Contains set of all `Currency` that could be used for `prices` in entities of this type.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcCurrency currencies = 10;</code>
     */
    public io.evitadb.externalApi.grpc.generated.GrpcCurrency.Builder addCurrenciesBuilder(
        int index) {
      return getCurrenciesFieldBuilder().addBuilder(
          index, io.evitadb.externalApi.grpc.generated.GrpcCurrency.getDefaultInstance());
    }
    /**
     * <pre>
     * Contains set of all `Currency` that could be used for `prices` in entities of this type.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcCurrency currencies = 10;</code>
     */
    public java.util.List<io.evitadb.externalApi.grpc.generated.GrpcCurrency.Builder>
         getCurrenciesBuilderList() {
      return getCurrenciesFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.evitadb.externalApi.grpc.generated.GrpcCurrency, io.evitadb.externalApi.grpc.generated.GrpcCurrency.Builder, io.evitadb.externalApi.grpc.generated.GrpcCurrencyOrBuilder>
        getCurrenciesFieldBuilder() {
      if (this.currenciesBuilder_ == null) {
        this.currenciesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            io.evitadb.externalApi.grpc.generated.GrpcCurrency, io.evitadb.externalApi.grpc.generated.GrpcCurrency.Builder, io.evitadb.externalApi.grpc.generated.GrpcCurrencyOrBuilder>(
                this.currencies_,
                ((this.bitField0_ & 0x00000002) != 0),
                getParentForChildren(),
                isClean());
        this.currencies_ = null;
      }
      return this.currenciesBuilder_;
    }

    private com.google.protobuf.MapField<
        java.lang.String, io.evitadb.externalApi.grpc.generated.GrpcAttributeSchema> attributes_;
    private com.google.protobuf.MapField<java.lang.String, io.evitadb.externalApi.grpc.generated.GrpcAttributeSchema>
    internalGetAttributes() {
      if (this.attributes_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            AttributesDefaultEntryHolder.defaultEntry);
      }
      return this.attributes_;
    }
    private com.google.protobuf.MapField<java.lang.String, io.evitadb.externalApi.grpc.generated.GrpcAttributeSchema>
    internalGetMutableAttributes() {
      onChanged();;
      if (this.attributes_ == null) {
        this.attributes_ = com.google.protobuf.MapField.newMapField(
            AttributesDefaultEntryHolder.defaultEntry);
      }
      if (!this.attributes_.isMutable()) {
        this.attributes_ = this.attributes_.copy();
      }
      return this.attributes_;
    }

    public int getAttributesCount() {
      return internalGetAttributes().getMap().size();
    }
    /**
     * <pre>
     * Contains index of all `AttributeSchema` that could be used as attributes of entity of this type.
     * Entity (global) attributes allows defining set of data that are fetched in bulk along with the entity body.
     * Attributes may be indexed for fast filtering (`AttributeSchema.filterable`) or can be used to sort along
     * (`AttributeSchema.sortable`). Attributes are not automatically indexed in order not to waste precious
     * memory space for data that will never be used in search queries.
     * Filtering in attributes is executed by using constraints like `and`,
     * `not`, `attributeEquals`, `attributeContains`
     * and many others. Sorting can be achieved with `attributeNatural` or others.
     * Attributes are not recommended for bigger data as they are all loaded at once requested.
     * Large data that are occasionally used store in `associatedData`.
     * </pre>
     *
     * <code>map&lt;string, .io.evitadb.externalApi.grpc.generated.GrpcAttributeSchema&gt; attributes = 11;</code>
     */

    @java.lang.Override
    public boolean containsAttributes(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetAttributes().getMap().containsKey(key);
    }
    /**
     * Use {@link #getAttributesMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, io.evitadb.externalApi.grpc.generated.GrpcAttributeSchema> getAttributes() {
      return getAttributesMap();
    }
    /**
     * <pre>
     * Contains index of all `AttributeSchema` that could be used as attributes of entity of this type.
     * Entity (global) attributes allows defining set of data that are fetched in bulk along with the entity body.
     * Attributes may be indexed for fast filtering (`AttributeSchema.filterable`) or can be used to sort along
     * (`AttributeSchema.sortable`). Attributes are not automatically indexed in order not to waste precious
     * memory space for data that will never be used in search queries.
     * Filtering in attributes is executed by using constraints like `and`,
     * `not`, `attributeEquals`, `attributeContains`
     * and many others. Sorting can be achieved with `attributeNatural` or others.
     * Attributes are not recommended for bigger data as they are all loaded at once requested.
     * Large data that are occasionally used store in `associatedData`.
     * </pre>
     *
     * <code>map&lt;string, .io.evitadb.externalApi.grpc.generated.GrpcAttributeSchema&gt; attributes = 11;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, io.evitadb.externalApi.grpc.generated.GrpcAttributeSchema> getAttributesMap() {
      return internalGetAttributes().getMap();
    }
    /**
     * <pre>
     * Contains index of all `AttributeSchema` that could be used as attributes of entity of this type.
     * Entity (global) attributes allows defining set of data that are fetched in bulk along with the entity body.
     * Attributes may be indexed for fast filtering (`AttributeSchema.filterable`) or can be used to sort along
     * (`AttributeSchema.sortable`). Attributes are not automatically indexed in order not to waste precious
     * memory space for data that will never be used in search queries.
     * Filtering in attributes is executed by using constraints like `and`,
     * `not`, `attributeEquals`, `attributeContains`
     * and many others. Sorting can be achieved with `attributeNatural` or others.
     * Attributes are not recommended for bigger data as they are all loaded at once requested.
     * Large data that are occasionally used store in `associatedData`.
     * </pre>
     *
     * <code>map&lt;string, .io.evitadb.externalApi.grpc.generated.GrpcAttributeSchema&gt; attributes = 11;</code>
     */
    @java.lang.Override

    public io.evitadb.externalApi.grpc.generated.GrpcAttributeSchema getAttributesOrDefault(
        java.lang.String key,
        io.evitadb.externalApi.grpc.generated.GrpcAttributeSchema defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, io.evitadb.externalApi.grpc.generated.GrpcAttributeSchema> map =
          internalGetAttributes().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Contains index of all `AttributeSchema` that could be used as attributes of entity of this type.
     * Entity (global) attributes allows defining set of data that are fetched in bulk along with the entity body.
     * Attributes may be indexed for fast filtering (`AttributeSchema.filterable`) or can be used to sort along
     * (`AttributeSchema.sortable`). Attributes are not automatically indexed in order not to waste precious
     * memory space for data that will never be used in search queries.
     * Filtering in attributes is executed by using constraints like `and`,
     * `not`, `attributeEquals`, `attributeContains`
     * and many others. Sorting can be achieved with `attributeNatural` or others.
     * Attributes are not recommended for bigger data as they are all loaded at once requested.
     * Large data that are occasionally used store in `associatedData`.
     * </pre>
     *
     * <code>map&lt;string, .io.evitadb.externalApi.grpc.generated.GrpcAttributeSchema&gt; attributes = 11;</code>
     */
    @java.lang.Override

    public io.evitadb.externalApi.grpc.generated.GrpcAttributeSchema getAttributesOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, io.evitadb.externalApi.grpc.generated.GrpcAttributeSchema> map =
          internalGetAttributes().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearAttributes() {
      internalGetMutableAttributes().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <pre>
     * Contains index of all `AttributeSchema` that could be used as attributes of entity of this type.
     * Entity (global) attributes allows defining set of data that are fetched in bulk along with the entity body.
     * Attributes may be indexed for fast filtering (`AttributeSchema.filterable`) or can be used to sort along
     * (`AttributeSchema.sortable`). Attributes are not automatically indexed in order not to waste precious
     * memory space for data that will never be used in search queries.
     * Filtering in attributes is executed by using constraints like `and`,
     * `not`, `attributeEquals`, `attributeContains`
     * and many others. Sorting can be achieved with `attributeNatural` or others.
     * Attributes are not recommended for bigger data as they are all loaded at once requested.
     * Large data that are occasionally used store in `associatedData`.
     * </pre>
     *
     * <code>map&lt;string, .io.evitadb.externalApi.grpc.generated.GrpcAttributeSchema&gt; attributes = 11;</code>
     */

    public Builder removeAttributes(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      internalGetMutableAttributes().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, io.evitadb.externalApi.grpc.generated.GrpcAttributeSchema>
    getMutableAttributes() {
      return internalGetMutableAttributes().getMutableMap();
    }
    /**
     * <pre>
     * Contains index of all `AttributeSchema` that could be used as attributes of entity of this type.
     * Entity (global) attributes allows defining set of data that are fetched in bulk along with the entity body.
     * Attributes may be indexed for fast filtering (`AttributeSchema.filterable`) or can be used to sort along
     * (`AttributeSchema.sortable`). Attributes are not automatically indexed in order not to waste precious
     * memory space for data that will never be used in search queries.
     * Filtering in attributes is executed by using constraints like `and`,
     * `not`, `attributeEquals`, `attributeContains`
     * and many others. Sorting can be achieved with `attributeNatural` or others.
     * Attributes are not recommended for bigger data as they are all loaded at once requested.
     * Large data that are occasionally used store in `associatedData`.
     * </pre>
     *
     * <code>map&lt;string, .io.evitadb.externalApi.grpc.generated.GrpcAttributeSchema&gt; attributes = 11;</code>
     */
    public Builder putAttributes(
        java.lang.String key,
        io.evitadb.externalApi.grpc.generated.GrpcAttributeSchema value) {
      if (key == null) { throw new NullPointerException("map key"); }
      if (value == null) {
  throw new NullPointerException("map value");
}

      internalGetMutableAttributes().getMutableMap()
          .put(key, value);
      return this;
    }
    /**
     * <pre>
     * Contains index of all `AttributeSchema` that could be used as attributes of entity of this type.
     * Entity (global) attributes allows defining set of data that are fetched in bulk along with the entity body.
     * Attributes may be indexed for fast filtering (`AttributeSchema.filterable`) or can be used to sort along
     * (`AttributeSchema.sortable`). Attributes are not automatically indexed in order not to waste precious
     * memory space for data that will never be used in search queries.
     * Filtering in attributes is executed by using constraints like `and`,
     * `not`, `attributeEquals`, `attributeContains`
     * and many others. Sorting can be achieved with `attributeNatural` or others.
     * Attributes are not recommended for bigger data as they are all loaded at once requested.
     * Large data that are occasionally used store in `associatedData`.
     * </pre>
     *
     * <code>map&lt;string, .io.evitadb.externalApi.grpc.generated.GrpcAttributeSchema&gt; attributes = 11;</code>
     */

    public Builder putAllAttributes(
        java.util.Map<java.lang.String, io.evitadb.externalApi.grpc.generated.GrpcAttributeSchema> values) {
      internalGetMutableAttributes().getMutableMap()
          .putAll(values);
      return this;
    }

    private com.google.protobuf.MapField<
        java.lang.String, io.evitadb.externalApi.grpc.generated.GrpcAssociatedDataSchema> associatedData_;
    private com.google.protobuf.MapField<java.lang.String, io.evitadb.externalApi.grpc.generated.GrpcAssociatedDataSchema>
    internalGetAssociatedData() {
      if (this.associatedData_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            AssociatedDataDefaultEntryHolder.defaultEntry);
      }
      return this.associatedData_;
    }
    private com.google.protobuf.MapField<java.lang.String, io.evitadb.externalApi.grpc.generated.GrpcAssociatedDataSchema>
    internalGetMutableAssociatedData() {
      onChanged();;
      if (this.associatedData_ == null) {
        this.associatedData_ = com.google.protobuf.MapField.newMapField(
            AssociatedDataDefaultEntryHolder.defaultEntry);
      }
      if (!this.associatedData_.isMutable()) {
        this.associatedData_ = this.associatedData_.copy();
      }
      return this.associatedData_;
    }

    public int getAssociatedDataCount() {
      return internalGetAssociatedData().getMap().size();
    }
    /**
     * <pre>
     * Contains index of all `AssociatedDataSchema` that could be used as associated data of entity of this type.
     * Associated data carry additional data entries that are never used for filtering / sorting but may be needed to be fetched
     * along with entity in order to present data to the target consumer (i.e. user / API / bot). Associated data may be stored
     * in slower storage and may contain wide range of data types - from small ones (i.e. numbers, strings, dates) up to large
     * binary arrays representing entire files (i.e. pictures, documents).
     * The search query must contain specific associated data fields in order
     * associated data are fetched along with the entity. Associated data are stored and fetched separately by their name.
     * </pre>
     *
     * <code>map&lt;string, .io.evitadb.externalApi.grpc.generated.GrpcAssociatedDataSchema&gt; associatedData = 12;</code>
     */

    @java.lang.Override
    public boolean containsAssociatedData(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetAssociatedData().getMap().containsKey(key);
    }
    /**
     * Use {@link #getAssociatedDataMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, io.evitadb.externalApi.grpc.generated.GrpcAssociatedDataSchema> getAssociatedData() {
      return getAssociatedDataMap();
    }
    /**
     * <pre>
     * Contains index of all `AssociatedDataSchema` that could be used as associated data of entity of this type.
     * Associated data carry additional data entries that are never used for filtering / sorting but may be needed to be fetched
     * along with entity in order to present data to the target consumer (i.e. user / API / bot). Associated data may be stored
     * in slower storage and may contain wide range of data types - from small ones (i.e. numbers, strings, dates) up to large
     * binary arrays representing entire files (i.e. pictures, documents).
     * The search query must contain specific associated data fields in order
     * associated data are fetched along with the entity. Associated data are stored and fetched separately by their name.
     * </pre>
     *
     * <code>map&lt;string, .io.evitadb.externalApi.grpc.generated.GrpcAssociatedDataSchema&gt; associatedData = 12;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, io.evitadb.externalApi.grpc.generated.GrpcAssociatedDataSchema> getAssociatedDataMap() {
      return internalGetAssociatedData().getMap();
    }
    /**
     * <pre>
     * Contains index of all `AssociatedDataSchema` that could be used as associated data of entity of this type.
     * Associated data carry additional data entries that are never used for filtering / sorting but may be needed to be fetched
     * along with entity in order to present data to the target consumer (i.e. user / API / bot). Associated data may be stored
     * in slower storage and may contain wide range of data types - from small ones (i.e. numbers, strings, dates) up to large
     * binary arrays representing entire files (i.e. pictures, documents).
     * The search query must contain specific associated data fields in order
     * associated data are fetched along with the entity. Associated data are stored and fetched separately by their name.
     * </pre>
     *
     * <code>map&lt;string, .io.evitadb.externalApi.grpc.generated.GrpcAssociatedDataSchema&gt; associatedData = 12;</code>
     */
    @java.lang.Override

    public io.evitadb.externalApi.grpc.generated.GrpcAssociatedDataSchema getAssociatedDataOrDefault(
        java.lang.String key,
        io.evitadb.externalApi.grpc.generated.GrpcAssociatedDataSchema defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, io.evitadb.externalApi.grpc.generated.GrpcAssociatedDataSchema> map =
          internalGetAssociatedData().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Contains index of all `AssociatedDataSchema` that could be used as associated data of entity of this type.
     * Associated data carry additional data entries that are never used for filtering / sorting but may be needed to be fetched
     * along with entity in order to present data to the target consumer (i.e. user / API / bot). Associated data may be stored
     * in slower storage and may contain wide range of data types - from small ones (i.e. numbers, strings, dates) up to large
     * binary arrays representing entire files (i.e. pictures, documents).
     * The search query must contain specific associated data fields in order
     * associated data are fetched along with the entity. Associated data are stored and fetched separately by their name.
     * </pre>
     *
     * <code>map&lt;string, .io.evitadb.externalApi.grpc.generated.GrpcAssociatedDataSchema&gt; associatedData = 12;</code>
     */
    @java.lang.Override

    public io.evitadb.externalApi.grpc.generated.GrpcAssociatedDataSchema getAssociatedDataOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, io.evitadb.externalApi.grpc.generated.GrpcAssociatedDataSchema> map =
          internalGetAssociatedData().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearAssociatedData() {
      internalGetMutableAssociatedData().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <pre>
     * Contains index of all `AssociatedDataSchema` that could be used as associated data of entity of this type.
     * Associated data carry additional data entries that are never used for filtering / sorting but may be needed to be fetched
     * along with entity in order to present data to the target consumer (i.e. user / API / bot). Associated data may be stored
     * in slower storage and may contain wide range of data types - from small ones (i.e. numbers, strings, dates) up to large
     * binary arrays representing entire files (i.e. pictures, documents).
     * The search query must contain specific associated data fields in order
     * associated data are fetched along with the entity. Associated data are stored and fetched separately by their name.
     * </pre>
     *
     * <code>map&lt;string, .io.evitadb.externalApi.grpc.generated.GrpcAssociatedDataSchema&gt; associatedData = 12;</code>
     */

    public Builder removeAssociatedData(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      internalGetMutableAssociatedData().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, io.evitadb.externalApi.grpc.generated.GrpcAssociatedDataSchema>
    getMutableAssociatedData() {
      return internalGetMutableAssociatedData().getMutableMap();
    }
    /**
     * <pre>
     * Contains index of all `AssociatedDataSchema` that could be used as associated data of entity of this type.
     * Associated data carry additional data entries that are never used for filtering / sorting but may be needed to be fetched
     * along with entity in order to present data to the target consumer (i.e. user / API / bot). Associated data may be stored
     * in slower storage and may contain wide range of data types - from small ones (i.e. numbers, strings, dates) up to large
     * binary arrays representing entire files (i.e. pictures, documents).
     * The search query must contain specific associated data fields in order
     * associated data are fetched along with the entity. Associated data are stored and fetched separately by their name.
     * </pre>
     *
     * <code>map&lt;string, .io.evitadb.externalApi.grpc.generated.GrpcAssociatedDataSchema&gt; associatedData = 12;</code>
     */
    public Builder putAssociatedData(
        java.lang.String key,
        io.evitadb.externalApi.grpc.generated.GrpcAssociatedDataSchema value) {
      if (key == null) { throw new NullPointerException("map key"); }
      if (value == null) {
  throw new NullPointerException("map value");
}

      internalGetMutableAssociatedData().getMutableMap()
          .put(key, value);
      return this;
    }
    /**
     * <pre>
     * Contains index of all `AssociatedDataSchema` that could be used as associated data of entity of this type.
     * Associated data carry additional data entries that are never used for filtering / sorting but may be needed to be fetched
     * along with entity in order to present data to the target consumer (i.e. user / API / bot). Associated data may be stored
     * in slower storage and may contain wide range of data types - from small ones (i.e. numbers, strings, dates) up to large
     * binary arrays representing entire files (i.e. pictures, documents).
     * The search query must contain specific associated data fields in order
     * associated data are fetched along with the entity. Associated data are stored and fetched separately by their name.
     * </pre>
     *
     * <code>map&lt;string, .io.evitadb.externalApi.grpc.generated.GrpcAssociatedDataSchema&gt; associatedData = 12;</code>
     */

    public Builder putAllAssociatedData(
        java.util.Map<java.lang.String, io.evitadb.externalApi.grpc.generated.GrpcAssociatedDataSchema> values) {
      internalGetMutableAssociatedData().getMutableMap()
          .putAll(values);
      return this;
    }

    private com.google.protobuf.MapField<
        java.lang.String, io.evitadb.externalApi.grpc.generated.GrpcReferenceSchema> references_;
    private com.google.protobuf.MapField<java.lang.String, io.evitadb.externalApi.grpc.generated.GrpcReferenceSchema>
    internalGetReferences() {
      if (this.references_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            ReferencesDefaultEntryHolder.defaultEntry);
      }
      return this.references_;
    }
    private com.google.protobuf.MapField<java.lang.String, io.evitadb.externalApi.grpc.generated.GrpcReferenceSchema>
    internalGetMutableReferences() {
      onChanged();;
      if (this.references_ == null) {
        this.references_ = com.google.protobuf.MapField.newMapField(
            ReferencesDefaultEntryHolder.defaultEntry);
      }
      if (!this.references_.isMutable()) {
        this.references_ = this.references_.copy();
      }
      return this.references_;
    }

    public int getReferencesCount() {
      return internalGetReferences().getMap().size();
    }
    /**
     * <pre>
     * Contains index of all `ReferenceSchema` that could be used as references of entity of this type.
     * References refer to other entities (of same or different entity type).
     * Allows entity filtering (but not sorting) of the entities by using `facetInSet` constraint
     * and statistics computation when `facetStatistics` extra result is requested. Reference
     * is uniquely represented by int positive number (max. (2^63)-1) and entity type and can be
     * part of multiple reference groups, that are also represented by int and entity type.
     * Reference id in one entity is unique and belongs to single reference group id. Among multiple entities reference may be part
     * of different reference groups. Referenced entity type may represent type of another Evita entity or may refer
     * to anything unknown to Evita that posses unique int key and is maintained by external systems (fe. tag assignment,
     * group assignment, category assignment, stock assignment and so on). Not all these data needs to be present in
     * Evita.
     * References may carry additional key-value data linked to this entity relation (fe. item count present on certain stock).
     * The search query must contain specific `referenceContent` requirement in order
     * references are fetched along with the entity.
     * </pre>
     *
     * <code>map&lt;string, .io.evitadb.externalApi.grpc.generated.GrpcReferenceSchema&gt; references = 13;</code>
     */

    @java.lang.Override
    public boolean containsReferences(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetReferences().getMap().containsKey(key);
    }
    /**
     * Use {@link #getReferencesMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, io.evitadb.externalApi.grpc.generated.GrpcReferenceSchema> getReferences() {
      return getReferencesMap();
    }
    /**
     * <pre>
     * Contains index of all `ReferenceSchema` that could be used as references of entity of this type.
     * References refer to other entities (of same or different entity type).
     * Allows entity filtering (but not sorting) of the entities by using `facetInSet` constraint
     * and statistics computation when `facetStatistics` extra result is requested. Reference
     * is uniquely represented by int positive number (max. (2^63)-1) and entity type and can be
     * part of multiple reference groups, that are also represented by int and entity type.
     * Reference id in one entity is unique and belongs to single reference group id. Among multiple entities reference may be part
     * of different reference groups. Referenced entity type may represent type of another Evita entity or may refer
     * to anything unknown to Evita that posses unique int key and is maintained by external systems (fe. tag assignment,
     * group assignment, category assignment, stock assignment and so on). Not all these data needs to be present in
     * Evita.
     * References may carry additional key-value data linked to this entity relation (fe. item count present on certain stock).
     * The search query must contain specific `referenceContent` requirement in order
     * references are fetched along with the entity.
     * </pre>
     *
     * <code>map&lt;string, .io.evitadb.externalApi.grpc.generated.GrpcReferenceSchema&gt; references = 13;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, io.evitadb.externalApi.grpc.generated.GrpcReferenceSchema> getReferencesMap() {
      return internalGetReferences().getMap();
    }
    /**
     * <pre>
     * Contains index of all `ReferenceSchema` that could be used as references of entity of this type.
     * References refer to other entities (of same or different entity type).
     * Allows entity filtering (but not sorting) of the entities by using `facetInSet` constraint
     * and statistics computation when `facetStatistics` extra result is requested. Reference
     * is uniquely represented by int positive number (max. (2^63)-1) and entity type and can be
     * part of multiple reference groups, that are also represented by int and entity type.
     * Reference id in one entity is unique and belongs to single reference group id. Among multiple entities reference may be part
     * of different reference groups. Referenced entity type may represent type of another Evita entity or may refer
     * to anything unknown to Evita that posses unique int key and is maintained by external systems (fe. tag assignment,
     * group assignment, category assignment, stock assignment and so on). Not all these data needs to be present in
     * Evita.
     * References may carry additional key-value data linked to this entity relation (fe. item count present on certain stock).
     * The search query must contain specific `referenceContent` requirement in order
     * references are fetched along with the entity.
     * </pre>
     *
     * <code>map&lt;string, .io.evitadb.externalApi.grpc.generated.GrpcReferenceSchema&gt; references = 13;</code>
     */
    @java.lang.Override

    public io.evitadb.externalApi.grpc.generated.GrpcReferenceSchema getReferencesOrDefault(
        java.lang.String key,
        io.evitadb.externalApi.grpc.generated.GrpcReferenceSchema defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, io.evitadb.externalApi.grpc.generated.GrpcReferenceSchema> map =
          internalGetReferences().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Contains index of all `ReferenceSchema` that could be used as references of entity of this type.
     * References refer to other entities (of same or different entity type).
     * Allows entity filtering (but not sorting) of the entities by using `facetInSet` constraint
     * and statistics computation when `facetStatistics` extra result is requested. Reference
     * is uniquely represented by int positive number (max. (2^63)-1) and entity type and can be
     * part of multiple reference groups, that are also represented by int and entity type.
     * Reference id in one entity is unique and belongs to single reference group id. Among multiple entities reference may be part
     * of different reference groups. Referenced entity type may represent type of another Evita entity or may refer
     * to anything unknown to Evita that posses unique int key and is maintained by external systems (fe. tag assignment,
     * group assignment, category assignment, stock assignment and so on). Not all these data needs to be present in
     * Evita.
     * References may carry additional key-value data linked to this entity relation (fe. item count present on certain stock).
     * The search query must contain specific `referenceContent` requirement in order
     * references are fetched along with the entity.
     * </pre>
     *
     * <code>map&lt;string, .io.evitadb.externalApi.grpc.generated.GrpcReferenceSchema&gt; references = 13;</code>
     */
    @java.lang.Override

    public io.evitadb.externalApi.grpc.generated.GrpcReferenceSchema getReferencesOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, io.evitadb.externalApi.grpc.generated.GrpcReferenceSchema> map =
          internalGetReferences().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearReferences() {
      internalGetMutableReferences().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <pre>
     * Contains index of all `ReferenceSchema` that could be used as references of entity of this type.
     * References refer to other entities (of same or different entity type).
     * Allows entity filtering (but not sorting) of the entities by using `facetInSet` constraint
     * and statistics computation when `facetStatistics` extra result is requested. Reference
     * is uniquely represented by int positive number (max. (2^63)-1) and entity type and can be
     * part of multiple reference groups, that are also represented by int and entity type.
     * Reference id in one entity is unique and belongs to single reference group id. Among multiple entities reference may be part
     * of different reference groups. Referenced entity type may represent type of another Evita entity or may refer
     * to anything unknown to Evita that posses unique int key and is maintained by external systems (fe. tag assignment,
     * group assignment, category assignment, stock assignment and so on). Not all these data needs to be present in
     * Evita.
     * References may carry additional key-value data linked to this entity relation (fe. item count present on certain stock).
     * The search query must contain specific `referenceContent` requirement in order
     * references are fetched along with the entity.
     * </pre>
     *
     * <code>map&lt;string, .io.evitadb.externalApi.grpc.generated.GrpcReferenceSchema&gt; references = 13;</code>
     */

    public Builder removeReferences(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      internalGetMutableReferences().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, io.evitadb.externalApi.grpc.generated.GrpcReferenceSchema>
    getMutableReferences() {
      return internalGetMutableReferences().getMutableMap();
    }
    /**
     * <pre>
     * Contains index of all `ReferenceSchema` that could be used as references of entity of this type.
     * References refer to other entities (of same or different entity type).
     * Allows entity filtering (but not sorting) of the entities by using `facetInSet` constraint
     * and statistics computation when `facetStatistics` extra result is requested. Reference
     * is uniquely represented by int positive number (max. (2^63)-1) and entity type and can be
     * part of multiple reference groups, that are also represented by int and entity type.
     * Reference id in one entity is unique and belongs to single reference group id. Among multiple entities reference may be part
     * of different reference groups. Referenced entity type may represent type of another Evita entity or may refer
     * to anything unknown to Evita that posses unique int key and is maintained by external systems (fe. tag assignment,
     * group assignment, category assignment, stock assignment and so on). Not all these data needs to be present in
     * Evita.
     * References may carry additional key-value data linked to this entity relation (fe. item count present on certain stock).
     * The search query must contain specific `referenceContent` requirement in order
     * references are fetched along with the entity.
     * </pre>
     *
     * <code>map&lt;string, .io.evitadb.externalApi.grpc.generated.GrpcReferenceSchema&gt; references = 13;</code>
     */
    public Builder putReferences(
        java.lang.String key,
        io.evitadb.externalApi.grpc.generated.GrpcReferenceSchema value) {
      if (key == null) { throw new NullPointerException("map key"); }
      if (value == null) {
  throw new NullPointerException("map value");
}

      internalGetMutableReferences().getMutableMap()
          .put(key, value);
      return this;
    }
    /**
     * <pre>
     * Contains index of all `ReferenceSchema` that could be used as references of entity of this type.
     * References refer to other entities (of same or different entity type).
     * Allows entity filtering (but not sorting) of the entities by using `facetInSet` constraint
     * and statistics computation when `facetStatistics` extra result is requested. Reference
     * is uniquely represented by int positive number (max. (2^63)-1) and entity type and can be
     * part of multiple reference groups, that are also represented by int and entity type.
     * Reference id in one entity is unique and belongs to single reference group id. Among multiple entities reference may be part
     * of different reference groups. Referenced entity type may represent type of another Evita entity or may refer
     * to anything unknown to Evita that posses unique int key and is maintained by external systems (fe. tag assignment,
     * group assignment, category assignment, stock assignment and so on). Not all these data needs to be present in
     * Evita.
     * References may carry additional key-value data linked to this entity relation (fe. item count present on certain stock).
     * The search query must contain specific `referenceContent` requirement in order
     * references are fetched along with the entity.
     * </pre>
     *
     * <code>map&lt;string, .io.evitadb.externalApi.grpc.generated.GrpcReferenceSchema&gt; references = 13;</code>
     */

    public Builder putAllReferences(
        java.util.Map<java.lang.String, io.evitadb.externalApi.grpc.generated.GrpcReferenceSchema> values) {
      internalGetMutableReferences().getMutableMap()
          .putAll(values);
      return this;
    }

    private java.util.List<java.lang.Integer> evolutionMode_ =
      java.util.Collections.emptyList();
    private void ensureEvolutionModeIsMutable() {
      if (!((this.bitField0_ & 0x00000020) != 0)) {
        this.evolutionMode_ = new java.util.ArrayList<java.lang.Integer>(this.evolutionMode_);
        this.bitField0_ |= 0x00000020;
      }
    }
    /**
     * <pre>
     * Evolution mode allows to specify how strict is evitaDB when unknown information is presented to her for the first
     * time. When no evolution mode is set, each violation of the `EntitySchema` is
     * reported by an exception. This behaviour can be changed by this evolution mode however.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEvolutionMode evolutionMode = 14;</code>
     * @return A list containing the evolutionMode.
     */
    public java.util.List<io.evitadb.externalApi.grpc.generated.GrpcEvolutionMode> getEvolutionModeList() {
      return new com.google.protobuf.Internal.ListAdapter<
          java.lang.Integer, io.evitadb.externalApi.grpc.generated.GrpcEvolutionMode>(this.evolutionMode_, evolutionMode_converter_);
    }
    /**
     * <pre>
     * Evolution mode allows to specify how strict is evitaDB when unknown information is presented to her for the first
     * time. When no evolution mode is set, each violation of the `EntitySchema` is
     * reported by an exception. This behaviour can be changed by this evolution mode however.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEvolutionMode evolutionMode = 14;</code>
     * @return The count of evolutionMode.
     */
    public int getEvolutionModeCount() {
      return this.evolutionMode_.size();
    }
    /**
     * <pre>
     * Evolution mode allows to specify how strict is evitaDB when unknown information is presented to her for the first
     * time. When no evolution mode is set, each violation of the `EntitySchema` is
     * reported by an exception. This behaviour can be changed by this evolution mode however.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEvolutionMode evolutionMode = 14;</code>
     * @param index The index of the element to return.
     * @return The evolutionMode at the given index.
     */
    public io.evitadb.externalApi.grpc.generated.GrpcEvolutionMode getEvolutionMode(int index) {
      return evolutionMode_converter_.convert(this.evolutionMode_.get(index));
    }
    /**
     * <pre>
     * Evolution mode allows to specify how strict is evitaDB when unknown information is presented to her for the first
     * time. When no evolution mode is set, each violation of the `EntitySchema` is
     * reported by an exception. This behaviour can be changed by this evolution mode however.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEvolutionMode evolutionMode = 14;</code>
     * @param index The index to set the value at.
     * @param value The evolutionMode to set.
     * @return This builder for chaining.
     */
    public Builder setEvolutionMode(
        int index, io.evitadb.externalApi.grpc.generated.GrpcEvolutionMode value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureEvolutionModeIsMutable();
      this.evolutionMode_.set(index, value.getNumber());
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Evolution mode allows to specify how strict is evitaDB when unknown information is presented to her for the first
     * time. When no evolution mode is set, each violation of the `EntitySchema` is
     * reported by an exception. This behaviour can be changed by this evolution mode however.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEvolutionMode evolutionMode = 14;</code>
     * @param value The evolutionMode to add.
     * @return This builder for chaining.
     */
    public Builder addEvolutionMode(io.evitadb.externalApi.grpc.generated.GrpcEvolutionMode value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureEvolutionModeIsMutable();
      this.evolutionMode_.add(value.getNumber());
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Evolution mode allows to specify how strict is evitaDB when unknown information is presented to her for the first
     * time. When no evolution mode is set, each violation of the `EntitySchema` is
     * reported by an exception. This behaviour can be changed by this evolution mode however.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEvolutionMode evolutionMode = 14;</code>
     * @param values The evolutionMode to add.
     * @return This builder for chaining.
     */
    public Builder addAllEvolutionMode(
        java.lang.Iterable<? extends io.evitadb.externalApi.grpc.generated.GrpcEvolutionMode> values) {
      ensureEvolutionModeIsMutable();
      for (io.evitadb.externalApi.grpc.generated.GrpcEvolutionMode value : values) {
        this.evolutionMode_.add(value.getNumber());
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Evolution mode allows to specify how strict is evitaDB when unknown information is presented to her for the first
     * time. When no evolution mode is set, each violation of the `EntitySchema` is
     * reported by an exception. This behaviour can be changed by this evolution mode however.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEvolutionMode evolutionMode = 14;</code>
     * @return This builder for chaining.
     */
    public Builder clearEvolutionMode() {
      this.evolutionMode_ = java.util.Collections.emptyList();
      this.bitField0_ = (this.bitField0_ & ~0x00000020);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Evolution mode allows to specify how strict is evitaDB when unknown information is presented to her for the first
     * time. When no evolution mode is set, each violation of the `EntitySchema` is
     * reported by an exception. This behaviour can be changed by this evolution mode however.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEvolutionMode evolutionMode = 14;</code>
     * @return A list containing the enum numeric values on the wire for evolutionMode.
     */
    public java.util.List<java.lang.Integer>
    getEvolutionModeValueList() {
      return java.util.Collections.unmodifiableList(this.evolutionMode_);
    }
    /**
     * <pre>
     * Evolution mode allows to specify how strict is evitaDB when unknown information is presented to her for the first
     * time. When no evolution mode is set, each violation of the `EntitySchema` is
     * reported by an exception. This behaviour can be changed by this evolution mode however.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEvolutionMode evolutionMode = 14;</code>
     * @param index The index of the value to return.
     * @return The enum numeric value on the wire of evolutionMode at the given index.
     */
    public int getEvolutionModeValue(int index) {
      return this.evolutionMode_.get(index);
    }
    /**
     * <pre>
     * Evolution mode allows to specify how strict is evitaDB when unknown information is presented to her for the first
     * time. When no evolution mode is set, each violation of the `EntitySchema` is
     * reported by an exception. This behaviour can be changed by this evolution mode however.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEvolutionMode evolutionMode = 14;</code>
     * @param index The index of the value to return.
     * @return The enum numeric value on the wire of evolutionMode at the given index.
     * @return This builder for chaining.
     */
    public Builder setEvolutionModeValue(
        int index, int value) {
      ensureEvolutionModeIsMutable();
      this.evolutionMode_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Evolution mode allows to specify how strict is evitaDB when unknown information is presented to her for the first
     * time. When no evolution mode is set, each violation of the `EntitySchema` is
     * reported by an exception. This behaviour can be changed by this evolution mode however.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEvolutionMode evolutionMode = 14;</code>
     * @param value The enum numeric value on the wire for evolutionMode to add.
     * @return This builder for chaining.
     */
    public Builder addEvolutionModeValue(int value) {
      ensureEvolutionModeIsMutable();
      this.evolutionMode_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Evolution mode allows to specify how strict is evitaDB when unknown information is presented to her for the first
     * time. When no evolution mode is set, each violation of the `EntitySchema` is
     * reported by an exception. This behaviour can be changed by this evolution mode however.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEvolutionMode evolutionMode = 14;</code>
     * @param values The enum numeric values on the wire for evolutionMode to add.
     * @return This builder for chaining.
     */
    public Builder addAllEvolutionModeValue(
        java.lang.Iterable<java.lang.Integer> values) {
      ensureEvolutionModeIsMutable();
      for (int value : values) {
        this.evolutionMode_.add(value);
      }
      onChanged();
      return this;
    }

    private com.google.protobuf.MapField<
        java.lang.String, io.evitadb.externalApi.grpc.generated.GrpcSortableAttributeCompoundSchema> sortableAttributeCompounds_;
    private com.google.protobuf.MapField<java.lang.String, io.evitadb.externalApi.grpc.generated.GrpcSortableAttributeCompoundSchema>
    internalGetSortableAttributeCompounds() {
      if (this.sortableAttributeCompounds_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            SortableAttributeCompoundsDefaultEntryHolder.defaultEntry);
      }
      return this.sortableAttributeCompounds_;
    }
    private com.google.protobuf.MapField<java.lang.String, io.evitadb.externalApi.grpc.generated.GrpcSortableAttributeCompoundSchema>
    internalGetMutableSortableAttributeCompounds() {
      onChanged();;
      if (this.sortableAttributeCompounds_ == null) {
        this.sortableAttributeCompounds_ = com.google.protobuf.MapField.newMapField(
            SortableAttributeCompoundsDefaultEntryHolder.defaultEntry);
      }
      if (!this.sortableAttributeCompounds_.isMutable()) {
        this.sortableAttributeCompounds_ = this.sortableAttributeCompounds_.copy();
      }
      return this.sortableAttributeCompounds_;
    }

    public int getSortableAttributeCompoundsCount() {
      return internalGetSortableAttributeCompounds().getMap().size();
    }
    /**
     * <pre>
     * Contains index of definitions of all sortable attribute compounds defined in this schema.
     * </pre>
     *
     * <code>map&lt;string, .io.evitadb.externalApi.grpc.generated.GrpcSortableAttributeCompoundSchema&gt; sortableAttributeCompounds = 15;</code>
     */

    @java.lang.Override
    public boolean containsSortableAttributeCompounds(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetSortableAttributeCompounds().getMap().containsKey(key);
    }
    /**
     * Use {@link #getSortableAttributeCompoundsMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, io.evitadb.externalApi.grpc.generated.GrpcSortableAttributeCompoundSchema> getSortableAttributeCompounds() {
      return getSortableAttributeCompoundsMap();
    }
    /**
     * <pre>
     * Contains index of definitions of all sortable attribute compounds defined in this schema.
     * </pre>
     *
     * <code>map&lt;string, .io.evitadb.externalApi.grpc.generated.GrpcSortableAttributeCompoundSchema&gt; sortableAttributeCompounds = 15;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.String, io.evitadb.externalApi.grpc.generated.GrpcSortableAttributeCompoundSchema> getSortableAttributeCompoundsMap() {
      return internalGetSortableAttributeCompounds().getMap();
    }
    /**
     * <pre>
     * Contains index of definitions of all sortable attribute compounds defined in this schema.
     * </pre>
     *
     * <code>map&lt;string, .io.evitadb.externalApi.grpc.generated.GrpcSortableAttributeCompoundSchema&gt; sortableAttributeCompounds = 15;</code>
     */
    @java.lang.Override

    public io.evitadb.externalApi.grpc.generated.GrpcSortableAttributeCompoundSchema getSortableAttributeCompoundsOrDefault(
        java.lang.String key,
        io.evitadb.externalApi.grpc.generated.GrpcSortableAttributeCompoundSchema defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, io.evitadb.externalApi.grpc.generated.GrpcSortableAttributeCompoundSchema> map =
          internalGetSortableAttributeCompounds().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Contains index of definitions of all sortable attribute compounds defined in this schema.
     * </pre>
     *
     * <code>map&lt;string, .io.evitadb.externalApi.grpc.generated.GrpcSortableAttributeCompoundSchema&gt; sortableAttributeCompounds = 15;</code>
     */
    @java.lang.Override

    public io.evitadb.externalApi.grpc.generated.GrpcSortableAttributeCompoundSchema getSortableAttributeCompoundsOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, io.evitadb.externalApi.grpc.generated.GrpcSortableAttributeCompoundSchema> map =
          internalGetSortableAttributeCompounds().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearSortableAttributeCompounds() {
      internalGetMutableSortableAttributeCompounds().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <pre>
     * Contains index of definitions of all sortable attribute compounds defined in this schema.
     * </pre>
     *
     * <code>map&lt;string, .io.evitadb.externalApi.grpc.generated.GrpcSortableAttributeCompoundSchema&gt; sortableAttributeCompounds = 15;</code>
     */

    public Builder removeSortableAttributeCompounds(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      internalGetMutableSortableAttributeCompounds().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, io.evitadb.externalApi.grpc.generated.GrpcSortableAttributeCompoundSchema>
    getMutableSortableAttributeCompounds() {
      return internalGetMutableSortableAttributeCompounds().getMutableMap();
    }
    /**
     * <pre>
     * Contains index of definitions of all sortable attribute compounds defined in this schema.
     * </pre>
     *
     * <code>map&lt;string, .io.evitadb.externalApi.grpc.generated.GrpcSortableAttributeCompoundSchema&gt; sortableAttributeCompounds = 15;</code>
     */
    public Builder putSortableAttributeCompounds(
        java.lang.String key,
        io.evitadb.externalApi.grpc.generated.GrpcSortableAttributeCompoundSchema value) {
      if (key == null) { throw new NullPointerException("map key"); }
      if (value == null) {
  throw new NullPointerException("map value");
}

      internalGetMutableSortableAttributeCompounds().getMutableMap()
          .put(key, value);
      return this;
    }
    /**
     * <pre>
     * Contains index of definitions of all sortable attribute compounds defined in this schema.
     * </pre>
     *
     * <code>map&lt;string, .io.evitadb.externalApi.grpc.generated.GrpcSortableAttributeCompoundSchema&gt; sortableAttributeCompounds = 15;</code>
     */

    public Builder putAllSortableAttributeCompounds(
        java.util.Map<java.lang.String, io.evitadb.externalApi.grpc.generated.GrpcSortableAttributeCompoundSchema> values) {
      internalGetMutableSortableAttributeCompounds().getMutableMap()
          .putAll(values);
      return this;
    }

    private java.util.List<io.evitadb.externalApi.grpc.generated.GrpcNameVariant> nameVariant_ =
      java.util.Collections.emptyList();
    private void ensureNameVariantIsMutable() {
      if (!((this.bitField0_ & 0x00000080) != 0)) {
        this.nameVariant_ = new java.util.ArrayList<io.evitadb.externalApi.grpc.generated.GrpcNameVariant>(this.nameVariant_);
        this.bitField0_ |= 0x00000080;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.evitadb.externalApi.grpc.generated.GrpcNameVariant, io.evitadb.externalApi.grpc.generated.GrpcNameVariant.Builder, io.evitadb.externalApi.grpc.generated.GrpcNameVariantOrBuilder> nameVariantBuilder_;

    /**
     * <pre>
     * Contains entity type converted to different naming conventions.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcNameVariant nameVariant = 16;</code>
     */
    public java.util.List<io.evitadb.externalApi.grpc.generated.GrpcNameVariant> getNameVariantList() {
      if (this.nameVariantBuilder_ == null) {
        return java.util.Collections.unmodifiableList(this.nameVariant_);
      } else {
        return this.nameVariantBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Contains entity type converted to different naming conventions.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcNameVariant nameVariant = 16;</code>
     */
    public int getNameVariantCount() {
      if (this.nameVariantBuilder_ == null) {
        return this.nameVariant_.size();
      } else {
        return this.nameVariantBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Contains entity type converted to different naming conventions.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcNameVariant nameVariant = 16;</code>
     */
    public io.evitadb.externalApi.grpc.generated.GrpcNameVariant getNameVariant(int index) {
      if (this.nameVariantBuilder_ == null) {
        return this.nameVariant_.get(index);
      } else {
        return this.nameVariantBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Contains entity type converted to different naming conventions.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcNameVariant nameVariant = 16;</code>
     */
    public Builder setNameVariant(
        int index, io.evitadb.externalApi.grpc.generated.GrpcNameVariant value) {
      if (this.nameVariantBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureNameVariantIsMutable();
        this.nameVariant_.set(index, value);
        onChanged();
      } else {
        this.nameVariantBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Contains entity type converted to different naming conventions.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcNameVariant nameVariant = 16;</code>
     */
    public Builder setNameVariant(
        int index, io.evitadb.externalApi.grpc.generated.GrpcNameVariant.Builder builderForValue) {
      if (this.nameVariantBuilder_ == null) {
        ensureNameVariantIsMutable();
        this.nameVariant_.set(index, builderForValue.build());
        onChanged();
      } else {
        this.nameVariantBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Contains entity type converted to different naming conventions.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcNameVariant nameVariant = 16;</code>
     */
    public Builder addNameVariant(io.evitadb.externalApi.grpc.generated.GrpcNameVariant value) {
      if (this.nameVariantBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureNameVariantIsMutable();
        this.nameVariant_.add(value);
        onChanged();
      } else {
        this.nameVariantBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Contains entity type converted to different naming conventions.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcNameVariant nameVariant = 16;</code>
     */
    public Builder addNameVariant(
        int index, io.evitadb.externalApi.grpc.generated.GrpcNameVariant value) {
      if (this.nameVariantBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureNameVariantIsMutable();
        this.nameVariant_.add(index, value);
        onChanged();
      } else {
        this.nameVariantBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Contains entity type converted to different naming conventions.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcNameVariant nameVariant = 16;</code>
     */
    public Builder addNameVariant(
        io.evitadb.externalApi.grpc.generated.GrpcNameVariant.Builder builderForValue) {
      if (this.nameVariantBuilder_ == null) {
        ensureNameVariantIsMutable();
        this.nameVariant_.add(builderForValue.build());
        onChanged();
      } else {
        this.nameVariantBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Contains entity type converted to different naming conventions.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcNameVariant nameVariant = 16;</code>
     */
    public Builder addNameVariant(
        int index, io.evitadb.externalApi.grpc.generated.GrpcNameVariant.Builder builderForValue) {
      if (this.nameVariantBuilder_ == null) {
        ensureNameVariantIsMutable();
        this.nameVariant_.add(index, builderForValue.build());
        onChanged();
      } else {
        this.nameVariantBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Contains entity type converted to different naming conventions.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcNameVariant nameVariant = 16;</code>
     */
    public Builder addAllNameVariant(
        java.lang.Iterable<? extends io.evitadb.externalApi.grpc.generated.GrpcNameVariant> values) {
      if (this.nameVariantBuilder_ == null) {
        ensureNameVariantIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, this.nameVariant_);
        onChanged();
      } else {
        this.nameVariantBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Contains entity type converted to different naming conventions.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcNameVariant nameVariant = 16;</code>
     */
    public Builder clearNameVariant() {
      if (this.nameVariantBuilder_ == null) {
        this.nameVariant_ = java.util.Collections.emptyList();
        this.bitField0_ = (this.bitField0_ & ~0x00000080);
        onChanged();
      } else {
        this.nameVariantBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Contains entity type converted to different naming conventions.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcNameVariant nameVariant = 16;</code>
     */
    public Builder removeNameVariant(int index) {
      if (this.nameVariantBuilder_ == null) {
        ensureNameVariantIsMutable();
        this.nameVariant_.remove(index);
        onChanged();
      } else {
        this.nameVariantBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Contains entity type converted to different naming conventions.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcNameVariant nameVariant = 16;</code>
     */
    public io.evitadb.externalApi.grpc.generated.GrpcNameVariant.Builder getNameVariantBuilder(
        int index) {
      return getNameVariantFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Contains entity type converted to different naming conventions.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcNameVariant nameVariant = 16;</code>
     */
    public io.evitadb.externalApi.grpc.generated.GrpcNameVariantOrBuilder getNameVariantOrBuilder(
        int index) {
      if (this.nameVariantBuilder_ == null) {
        return this.nameVariant_.get(index);  } else {
        return this.nameVariantBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Contains entity type converted to different naming conventions.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcNameVariant nameVariant = 16;</code>
     */
    public java.util.List<? extends io.evitadb.externalApi.grpc.generated.GrpcNameVariantOrBuilder>
         getNameVariantOrBuilderList() {
      if (this.nameVariantBuilder_ != null) {
        return this.nameVariantBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(this.nameVariant_);
      }
    }
    /**
     * <pre>
     * Contains entity type converted to different naming conventions.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcNameVariant nameVariant = 16;</code>
     */
    public io.evitadb.externalApi.grpc.generated.GrpcNameVariant.Builder addNameVariantBuilder() {
      return getNameVariantFieldBuilder().addBuilder(
          io.evitadb.externalApi.grpc.generated.GrpcNameVariant.getDefaultInstance());
    }
    /**
     * <pre>
     * Contains entity type converted to different naming conventions.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcNameVariant nameVariant = 16;</code>
     */
    public io.evitadb.externalApi.grpc.generated.GrpcNameVariant.Builder addNameVariantBuilder(
        int index) {
      return getNameVariantFieldBuilder().addBuilder(
          index, io.evitadb.externalApi.grpc.generated.GrpcNameVariant.getDefaultInstance());
    }
    /**
     * <pre>
     * Contains entity type converted to different naming conventions.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcNameVariant nameVariant = 16;</code>
     */
    public java.util.List<io.evitadb.externalApi.grpc.generated.GrpcNameVariant.Builder>
         getNameVariantBuilderList() {
      return getNameVariantFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        io.evitadb.externalApi.grpc.generated.GrpcNameVariant, io.evitadb.externalApi.grpc.generated.GrpcNameVariant.Builder, io.evitadb.externalApi.grpc.generated.GrpcNameVariantOrBuilder>
        getNameVariantFieldBuilder() {
      if (this.nameVariantBuilder_ == null) {
        this.nameVariantBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            io.evitadb.externalApi.grpc.generated.GrpcNameVariant, io.evitadb.externalApi.grpc.generated.GrpcNameVariant.Builder, io.evitadb.externalApi.grpc.generated.GrpcNameVariantOrBuilder>(
                this.nameVariant_,
                ((this.bitField0_ & 0x00000080) != 0),
                getParentForChildren(),
                isClean());
        this.nameVariant_ = null;
      }
      return this.nameVariantBuilder_;
    }

    private java.util.List<java.lang.Integer> hierarchyIndexedInScopes_ =
      java.util.Collections.emptyList();
    private void ensureHierarchyIndexedInScopesIsMutable() {
      if (!((this.bitField0_ & 0x00000100) != 0)) {
        this.hierarchyIndexedInScopes_ = new java.util.ArrayList<java.lang.Integer>(this.hierarchyIndexedInScopes_);
        this.bitField0_ |= 0x00000100;
      }
    }
    /**
     * <pre>
     * Contains set of all scopes the entity is indexed in and can be used for filtering entities and computation of
     * extra data. If the hierarchy information is not indexed, it is still available on the entity itself (i.e. entity
     * can define its parent entity), but it is not possible to work with the hierarchy information in any other way
     * (calculating parent chain, children, siblings, etc.).
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope hierarchyIndexedInScopes = 17;</code>
     * @return A list containing the hierarchyIndexedInScopes.
     */
    public java.util.List<io.evitadb.externalApi.grpc.generated.GrpcEntityScope> getHierarchyIndexedInScopesList() {
      return new com.google.protobuf.Internal.ListAdapter<
          java.lang.Integer, io.evitadb.externalApi.grpc.generated.GrpcEntityScope>(this.hierarchyIndexedInScopes_, hierarchyIndexedInScopes_converter_);
    }
    /**
     * <pre>
     * Contains set of all scopes the entity is indexed in and can be used for filtering entities and computation of
     * extra data. If the hierarchy information is not indexed, it is still available on the entity itself (i.e. entity
     * can define its parent entity), but it is not possible to work with the hierarchy information in any other way
     * (calculating parent chain, children, siblings, etc.).
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope hierarchyIndexedInScopes = 17;</code>
     * @return The count of hierarchyIndexedInScopes.
     */
    public int getHierarchyIndexedInScopesCount() {
      return this.hierarchyIndexedInScopes_.size();
    }
    /**
     * <pre>
     * Contains set of all scopes the entity is indexed in and can be used for filtering entities and computation of
     * extra data. If the hierarchy information is not indexed, it is still available on the entity itself (i.e. entity
     * can define its parent entity), but it is not possible to work with the hierarchy information in any other way
     * (calculating parent chain, children, siblings, etc.).
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope hierarchyIndexedInScopes = 17;</code>
     * @param index The index of the element to return.
     * @return The hierarchyIndexedInScopes at the given index.
     */
    public io.evitadb.externalApi.grpc.generated.GrpcEntityScope getHierarchyIndexedInScopes(int index) {
      return hierarchyIndexedInScopes_converter_.convert(this.hierarchyIndexedInScopes_.get(index));
    }
    /**
     * <pre>
     * Contains set of all scopes the entity is indexed in and can be used for filtering entities and computation of
     * extra data. If the hierarchy information is not indexed, it is still available on the entity itself (i.e. entity
     * can define its parent entity), but it is not possible to work with the hierarchy information in any other way
     * (calculating parent chain, children, siblings, etc.).
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope hierarchyIndexedInScopes = 17;</code>
     * @param index The index to set the value at.
     * @param value The hierarchyIndexedInScopes to set.
     * @return This builder for chaining.
     */
    public Builder setHierarchyIndexedInScopes(
        int index, io.evitadb.externalApi.grpc.generated.GrpcEntityScope value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureHierarchyIndexedInScopesIsMutable();
      this.hierarchyIndexedInScopes_.set(index, value.getNumber());
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Contains set of all scopes the entity is indexed in and can be used for filtering entities and computation of
     * extra data. If the hierarchy information is not indexed, it is still available on the entity itself (i.e. entity
     * can define its parent entity), but it is not possible to work with the hierarchy information in any other way
     * (calculating parent chain, children, siblings, etc.).
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope hierarchyIndexedInScopes = 17;</code>
     * @param value The hierarchyIndexedInScopes to add.
     * @return This builder for chaining.
     */
    public Builder addHierarchyIndexedInScopes(io.evitadb.externalApi.grpc.generated.GrpcEntityScope value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureHierarchyIndexedInScopesIsMutable();
      this.hierarchyIndexedInScopes_.add(value.getNumber());
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Contains set of all scopes the entity is indexed in and can be used for filtering entities and computation of
     * extra data. If the hierarchy information is not indexed, it is still available on the entity itself (i.e. entity
     * can define its parent entity), but it is not possible to work with the hierarchy information in any other way
     * (calculating parent chain, children, siblings, etc.).
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope hierarchyIndexedInScopes = 17;</code>
     * @param values The hierarchyIndexedInScopes to add.
     * @return This builder for chaining.
     */
    public Builder addAllHierarchyIndexedInScopes(
        java.lang.Iterable<? extends io.evitadb.externalApi.grpc.generated.GrpcEntityScope> values) {
      ensureHierarchyIndexedInScopesIsMutable();
      for (io.evitadb.externalApi.grpc.generated.GrpcEntityScope value : values) {
        this.hierarchyIndexedInScopes_.add(value.getNumber());
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Contains set of all scopes the entity is indexed in and can be used for filtering entities and computation of
     * extra data. If the hierarchy information is not indexed, it is still available on the entity itself (i.e. entity
     * can define its parent entity), but it is not possible to work with the hierarchy information in any other way
     * (calculating parent chain, children, siblings, etc.).
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope hierarchyIndexedInScopes = 17;</code>
     * @return This builder for chaining.
     */
    public Builder clearHierarchyIndexedInScopes() {
      this.hierarchyIndexedInScopes_ = java.util.Collections.emptyList();
      this.bitField0_ = (this.bitField0_ & ~0x00000100);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Contains set of all scopes the entity is indexed in and can be used for filtering entities and computation of
     * extra data. If the hierarchy information is not indexed, it is still available on the entity itself (i.e. entity
     * can define its parent entity), but it is not possible to work with the hierarchy information in any other way
     * (calculating parent chain, children, siblings, etc.).
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope hierarchyIndexedInScopes = 17;</code>
     * @return A list containing the enum numeric values on the wire for hierarchyIndexedInScopes.
     */
    public java.util.List<java.lang.Integer>
    getHierarchyIndexedInScopesValueList() {
      return java.util.Collections.unmodifiableList(this.hierarchyIndexedInScopes_);
    }
    /**
     * <pre>
     * Contains set of all scopes the entity is indexed in and can be used for filtering entities and computation of
     * extra data. If the hierarchy information is not indexed, it is still available on the entity itself (i.e. entity
     * can define its parent entity), but it is not possible to work with the hierarchy information in any other way
     * (calculating parent chain, children, siblings, etc.).
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope hierarchyIndexedInScopes = 17;</code>
     * @param index The index of the value to return.
     * @return The enum numeric value on the wire of hierarchyIndexedInScopes at the given index.
     */
    public int getHierarchyIndexedInScopesValue(int index) {
      return this.hierarchyIndexedInScopes_.get(index);
    }
    /**
     * <pre>
     * Contains set of all scopes the entity is indexed in and can be used for filtering entities and computation of
     * extra data. If the hierarchy information is not indexed, it is still available on the entity itself (i.e. entity
     * can define its parent entity), but it is not possible to work with the hierarchy information in any other way
     * (calculating parent chain, children, siblings, etc.).
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope hierarchyIndexedInScopes = 17;</code>
     * @param index The index of the value to return.
     * @return The enum numeric value on the wire of hierarchyIndexedInScopes at the given index.
     * @return This builder for chaining.
     */
    public Builder setHierarchyIndexedInScopesValue(
        int index, int value) {
      ensureHierarchyIndexedInScopesIsMutable();
      this.hierarchyIndexedInScopes_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Contains set of all scopes the entity is indexed in and can be used for filtering entities and computation of
     * extra data. If the hierarchy information is not indexed, it is still available on the entity itself (i.e. entity
     * can define its parent entity), but it is not possible to work with the hierarchy information in any other way
     * (calculating parent chain, children, siblings, etc.).
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope hierarchyIndexedInScopes = 17;</code>
     * @param value The enum numeric value on the wire for hierarchyIndexedInScopes to add.
     * @return This builder for chaining.
     */
    public Builder addHierarchyIndexedInScopesValue(int value) {
      ensureHierarchyIndexedInScopesIsMutable();
      this.hierarchyIndexedInScopes_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Contains set of all scopes the entity is indexed in and can be used for filtering entities and computation of
     * extra data. If the hierarchy information is not indexed, it is still available on the entity itself (i.e. entity
     * can define its parent entity), but it is not possible to work with the hierarchy information in any other way
     * (calculating parent chain, children, siblings, etc.).
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope hierarchyIndexedInScopes = 17;</code>
     * @param values The enum numeric values on the wire for hierarchyIndexedInScopes to add.
     * @return This builder for chaining.
     */
    public Builder addAllHierarchyIndexedInScopesValue(
        java.lang.Iterable<java.lang.Integer> values) {
      ensureHierarchyIndexedInScopesIsMutable();
      for (int value : values) {
        this.hierarchyIndexedInScopes_.add(value);
      }
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Integer> priceIndexedInScopes_ =
      java.util.Collections.emptyList();
    private void ensurePriceIndexedInScopesIsMutable() {
      if (!((this.bitField0_ & 0x00000200) != 0)) {
        this.priceIndexedInScopes_ = new java.util.ArrayList<java.lang.Integer>(this.priceIndexedInScopes_);
        this.bitField0_ |= 0x00000200;
      }
    }
    /**
     * <pre>
     * Contains set of all scopes the price information is indexed in and can be used for filtering entities and computation
     * of extra data. If the price information is not indexed, it is still available on the entity itself (i.e. entity
     * can define its price), but it is not possible to work with the price information in any other way (calculating
     * price histogram, filtering, sorting by price, etc.).
     * Prices can be also set as non-indexed individually by setting {&#64;link PriceContract#indexed()} to false.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope priceIndexedInScopes = 18;</code>
     * @return A list containing the priceIndexedInScopes.
     */
    public java.util.List<io.evitadb.externalApi.grpc.generated.GrpcEntityScope> getPriceIndexedInScopesList() {
      return new com.google.protobuf.Internal.ListAdapter<
          java.lang.Integer, io.evitadb.externalApi.grpc.generated.GrpcEntityScope>(this.priceIndexedInScopes_, priceIndexedInScopes_converter_);
    }
    /**
     * <pre>
     * Contains set of all scopes the price information is indexed in and can be used for filtering entities and computation
     * of extra data. If the price information is not indexed, it is still available on the entity itself (i.e. entity
     * can define its price), but it is not possible to work with the price information in any other way (calculating
     * price histogram, filtering, sorting by price, etc.).
     * Prices can be also set as non-indexed individually by setting {&#64;link PriceContract#indexed()} to false.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope priceIndexedInScopes = 18;</code>
     * @return The count of priceIndexedInScopes.
     */
    public int getPriceIndexedInScopesCount() {
      return this.priceIndexedInScopes_.size();
    }
    /**
     * <pre>
     * Contains set of all scopes the price information is indexed in and can be used for filtering entities and computation
     * of extra data. If the price information is not indexed, it is still available on the entity itself (i.e. entity
     * can define its price), but it is not possible to work with the price information in any other way (calculating
     * price histogram, filtering, sorting by price, etc.).
     * Prices can be also set as non-indexed individually by setting {&#64;link PriceContract#indexed()} to false.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope priceIndexedInScopes = 18;</code>
     * @param index The index of the element to return.
     * @return The priceIndexedInScopes at the given index.
     */
    public io.evitadb.externalApi.grpc.generated.GrpcEntityScope getPriceIndexedInScopes(int index) {
      return priceIndexedInScopes_converter_.convert(this.priceIndexedInScopes_.get(index));
    }
    /**
     * <pre>
     * Contains set of all scopes the price information is indexed in and can be used for filtering entities and computation
     * of extra data. If the price information is not indexed, it is still available on the entity itself (i.e. entity
     * can define its price), but it is not possible to work with the price information in any other way (calculating
     * price histogram, filtering, sorting by price, etc.).
     * Prices can be also set as non-indexed individually by setting {&#64;link PriceContract#indexed()} to false.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope priceIndexedInScopes = 18;</code>
     * @param index The index to set the value at.
     * @param value The priceIndexedInScopes to set.
     * @return This builder for chaining.
     */
    public Builder setPriceIndexedInScopes(
        int index, io.evitadb.externalApi.grpc.generated.GrpcEntityScope value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensurePriceIndexedInScopesIsMutable();
      this.priceIndexedInScopes_.set(index, value.getNumber());
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Contains set of all scopes the price information is indexed in and can be used for filtering entities and computation
     * of extra data. If the price information is not indexed, it is still available on the entity itself (i.e. entity
     * can define its price), but it is not possible to work with the price information in any other way (calculating
     * price histogram, filtering, sorting by price, etc.).
     * Prices can be also set as non-indexed individually by setting {&#64;link PriceContract#indexed()} to false.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope priceIndexedInScopes = 18;</code>
     * @param value The priceIndexedInScopes to add.
     * @return This builder for chaining.
     */
    public Builder addPriceIndexedInScopes(io.evitadb.externalApi.grpc.generated.GrpcEntityScope value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensurePriceIndexedInScopesIsMutable();
      this.priceIndexedInScopes_.add(value.getNumber());
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Contains set of all scopes the price information is indexed in and can be used for filtering entities and computation
     * of extra data. If the price information is not indexed, it is still available on the entity itself (i.e. entity
     * can define its price), but it is not possible to work with the price information in any other way (calculating
     * price histogram, filtering, sorting by price, etc.).
     * Prices can be also set as non-indexed individually by setting {&#64;link PriceContract#indexed()} to false.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope priceIndexedInScopes = 18;</code>
     * @param values The priceIndexedInScopes to add.
     * @return This builder for chaining.
     */
    public Builder addAllPriceIndexedInScopes(
        java.lang.Iterable<? extends io.evitadb.externalApi.grpc.generated.GrpcEntityScope> values) {
      ensurePriceIndexedInScopesIsMutable();
      for (io.evitadb.externalApi.grpc.generated.GrpcEntityScope value : values) {
        this.priceIndexedInScopes_.add(value.getNumber());
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Contains set of all scopes the price information is indexed in and can be used for filtering entities and computation
     * of extra data. If the price information is not indexed, it is still available on the entity itself (i.e. entity
     * can define its price), but it is not possible to work with the price information in any other way (calculating
     * price histogram, filtering, sorting by price, etc.).
     * Prices can be also set as non-indexed individually by setting {&#64;link PriceContract#indexed()} to false.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope priceIndexedInScopes = 18;</code>
     * @return This builder for chaining.
     */
    public Builder clearPriceIndexedInScopes() {
      this.priceIndexedInScopes_ = java.util.Collections.emptyList();
      this.bitField0_ = (this.bitField0_ & ~0x00000200);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Contains set of all scopes the price information is indexed in and can be used for filtering entities and computation
     * of extra data. If the price information is not indexed, it is still available on the entity itself (i.e. entity
     * can define its price), but it is not possible to work with the price information in any other way (calculating
     * price histogram, filtering, sorting by price, etc.).
     * Prices can be also set as non-indexed individually by setting {&#64;link PriceContract#indexed()} to false.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope priceIndexedInScopes = 18;</code>
     * @return A list containing the enum numeric values on the wire for priceIndexedInScopes.
     */
    public java.util.List<java.lang.Integer>
    getPriceIndexedInScopesValueList() {
      return java.util.Collections.unmodifiableList(this.priceIndexedInScopes_);
    }
    /**
     * <pre>
     * Contains set of all scopes the price information is indexed in and can be used for filtering entities and computation
     * of extra data. If the price information is not indexed, it is still available on the entity itself (i.e. entity
     * can define its price), but it is not possible to work with the price information in any other way (calculating
     * price histogram, filtering, sorting by price, etc.).
     * Prices can be also set as non-indexed individually by setting {&#64;link PriceContract#indexed()} to false.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope priceIndexedInScopes = 18;</code>
     * @param index The index of the value to return.
     * @return The enum numeric value on the wire of priceIndexedInScopes at the given index.
     */
    public int getPriceIndexedInScopesValue(int index) {
      return this.priceIndexedInScopes_.get(index);
    }
    /**
     * <pre>
     * Contains set of all scopes the price information is indexed in and can be used for filtering entities and computation
     * of extra data. If the price information is not indexed, it is still available on the entity itself (i.e. entity
     * can define its price), but it is not possible to work with the price information in any other way (calculating
     * price histogram, filtering, sorting by price, etc.).
     * Prices can be also set as non-indexed individually by setting {&#64;link PriceContract#indexed()} to false.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope priceIndexedInScopes = 18;</code>
     * @param index The index of the value to return.
     * @return The enum numeric value on the wire of priceIndexedInScopes at the given index.
     * @return This builder for chaining.
     */
    public Builder setPriceIndexedInScopesValue(
        int index, int value) {
      ensurePriceIndexedInScopesIsMutable();
      this.priceIndexedInScopes_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Contains set of all scopes the price information is indexed in and can be used for filtering entities and computation
     * of extra data. If the price information is not indexed, it is still available on the entity itself (i.e. entity
     * can define its price), but it is not possible to work with the price information in any other way (calculating
     * price histogram, filtering, sorting by price, etc.).
     * Prices can be also set as non-indexed individually by setting {&#64;link PriceContract#indexed()} to false.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope priceIndexedInScopes = 18;</code>
     * @param value The enum numeric value on the wire for priceIndexedInScopes to add.
     * @return This builder for chaining.
     */
    public Builder addPriceIndexedInScopesValue(int value) {
      ensurePriceIndexedInScopesIsMutable();
      this.priceIndexedInScopes_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Contains set of all scopes the price information is indexed in and can be used for filtering entities and computation
     * of extra data. If the price information is not indexed, it is still available on the entity itself (i.e. entity
     * can define its price), but it is not possible to work with the price information in any other way (calculating
     * price histogram, filtering, sorting by price, etc.).
     * Prices can be also set as non-indexed individually by setting {&#64;link PriceContract#indexed()} to false.
     * </pre>
     *
     * <code>repeated .io.evitadb.externalApi.grpc.generated.GrpcEntityScope priceIndexedInScopes = 18;</code>
     * @param values The enum numeric values on the wire for priceIndexedInScopes to add.
     * @return This builder for chaining.
     */
    public Builder addAllPriceIndexedInScopesValue(
        java.lang.Iterable<java.lang.Integer> values) {
      ensurePriceIndexedInScopesIsMutable();
      for (int value : values) {
        this.priceIndexedInScopes_.add(value);
      }
      onChanged();
      return this;
    }

    private long catalogSchemaVersion_ ;
    /**
     * <pre>
     * Contains current version of the catalog schema this entity schema belongs to.
     * </pre>
     *
     * <code>int64 catalogSchemaVersion = 19;</code>
     * @return The catalogSchemaVersion.
     */
    @java.lang.Override
    public long getCatalogSchemaVersion() {
      return this.catalogSchemaVersion_;
    }
    /**
     * <pre>
     * Contains current version of the catalog schema this entity schema belongs to.
     * </pre>
     *
     * <code>int64 catalogSchemaVersion = 19;</code>
     * @param value The catalogSchemaVersion to set.
     * @return This builder for chaining.
     */
    public Builder setCatalogSchemaVersion(long value) {

      this.catalogSchemaVersion_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Contains current version of the catalog schema this entity schema belongs to.
     * </pre>
     *
     * <code>int64 catalogSchemaVersion = 19;</code>
     * @return This builder for chaining.
     */
    public Builder clearCatalogSchemaVersion() {

      this.catalogSchemaVersion_ = 0L;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:io.evitadb.externalApi.grpc.generated.GrpcEntitySchema)
  }

  // @@protoc_insertion_point(class_scope:io.evitadb.externalApi.grpc.generated.GrpcEntitySchema)
  private static final io.evitadb.externalApi.grpc.generated.GrpcEntitySchema DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.evitadb.externalApi.grpc.generated.GrpcEntitySchema();
  }

  public static io.evitadb.externalApi.grpc.generated.GrpcEntitySchema getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<GrpcEntitySchema>
      PARSER = new com.google.protobuf.AbstractParser<GrpcEntitySchema>() {
    @java.lang.Override
    public GrpcEntitySchema parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new GrpcEntitySchema(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<GrpcEntitySchema> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<GrpcEntitySchema> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.evitadb.externalApi.grpc.generated.GrpcEntitySchema getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

