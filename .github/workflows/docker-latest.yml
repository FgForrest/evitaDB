# This job builds and deploys Docker image to DockerHub

name: DockerHub-deploy

on:
  workflow_run:
    workflows: ['CI Master branch']                     # runs after CI workflow
    types:
      - completed

jobs:
  on-success:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - uses: actions/checkout@v3        # checkout from Git

      - name: Download a single artifact # download `evita-server.jar` artifact if the workflow we react to was successful
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: ${{ github.event.workflow_run.workflow_id }}
          workflow_conclusion: success
          name: evita-server.jar
          path: docker

      - name: Set up QEMU
        # Add support for more platforms with QEMU (optional)
        # https://github.com/docker/setup-qemu-action
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          buildkitd-flags: --debug
          platforms: linux/amd64,linux/arm64/v8

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ vars.CI_REGISTRY_USER }}
          password: ${{ secrets.CI_REGISTRY_PASSWORD }}

      - name: Extract major version
        id: major_version
        run: echo "version=$(echo '${{ github.event.workflow_run.outputs.released_version }}' | cut -d'.' -f1,2)" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        env:
          RELEASE_IMAGE: "evitadb:latest"
          EVITA_JAR_NAME: evita-server.jar
          MAJOR_VERSION: ${{ steps.major_version.outputs.version }}
        uses: docker/build-push-action@v3
        with:
          context: ./docker
          file: ./docker/Dockerfile
          pull: true
          push: true
          tags: |
            ${{ vars.CI_REGISTRY_USER }}/${{ env.RELEASE_IMAGE }}
            ${{ vars.CI_REGISTRY_USER }}/evitadb:${{ env.MAJOR_VERSION }}
          platforms: linux/amd64,linux/arm64/v8
          build-args: |
            EVITA_JAR_NAME=${{ env.EVITA_JAR_NAME }}
