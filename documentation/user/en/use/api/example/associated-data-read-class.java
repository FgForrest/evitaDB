@EntityRef("Product")
@Data
public class MyEntity {

	// example ComplexDataObject type
	public record Localization(
		@Nonnull Map<String, String> texts
	) { }

	// contains associated data `warrantySpecification` if fetched and not null
	@AssociatedData(name = "warrantySpecification", localized = true)
	@Nullable private final String warrantySpecification;

	// contains associated data `warrantySpecification` if fetched and not null
	@AssociatedDataRef("warrantySpecification")
	@Nullable private final String warrantySpecificationAgain;

	// contains associated data `parameters` or null if not fetched or not set
	@AssociatedDataRef("parameters")
	@Nullable private final String[] parameters;

	// contains associated data `parameters` or empty collection if not fetched or not set (it never contains null value)
	@AssociatedDataRef("parameters")
	@Nonnull private final Collection<String> parametersAsCollection;

	// contains associated data `parameters` or empty list if not fetched or not set (it never contains null value)
	@AssociatedDataRef("parameters")
	@Nonnull private final List<String> parametersAsList;

	// contains associated data `parameters` or empty set if not fetched or not set (it never contains null value)
	@AssociatedDataRef("parameters")
	@Nonnull private final Set<String> parametersAsSet;

	// contains associated data `localization` or null if not fetched or not set
	@AssociatedDataRef("localization")
	@Nullable private final Localization localization;

	// constructor is usually generated by Lombok
	public MyEntity(
		String warrantySpecification, String warrantySpecificationAgain,
		String[] parameters, Collection<String> parametersAsCollection, List<String> parametersAsList, Set<String> parametersAsSet,
		Localization localization
	) {
		this.warrantySpecification = warrantySpecification;
		this.warrantySpecificationAgain = warrantySpecificationAgain;
		this.parameters = parameters;
		this.parametersAsCollection = parametersAsCollection;
		this.parametersAsList = parametersAsList;
		this.parametersAsSet = parametersAsSet;
		this.localization = localization;
	}
}
