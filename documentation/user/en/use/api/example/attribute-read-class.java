@EntityRef("Product")
@Data
public class MyEntity {

	// contains attribute `name` if fetched and not null
	@Attribute(name = "name", localized = true)
	@Nullable private final String name;

	// contains attribute `name` if fetched and not null
	@AttributeRef("name")
	@Nullable private final String nameAgain;

	// contains attribute `markets` or null if not fetched or not set
	@AttributeRef("markets")
	@Nullable private final String[] markets;

	// contains attribute `markets` or empty collection if not fetched or not set (it never contains null value)
	@AttributeRef("markets")
	@Nonnull private final Collection<String> marketsAsCollection;

	// contains attribute `markets` or empty list if not fetched or not set (it never contains null value)
	@AttributeRef("markets")
	@Nonnull private final List<String> marketsAsList;

	// contains attribute `markets` or empty set if not fetched or not set (it never contains null value)
	@AttributeRef("markets")
	@Nonnull private final Set<String> marketsAsSet;

	// constructor is usually generated by Lombok
	public MyEntity(
		String name, String nameAgain,
		String[] markets, Collection<String> marketsAsCollection, List<String> marketsAsList, Set<String> marketsAsSet
	) {
		this.name = name;
		this.nameAgain = nameAgain;
		this.markets = markets;
		this.marketsAsCollection = marketsAsCollection;
		this.marketsAsList = marketsAsList;
		this.marketsAsSet = marketsAsSet;
	}
}
